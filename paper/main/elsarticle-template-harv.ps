%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: elsarticle-template-harv.dvi
%%CreationDate: Mon Jun 23 12:12:18 2014
%%Pages: 11
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMR17 CMR12 CMBX12 CMMI12 CMSY8 CMR8 CMSY10 CMTI12
%%+ CMTI10 CMMI8 CMEX10 CMR10 CMMI10 Times-roman CMMI7 CMBX10 CMSY7
%%+ Dingbats CMR7
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o elsarticle-template-harv.ps
%+ elsarticle-template-harv.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.06.23:1212
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A516AD96B9354BCDBEBB351B643BF3CB00446AFFC4A137CB928E99D626
4824385F1E9CEAE6E317451B4ED21EF01ACC5ABA985FB14EE70247FA3B66ECEE
431352ED45182614EA3D57BDC22E5A04D5AAB27C8ADCD7BC07BBAB21A1901F39
4C9C008D353F0EED437BC00D2E65A3652361D50E16C785B66DC1D551961F641B
032E133A31A61A335EA302469363987224158BBCAC91357E79DC8F409A928EB1
8E1FFCDC81E7B443ECF0A6D728FAB96395460B33F57CA9B88C746B9B7B453D4C
0755B802DD31E854C52DA0804B611B6014BDF91BF76B6E491F4BD5C46574FDCE
673B03F3D6FD5F8B860A2556FCE98FDCAFA81B35DAA07BEDB39ADAA041BE5ED0
02EE5663F1C139979D11BBB51693C13514CF00CC7F9E9AA38726D6B1AEDAAA46
FEFE290831071E035F68E9FB2AB771DFD9E7EB3E255BD3FD51F325AF0AAB03F3
C001351BCC357E49F8A94A7481991B6239C7D48C5D55D3FED290DF6AFB2E23EF
1FB63022D8230A40B34546705D09709C2A02F219434E951DFA82A1339C095723
10190C4CA5F9B9F98179382216FE74381A001AB228066DC706493D1267F2263B

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: Dingbats
%!PS-AdobeFont-1.0: Dingbats 001.005
%%CreationDate: Tue Oct 19 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Dingbats ) readonly def
/FamilyName (Dingbats) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -72 def
/UnderlineThickness 36 def
end readonly def
/FontName /Dingbats def
/PaintType 0 def
/WMode 0 def
/FontBBox {-1 -143 981 819} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 83 /a46 put
dup 108 /a71 put
dup 116 /a77 put
dup 117 /a78 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB737CF9024F3D038DF9A0002D
8FB689C5F5000C3ADDAFE55EDCBC4E54B36A58190743E32FDCA7A24B64F5E7F9
DC901DE44A25E99E322B3D3CBC10C0412B0531B14E81134FD1DEC47BCB7514E4
64E7550B900404A017C92336BC792744F6F38904282AFE8C998D4B9DB7893830
A6A01872E9D6AABF66C4B08716A39BD9E5ACC0641E506B70430524E780517E59
81EAECFCF9798A634318B8D160438435B65CC6910E609F13A4963AEF2B2540DA
DDD64E0E1D15EFDD5D36D4FCD9E4D81E21D52784DD3DBB741AB5FC052F481B1A
A701AB81CF4EB85075726F3FEC0872C02EBF4D62F5DFB8990C1A0CC8161F83A2
D01108B6C4AEC3845BB4F61288F733429B7B558A225D582AC04BEBF127E8DB14
B59F027502AF59E46E0063B792D35B2DA4EE7DC3F2A64DB325318C1CB1A57504
3527B10BDC733305E18032A64A1002439BE13D163AEE778CAAF5A7A8D00CCCCA
673B8FA9A99551594E85F21580733527E4E19743F4C932D443625DB353CA959B
FBB3BC7996F1F3559E8738D7B3FF1FC8AAFD28CE8C9CDF3CC10A8E7DCE003893
8BB497D690310A0380F290601BE482029578B45097DBD56F52352D7F931A1A1C
735A74CA33FC62A04E1D1E1B023877B96EA2AE6E5E42682E9F4BABD109F039E3
CDCC6B0F9404DA157F91B61905B34C39BD0543872FEBA04FADF1DD613E1E9822
560851385E512B3754A099D21B332D2C9547EEE2B94EBC03B2D954DE0D64D28B
5C0305C968BF1EA14529BE16F9E7F147B08D71B9332ABB7B5EF1B8B60A8D19F5
22B497164EA1A20E17E9B45FEE5281EBCFD11B2D6BBBFAFE239C3137E5276E3B
AB942C02C4AE5937EC7F21EFAF17BF06C490CECE2FB1233BCBBAF3950314E428
500547C4674381180D6CA7EAF6BA47601FB7A09745C7B6B5DB0E3B3C49BB227C
B3095E2FE428B73E17B97174A1D01198341186EE660ED441CEF1BE210F734E04
370F865C51D46D6B7AE0A553D47D6601B3B3B4CCDD8B20609D0930011CDEE40F
712DF8533B2B6DE7AC43E5D33BEC0B529CFC382EB04E44522CCEA498542AA525
7A76227AAE8D86C3E6CD260EE987CF27CE8DCCA4D8CBC18CF4DC6CFD2591D4D5
F7C3E77F010A1369257C195560586B100ECE3173F26486B4C200AF430F9303DC
24EED00FA073117C6057AB831C6F92A8863B20C17A201E21DB8536F8C3105D0C
87AA40E364E12237BF440E6912CFD7805D7F2CB887DCE2B6A68D30534E7729BB
841FF3A52B40F2A138050D7784B535AEED4DF2DBE5F1C55F74F94AF5F117C4EB
AAECB5477735A1FEE420956AD532CCE53227E6118D0D24198A64FF8C3D3C824C
0E74E79B12859528B94681E119AB0AB0C79E537FAA1F1599EBF587FC48718ADC
919B51E66B1D58878550DE02E5CD68BAAF0C4BDB900E61D8E1A0CE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749E08
D67D1208C693A6640D1BD6B9285AC0D3110CBF8F7747AD12585141C3248D0BB5
BDE892F91A4B3291F21F30294693518E4629A3ADD7C8640E424FF615602C603E
1E14DCB3B17D34C090BEAD2A523E260A599522329B698729A635CFB15BE7E79E
6A34DAC7C3ED57340821A4E7A0C7F88F64BAA69BB80DFA8B659F4756878E3044
E1DB7EE4FE60074AF97818B3D36CF51110191B4E10655F52CC5D11F56517CFF9
04BA2676F4147DC8192C98C555B00D1AD408DFA68317242807EE3C882034CAE3
F78F40E9A456BCE29C7A942521953D9F32D503ACC6363E3719FDA66CB6A0EA73
47B41E254A9A947295DB66AFA891D9BA6D49BCB4D9FE877F6B93D17CD9EA8B1B
29198097EC34C254C3BB351CFAF49829F5126BBECC7EA27A512D0D2798E40E31
3C92D82CFFAD4D73C32468CAC3649B591C4BFF3C893BADBD1EC5175315D150C5
31DB52CFEFC656541348D8F223E5C93AE6947D76EC59D97F97A4A926B30E1010
E0520DE07F8C1F16FF7B32BD254816C19F5DB20A431F98EC2C6A31DD256CA630
D7C620684782DCF77C25BA7CF8FB0C661C6993DDE16371EEDABF5A8635A90F90
F11723D1D99815D935F8545DAE99609DF76C5F77027569AC592FD2AE37300994
74EE07B28D03926C597BAC4FB432D884191966687188466F7604775C5BD8F7C6
10
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 6 /plusminus put
dup 15 /bullet put
dup 20 /lessequal put
dup 33 /arrowright put
dup 49 /infinity put
dup 65 /A put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE105BF5F504AB332FC17E568681
F423D1125A596766BE58ADC658888DB39BA74F67CE0E26C392220832FB036E93
7587E96684BFB78BD035F54AF71B2408241AAF548F996AD440155624B3EDDC79
2102EE58E1E27EAA0675F1F13297A4CAF514CB319E58D424A820B8F489849874
290FE1B832EFCB1FDE6F5E4384527F64DA7ED34BE1221A06A800C42F01AD4743
0A28FD5CF2570FC8E1399E48EC3B4CD8612743C8EB8AF6D8424C4DA192CDB43B
51BE93C720DABE9D5862CCEC352E059B25D1F131576B9FF6E6D1128A1B8A845F
85BFEAD5C54A4688178E4CB3B5C7D4E3506788AE9C4AA174EEDEF93234184590
D0E15A61CF66D14D63A6D9D60BD5AEC4B4713FB09A220A308D5E1940EE1E6132
5A56554D946738365140A3C7CBEAC69BFCA578E08063E9DD92BEA89D6922E058
7A07130D78BD3C2105AEB6E9BED9E295422F3CFE0AB4740C94DF3DC4449BB642
9FE2FDF43D0DF3764AC0929B928B51AFBADE4F07107C1943C82A6B9182799465
7064255432A85E083C31429D661FE9A2493B80AB328C363D1C9E3DB8C32FF5C8
5CEE205E020B27F5307E9DD908B6F06C79D67D8B32D4B1C81A69FD99D2F8402F
2218804A01217BCC5916F89C6EE82453156B3853F2C9BD64FB5B4130EE5285A1
662A488F9938A6310DAC0D62391C2F54C6963C5E29C3E7CE2BD2C3D945F0003D
5F49FADD61AD45BBF4543DC5179CAA01BEA7344A65F50D20A5CABCF87D2303F0
1B8CC6D982C26C9643935BB56BD3C3BC4C90FF544E72F6F93EBE4AE081440016
2576E6DFE34361A9E4A5E42FDBE6DFD31CF1172A761DC91B2470E1E57A9ECA5F
80DDBA707D9DB327B90931730138C297DD0E53D102AB77A7B499887D6E5F52AD
CAEA0FD3D75BB50F478B594D7B3B58ED485C97D684EEE1493577AF11D2DEEECE
38ECCA185D44C27B17F0B5834E1DE348EA8040A7664F3A18BCE796D4B5399651
84BEF4457BEA625F76B7A592DBF2E2282EEF21283534F91CFE4AC85AD9E4434D
F3BE9D5E51E3BE6BCE3CC2DACD37581ED3E3D3D632EC108657F6729D53FBE458
DBA3ECB49F39884086693550889C076F08581A99DF53D3A9330372C5C9E9220B
324D2A3604A07DB9D715E8A1F2DE8B22399ACF5226C9C9169F59DFB46D529F07
3D07E1DF099A210FC06CA4B197884CEA2635D196AF8987CEADFD99DDBA145E60
73611BE138AE74B482FFE5100928358BA45169F883AA318634637FFD11EBE91A
9A5BCDEBB02C23C1C1EBF9B8FCAD41070BFB479D2FADF76372C9528FFE601C07
746A02B5B5DB4D069835BA2917F289A0C02852EC583C3B4FF8013CE3D9ABF669
F90B6DC2523568419C24707DF485F17D0782D8B19DADBA3BF1FF71590E2036D1
CD0B2C6AD6FB9DA3B02D401C2DFC7875C59DEAA7038795986D6EFD54B2479D98
9F4781CF95F9A9ABE3834A971BF74AD41E4FFAAB13E2AAC5765BA297AB34E0FD
B25AF98EF04FD9A48B3476CD1C92F4C45ABF07F0F14FE40AD2A91DAF99341496
7A8984EFA93E0096C693FE5B6F1840DBD95E9EFB7B7F5E622F178A5748C0BC97
05BA2BB16BD40B729A9FF1AE4D36CCB0DA6B19DC0875C8961EF5F86974D08321
8394D23AEB517D17A15BA62204E7B1C3B37B8E33591BA0276B75911183BCEB4E
13325BC6EEEB29EC3BF18EBE883EBB3C508F12B5268090445E592D1E82C7412A
563928C52B49B407B22567F93C820ABD74D27111C8C450FB74B905D28AF5130D
40E00D4147CDCB3BCD55FC753DB41D05A9E820F7BC6902478ABAD905E5629D03
4584BE88A16AA50ED465317571EBDB03D60B9F2C9BF50CC2D646B313A0A78126
F1913D9DF6098532BFDBD18339408256C103BFFD2379E4BAE1D6FF6F57089547
76764647C89E73563DF6AD1B8032F21AB710
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /question put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DC6B86AA73E883ABDC43AA6155756145B9EE8EFC505738B7AAA434E093E
029F4BDA397FACAB37996C354110879CA5EAC9D735A9EAD4C6090650B5D5023D
FC9947DE3D2582C88B2C8C9C6213593ED5EFBFCB8EB161A9C9F572701A3C80AA
033903CBED807628BE32BA603E03194E76D374D3813FEBD09ABCAE0CEDC276B1
390CAEE8408FA4E01108DF54D34CD31F444F24C67742DB868CC2967CDA1B8562
C4DC3AAE53445277C899FE86E54B8BDB1490AC76FF84E6E695E526BF8394BE7D
685F4AE35AA17151913D70F35CD7820B221FE0B71A0CA584024C964575599D83
F428992270E1039CAEE78B2D136545062399ED51E17EFE2DD72FD72ECAF8623A
C2C6E1DE8EF99678F333A0A25549721103667E88138D473DCBFDA8573A59C59C
5287D92E1A8CB5A195036AE42DFBAFB1E18A1941C494C795ECF17CAA969792C8
628B6809C79D5B58F56106EE7EFA0BDED029D2273032E1C8A5CD07991064AB2F
20E7735CFD4B13C2A8CBBE519A8F57C66B98A31ED82CC4A183ED86D278180D66
D97CE9B52FE6867C09D913F35AB9B9F6931BF820312DBDE76CEAF3D3F2EECA19
9594CF093FB8D49DAB28DA0EDB9463F81A02C55BD1C45D2C5729767507D93B8C
0D596E1098DB1CFB42CB821E8FA5B5B93BFB454C7CD598BCC5F92BA5486A550A
868D0C17E5861E79939718243DB1F2F6B23D7BC51D926CA86263840FFCC3BAF7
98B72E5F9191183CA5F1FCD9BACF833A9D58F384DC27B11B30790AFC75BAB14B
817CE2AD91E5FB8C735C681B6128A010E20DBD21C85CCC6C44715E1D1185646D
94321C24DDAF7FD77CB534E74F590AC18F55EAF42B6D05A127813E9A8F6B24CC
94A37ED7FE37D7D03026506C2B2940F87D0F698713B90AC7FA85278A2142CFD0
DA1D1C596EB9150A402C5C350AC7EEAB82D64F9A5EB6A08F745B3D99FA2ED03C
4764B438BFC2453C885BBF4681C524B689F96E3FEA51EF125D16E90735438650
54FAF9B77F9884F052D1DB422D245201FBD6463F31D19F41FDB621D02C36E94E
D84C9A5708441BAEA7F510443C57722A7FAC52BA1B67DA2B7114DC06904F0682
0D55CD9763824E0FF1718B5F45C6372BAB01A1318A6E3EA547E7DC86A6577311
0E7CEB4D7891054C2BA51E97C161BF37E788FBECC240A98771686075392EA0D2
84705383D05EA02D410DA660EE50583BE34AA67C3E5118215C01EA61946012C9
067C9C62489BD3FA644E5CFE8042A24386915DD90F320B05B4EDC2FE42CBBFE4
3634791DB7B31DB1EF048E123DE73B5AFA62C6E6F11127F3C3BDA4C87BF6632D
06737AC9B3E36E631A3E994DBD32E072228FEB68807EB097106250EF6A2BEC06
9187F54D15342F45D4F7750EDD2F2E80AFCD60F29551F39AFE3FFAD162368428
5DDA80111CBB619C8036F6BE8AE71EDBFAD15C24E79ECBF4E1D833EF1073BC90
2817ACEB8D723B1868C5ED5B3E32888C05218DCD8124F8E93E24F05AB2FA84A4
AC44DD3CBEE1FF2514948AC8E0BF484B0A702514C15517C54235F261538F608C
93ADF044C39BD2A560B752B92F3CD8C96EAA02F137C2134A47241E3F15A881F6
A7E91CF29780690190D2E829323F3BA9F7ED7D399CE556CD447ACB8FAA2F5A7C
E0F51CCA3DBB2DEDAB0671FCB1ACF80687D6383CA578157328AA019A4616E1CF
66B4F48C0B7DBD8AD9FF3B7B5B4A1B7CA05420725E668CBE626B87CF0AF02110
35F415C5B593CA786F56190106A0FC93815CB4580C6C918147E883F119FA4EC8
5B187B18772218EE8244B5225E97FEA8CA8375AC2A6167C33BF255C2452BE88D
88C9F2E545EC8663116E1A22AE4194F920986C6CF3A993077C0B2501E3E89819
2330E9CA13D9C379F6D4BF688ACAF9F67A367AD560E2A8E037290EACAB5FC3D9
0C30A01449D0F3E878F9696E5F3C75320B4A2FB4C322929A703A21EE08BED8A8
1F05BFCB0D4DC15F48F3C8B811F01130BCD6ADF92AC26C79FFE09DEAB661F37F
30965BCF2B6B8D282CCECB4F6E7B5B6B3B61D5858256AD27D93969EBA7EC108B
439C71C6BE51A9C94D9CF8F08C6EAF9956F24A5748ECB4D1A196028414E78C7D
ED728931C69862624F6F7CAD4242AE6C63D047AAC8EF82134EC41A4C07BF8035
C973E5CAD59E4B00A05C45E7A9BB9C91AD5C4DF64925215CC4DF3BC0DA1077DE
75F932A39CA4D0B6C8033AACBCBF0029B8C7842404AEC20DE773757887BEB3F6
85B182706F5DB4C7C4BC2FB81A7D0A25308E5AF4F5EC3AE71C90564DE359480E
5EFB6D341C492CB8924E2A7A8B42B02C25CAFE2EB3E9292F3EDF146036351104
954ABB269B117E393AC5E328654BC8C030E18A42C47DD0FA1EE3521C98714EC4
51AB5BC0886A60F27EF31C45E92F4717D8FBD4A0844A8D96EED2F1BA2D3363ED
FA1FFD7BC6553AFE3E7BC6F466CDCC0C922AEF593F091226BD53504A414099BA
8E09620FCB3CB63E55734B673E53DF4FA4F2D087E6F86187055AAA4B08E97B5B
D3466C6897065446F765344F38B9FBF4083B75C000F0A56FFE04BAEE21591AEE
7E88E90272314C412C5DB4A6BB35BC938B24815C2EB58F2B5CB3ACF56291130D
485900B740DCC13D5A50F9EED8B7E8819FDF73593BB7480C7784A2BE3C87F18F
AB97CEA346E6CD005B1BF4DC4783EF5A0B201F0AB380DDAE690A4F45062399BE
1E2FB26DAD6B329E36242FCB212624A529F46FFE55CEC8D6F7F2DF16EAA321E3
830A6373589B95E58CA133E35E8CCA877F264F9CD06964E2B14F8B54DB43DB8C
DF56E41258CF78C224361F5C85AB56203C61E990AF66D4DF7E11D5AFD4B8A367
C169DC77134E66AEB672A0F29CDEC404301DE828EC4238FB3299EFFA2474EE0A
12358555C97C4DBCF708DB0174E3FA6630D15623D6F54195B03B409FCF582750
DEF13CBC7920A216F1F88CF689BBCBB788D347CD22F18BA2FC78C89C3E209A6C
CFC49042CDE21A59A81B139B09904369CFE364DE7799DC0904A66F895E425214
9FA067003B2A88A2B91166C717C8D60ACCD607206D73BE02903B8F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D76A470B0602AE45106417
0701ACD2C764DDE218B924E38B5A13CB82678372E743A8B3CC300BCBBB878978
D9847F0640A031D5E76B5AD07699C3B2FC6C1DBBF79938BA649C152FFB2B5BBA
D18B9570670B99907506494F362B124790A17D4F415D8447ECF70B67DBD46643
91AD465A1852B804CBE65206EAAA38FFD2B4180AF00DBC6291C9474BAE831466
A9837BEE55AA0E15812D87E7033BF2CEF3BE10ECF668D3B57D6EF1D4335152CB
08DA4049A648CE4C9368537AD3B43C6F3A90E4530C6AF1C7918FFFBBBA0051C4
CED65417D7B2693C5F1E8F18228604B4E080DE47B49A2AF062493AC0B4FCBAA9
EE0A7C09DB23019513D49092ABD9BE1EBD01C897EFBA1263A05B73C6199F1DEA
E2A3AADB428BADE2EE492ADC9795173DD8320DDCDE8F2CDC3A0FA630177CCDB1
2EF0AEF6C73649920C894DC6C0637E1B81022E8511EB460AD4A1340F9B9F696D
3FA1A2AD4E8797B296C7966B62CB706263BD98D95CF58AE3C43A40717B4BDBA1
C0DEA24BCCD99C5A023B87147FA3D94F1D8BFB455FE455B0A4F32C19CB6632DF
2CFB3B9FA592A3B618876170EEA39952DED27E1F0560B128D2E8C7FDDCC16D2A
C6C422B8126D3420A2A08EADD2C6FE5F50B44E0DE16A8C449E342537B826A6A5
012E8CA29EF432B959A32E658AEEAF4AC498871B0698C7207AFE5EC4DA9D6274
EB8D6CF4A75E4873BFC5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 16 /zeta put
dup 18 /theta put
dup 21 /lambda put
dup 25 /pi put
dup 26 /rho put
dup 28 /tau put
dup 33 /omega put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 64 /partialdiff put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 72 /H put
dup 76 /L put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 89 /Y put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 107 /k put
dup 109 /m put
dup 116 /t put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C142709013933E3B325C8685C61
048660562D70CC0055BA8777786CCD161049903DF61A5AF6DBFB02668AC5DE57
3D52C3FA13DBD74DE4AB848DDC5DF11DA16E7AE728A1B19B8832EFAAAD7263D8
DD78BB34C58DC2439747CC82B1937B920E8500DEF5293C01896B10A6DA71A168
4F6DE6DDB7E2910A0D9226ABDCDA689F20A867450D5C57181D23CE3779136295
0FB6833E98F45B76D98F7F115A67578C90CE30A316B3A041849901838D0A12D4
7F8BCF5CC5768C0AB33CE1B23EBD4E3C802D8BEA7EEBE241E7C7DA1E4135D3DB
AB5C51E5FFC0F527C5B59A59FE5C3360A0C3CD978DEC483D4DCDDD173894CAB7
0B73187E5BB9C5480BFC02FC45F2B1240C294133F7627AEFC03823146D0735CA
D73632F8EE970DC0EBA43D2C700A1D5DFBD179A2BF9BA6CB5818D72CDD90E52D
FACB64955479363CDDBF4C141FCFE9A9A2D73D1AD3D3FB7699F4A04B5B078DBE
76729D694396683D4125C68AB8F0DEBA88B876C71B13A737A00B245A1571E9CB
B63FB2EBF35B5F89C36AC725601404210A9C215E32796795986C129E58F278AF
879D60E7740297C69A87F38B819021DA5383822E8082CC0FC218DB80B701C533
69EF2AEF192771AE178DCA3133DBF682F6B0F87163888A053067C9521405F653
8F88EDDBC340047733AB3AB0D27866E2FEDF5240166D84A2C48EBA62A63C347D
512DAD1E9A7B3E06EFF0FE425138A90484712D9F38D9366BC725B20BC0CE5C72
512D196F8D1BC0B3FC12DA2D13F4B9ADE7CC6A62999A6D5E428B4FA636A6A315
2DEA4674B8BAF5FC2764F52DC679F76F34D2D9CFC9F2114183424B825144FC87
98D2B6E2B78A17B802EF4CAD1ADFA51D128DC642E7DAA9AC41ADC2B0DC8D5E8B
5C9AA012A9D01E04A412631402BCB7953E285FD626E103E503DF00AE4AA5B339
C187F52630B52309834F266D71DAB92F8F73013AD9CCB7B29C953456EBCF09E5
63800CFB03C0423997AA40E8FDF374779AF2363367FCD8D00B221266D552DC69
1C78E23E6FDABD6C8150FB4EA5614E3C5F230481E4243552F11D567689D0A96C
82AD0DD16D94EE5537FD244DF8D6AD68ECC29592EEF335B0BC036C736077F129
F899532154809298DC166571D830E8B8F6111C5EFE83AB5351D7BB5E33EFDC26
4C9B58E9057CF6B728C5268AC824CE2AE592D08885B8EB8A90C87CB9B8C4EBEC
BED8BF1D091CCE9776F69AC312637F18CE4FBE16B24F440A40A69FAC2613E333
19EA7DCFD8E88685749DDC5C6C5A4AC9E21CE0ACF1C02A9B72F3C264E6E1188C
79C51EEEFB01CD24A201DD24445C7C712CC0DA1A7FAB9DBDB206D03671A3FC18
C15E34F70561F3042956E4B83456C246AA84F284B5F4E57BFFFE3007C6067964
51A79F4041BAF2D3BE43FC7E8CE14C9FF116F3802AF740BD9C765861A95092B7
CED26EF1639CA2CAD446335287E949B2DA10840861A6AB8C7F4871E75034DACD
EA2AE6C8D0C0CBAF7A73BF883DD295DCB470C2F9C77266204AF42102A97BC03F
B86E4321D8D5A0AC5EFFB3126DE50C70065D2A42364D5D18B9C5796A78BC9919
84D66715555050D91A8ECC662AFCEE0670E5F706E7A4A3676EA3EB9F97BEAE8D
2BEF416D9988261A3524EA3A0040625AE0D44786118E5DFA9A2785980D69D8E1
351B9007BF9033ED76B763A8DB62BE936D800446E46A852229C5B4F6A84675CD
614591DA52743A4AF692E07EC8648BBAF792ADBC2583F7986F7DD340E8E2D1C3
C40F2D73EC5292146183D6A582FE3D6FEA1CA45A41B9F4B3F89DD1AAF4706BA5
3D6D190D494EA99D7C68A5870CA8EF1A641B06BA7C8B46BB47E63CED9A0F97A3
1337A5C8C3741114C81B5BF0A0FC392731D233A6469C77D4C555C7942B6BFDCE
2FB4A6CD3F6615B981DD278E4A2CEB34FFFB657B3227DA1E2C7321A70456C1CB
A532A760F719796BC7CBE4AFD0022DAC226A3B6A95842668B8FA30ED49B31DB3
6073A214EFA673A641E49943FDE57A1719571FD1CA1C7A3BA32B26AD394723BE
E039B2FD87A31BFAF5687C62E0E9C63F993BEE7FEB13A303CF869A8B0A632AFF
5AEA3CB0BF1A8893DF873B4DBFC3BA7CC5C0DA3F7D70B9AE570AEB85522B7C2B
033BF14E925BB626E7E40932136727945C7BD9224C2EFC4363267117F6D793BA
C9D8404FBC1DAD75DB128D3783081592A9BEF3C230DB0DDF7BCC6967092DCB57
624CE845136D46301701A19F9447CBDD64F33192487617433BBE5A123162B77F
D45FF81F1CA37A135BDE4A5296312E624C5FEB981C81EA8A7CC20394673D9DA9
24707265C5CFC6F765804BE3D0C9BD4A452B5E8AEFE2C2C8B243CD497C2C98A0
07F0DE815C3E941BEA162148C12B5D65E4E8F4318EE01A95EC9D9950203B4275
445C87B8808AB25BBBF4698A6AA914D0EA735A994E20A1B3486C770559B30C67
695A1AC1FDB377FDDBA1B1E72894914BA1D3FEAF795D91883F10F8DCAA11B020
882CD46E04A50D9E10C2C0FC6C093F188A28CB8B23EA7EB89AD025476D02884D
83B767E2D7AD1B5702B56BE831AF915258C9E96B25B02B156A0D5F796AFAD963
A5AC20E16921B518074D3DCEB2E92658EF588F4B489A2E5B0DBB8DA3915EAD1F
F35EFFE468721C29EA8262E689C52588102561265AA068BBD8AB8F28D66A474D
85BDDEE3E5980636C47C91066D2C777B5B9ED23854E1EE80722BF27DE5919011
BB764CB12846DB24F8BCE66A537170C600C8F6C75EA3F829CBA3F92AC18CE954
112D74464974AC065A67341EE4A28AD9AD965FB28D4A1B82939E3E32980C3A22
D02C0538538951F7C30315EE37C7DCC615C8518BA320C12523D372BEA69643D6
6E4CD6AB4BB93E268CD91EF338511B6E375254A9CEF37E375C52CCB24A39F47D
522991A9147109C7D8F712478F211FA4E30DCDA2792B44A9332C8D89EAD8CDB6
652DE099FBD60C141F2D21756BA9D5477B0CA82FA33C2069FF55895D83B0EAB1
52FA7659621E033CB39ECFC7CF531525A2B25B240D005125F4AD5592B600AB61
98C1B45DA84EB03624ED3184B218C683780E0C4CBD5A2DF213D85A561F11EE1E
F3BADE4AA6B4ED251E77051FC516F2B42EA3E5D8A0765463692B13E55CD62DA9
C6DC3A3AE95C921B13B473EF9F4BF21F1056755CDA471E1993C57F814D13E20E
50EE7A3CB52CF51E0FCDA4F1014AD7026603E99A55D6AA3542808F3F3DF49953
E79FEAC41331C579A0160288C6A1AD5A49C80A50AF2F663D36F99C710CA803F9
B2E85028DD14484FF8D730C67E61D9C2294EDC054ED72A4BEF15D4E9516AAAED
3794ABA3B9F436F1C5C046F1440A5B687668B8E6DC168E7D475D35BB083E4C4D
42CB51B974A3374F27A1817557270E683B56361796BB3E8887F5789FE13A8877
64341892219710B932BBDE52DAF1EF1560797357E8471CE0EDEFB3AFDB05EE6B
DD59DCA94AD65798A6230D59F5D69E59E330A11B9B971EC6CF2D41FEA7EF490C
F79EF02210BFCF2915370F49DE87FEF69B406E102F19C026C89FE4A4D1E2231C
E333D3A96F6069D55044957364753BB32A1ED7E11FEDE9D63C4EE19D41904D15
B80E217C67E57C6C6B95F6BA12F55E5E0C6724CF59D7A9E53190D6D44CEDE8C0
973791F9EC25A3F79056BCC3DCF0A10759B08C1FA949E0797A32CDED4F9D31DB
A787FAFFA5948495A5E3F01E5BC22E802FCD589DF64A5D9C501410C693098DA5
6CCCC8FB28C81DAAD04F18082763971801FF3ECBA6D111EE04EA994039B42761
96BBFA1D5DF24256F7314AA1A39AB4C87D1FF218DFC7A60CBB7007137BBD6B84
0EB688B5D5F0BA2403721CDD31FDD3A070AD9DB6771009386581F890993017CD
9272930A7A26F79704F0319E6D65DA6AAC501C3297070F795D3D1FD586C1622F
BA5D60C685D480F1618D04DBE0307CA0340AEF1267529CBA5DE74932C87CC245
BF18C7365A7A9A25AB11E1703F7B55B6097E73BC5ECB4BDD6531F15DDC8A49E3
99215DA24405507212E1D8EE314186C711AF7E42EF02F4CC16F5D3F53F12F4EF
74283199469000B23C8E5BF4A696C74085A3B463EF72DE4DDE26E64EB743134E
2A04F8921FCB71453D9586DC542DE40E936A94EF6F455E659D523E02C12FCF60
B0FBBA651514D8CC792F7B0C5C9C0626A82E863CEE471FA6A3BCB0BFF9AFF146
3A177AE5A89A7DF8232322B09B23567F68EDEF551576E5053D87CCD89243CE0B
E900ACE137811BD07CCB500364F40DC926016073EF0777FB80EDA0FC3613779F
1FE3D91A082AA8FCD4B4CC65F04DBA76C544144E399F958DC66CD5D2D7F96836
F785380FE0C5B4419EBB5483DA93D917155523026F94B31AE4EDE823B8ECFCC3
789A2BA823D77B4D0755190B85A5E8F0AE4168223692757EB85C4505B42EA408
EB5ED4453C60C101B06B398745007D36ADE5D0B5987C7C77C2E0B765E0BFF4E3
6371612FB55437219B6857411F95E9233092F528D671E4F7AC8AA5166D59E9AE
A78F0ABF7A267940C077EADED6497FE91F60C1E73F82FEA0522F9020F22D9F31
EB2CF5F049ECB1BA2B564F492A02E26906EBC9A194C9FA151BDF8743F1C68EB9
29CA22674017C31B7EF7C13548A59D0673410634FB629673FF700627AFC2AEA4
0745EC4E1C006ADFE2CC4A8EDFACF547D977FF79B1B9EE51CB158E82C351AA97
64ACF47BF8CEEE2A9798DDE5DEBC4EB921FC2D1A31810B67B55DB8B9BEFF59A1
4252C758E52005E122A5C53003F0E0FBBB4389DCAE6FA8B4EB2B22AEB1B4EB4D
5DA9AAA02C51FA21A3184CEF7F39AADA6635BAD4FFE1D370D9518A36AC0C42BD
5572C8DCF228CE7D84A05BF5AAA7AEAF59AA0B4A0C415251FBF5F0687E5ADE8F
E5044A778A5A08C648019499ECE982EB873509269108C6083110C35AF290340B
C685689984184F62A62C83FC0F01592E50C5C5571A3A575B7B2C1E5E864CA5DE
277EA361391973154C913BC809004CA86A2B1820ED3854A8DA70A798707BD456
323507581FAAF2897016B4B6CD79E62259DFF934AD6C75CFEAFE26814C55B40A
BBA7579E3518D14BCE3F69B4FC81D587EAC9AB844D1CC2C84A3724BCB743E218
211265E7210EB1B98C807C2D5B84C403A0A1FF04DFA38561669E7981E2727B3C
810BD515FC5BA2689E82D140D30D7F3BD55A81D1E29C4062CEB646707D434D9E
A9234A8CE4F52A48E8E36234F9C6D06EDF69D15E818F802B28E97E3B1E09CADC
88210115D846CFBDFDAFC56C9A7DC471E4AD0A92EE042618A624D07A583ABAD4
41F1B545F12254C29AC387178899161D12BAC6C2F14D46B426E6B7D4C4DD8042
712EF7ADB3F54D79EEEB0F5B252AAF1CE57A5E08610F170107A49F64CC985096
0A5AF16D19FDE2DE4CC2B23E5803E6498BA8C8FDD11367FB932CAE15D434691A
667549B8D5ED51294BCFF75FD5778E2067A3541C053247EF437AC7DCBB01FBB4
3C6E106B4B475282EF70EB3E88485C9E6BB40D575416B00BF5D4DEF74167ADAA
1000D5A8ABD9C15B7EA37228491CAEEAEE96CA2548D7CD8F77EADA15E4C2CC08
7F311107D0905A3D036BE8F5577476953EE053BF91C2B9B76383B1865F716645
3A2DEB8ED8C56AB7B5DB9458F22D3F0CB126A7FDB6FB2B985E992AA8651D00F7
CAA9C4E835DFE0586C2BF7507579410137E32699D0DC68BC6423C688F32BFA52
E4B8AB9B4F6F86E49029047027F272693AB0101384E71BD682EB714ED2B14C6C
58B518ADF682D401389DAA25354BAFBC7B606CF23FECD9573206929255773DF7
C324DFA0095748F1D74319D4DC5D706EA37AE841E2DB48A46CD4D44BFFDF1BF3
4D3E1668DC962F56FAB641BAA782BEFB6C26B2068C59E9985600BBE88D2797C8
401AF802F97E720D8056D664644045991F6352DFEC4F9B891353F112B90316CB
FF5CA141B82B3DA70521E1678AEA72BD036C4DC3EBC2E65EBBE617C27F92FEB3
5B8A7B43908F5C1BBA648C736994291B59C1498A4B9B931B54675D80C5EC824C
BDC7923BBE6BEDADA6BC04AEB589348395B8266AAF65EC987FC4F71EC309336F
80A4CC6E8FA7548D2C5C9CB282445A21E1A953EB357920BD112C78C0759A0EC2
CA4839F78695E06C12914D5BD439F78C486797659A0EE05927E934D1084DAD1A
756F0C96D3D91C1A529AC41FA9E7D36220F5A2D5264171414861785933C432BF
F534E2D5623914C49D1972B3C6A8A58BA525FAAE6A3DDD86849A37F6FD74578E
CD25BEA0EAA8584F7DF4CC82EC473FFDF61ECEDD8F868AF7B40D08877BF0623F
871F0AB2DF43B783F0C87FE99914E411B619910E24AD54973D323B4BABFA46EA
066725B26C4B835E59859A280BA8940DEF196780B8A49946414135F00DE89E5E
2C2287D9B4F277846A6035D084D803522F75B00652750AF1FF6173E9641C2855
B49B667211A052011D4FDEA729EBD7DC5229A9C05B3136645E5B0899AA092422
F8550342E5DE440DBC3184DF014A4F7658A43900548E3B43442F3E9532A1C089
A4840DDCF6D0EB1CF1D50584C040617063C6AFF824ABD2CE2F3A7D3ACD66C2E3
02834FD1045B69AA5217DB34040AAEDE3F63B2DD994D0D1DBD3AFDF8A7FECB5B
AC051125AF92127FFC39E63B28C23C3545088A4912F99D70035D5F594D3D8D85
D6CB43C0E132F0AAF42A0F20CA3135A191EE76F623CD55B33342831F52A16827
00A3AD94DB46582A853E2D87FD236D04D8CD769910E27788FDA0BCF0EEE058EC
5BECBE325ED4F305BFBC5B01D3DC9283F901A426D1FF5E65EFE6AB98C9B9202D
8D1355E96BE066CC8FD47E317175F1ACCD9632319EFE4A2E44100EDA76EB66DF
4A96281CBAD1060E02E274338A18C58C5C2EB412D9306EC92FA9101102BA5F6B
50CF6A527C4059E32B50AA2FF8CA8ECF864BE9C66863AB9BEDACEAA5C97AECB4
ADACB218556343635DC7B0A06A6C341908224234ADCCE31D8F226FA0B4867E77
42703297731CE1D8249F56388717FA6DB37BA2C8E4C8BCF33CE706F07BB9648B
0326C12C5D29B8E437E3BA75169A5B24B2C3AEF2BCC942A84BB921CE897C970B
9492395AC88BC97C44DE01732DE7EE61C94841372D5D42A819E7C35C10608D54
6973552F0862B0B06B7AA5E8841464F2AEDA58AECFEDD99C82FE3F0D48445629
A03EAD76888F49DE3B0DCB03B75988C2F498A2094FE491E51920EB0C780A9C70
378AEC70DCA5CAA9756E3940704A859DA3F9BB2C9D6BD1F01638548681BD8A99
16ABB74564538D25CEA33A59639B5E570F99AE272CB9870AB3AE8B7DC0CB4141
A391C754687E8092F3F741CFACC37E5ABAA75FE1AED44905B85A8AE9A9CDD493
D504845884D2ACC3FE17EE9ADF3D0D32FD2345EF94D0003A1AB44F479B348250
ACFFB63E143BDC302F1F39E73D6015CA306779373BF189C1070688344F4623C3
5E8B1EFA380444F4818E7B522D4810F855700D4B1F83F4FAF88ECC61182B0418
1AEA14DCAFE4F27837936D42F6E460C8BAA01D4EA331A881C43BEC85DFFDB711
D10C235682FA31688B705F0DE11A03BDF773B13930D8E1C431FE3646DE33CB51
8F2BF9DBFB9A9B26E358CB5DEF424DEA93064D0E0519420BA6068AB20915B684
1FE506825FF3DA066D56BAB8CB7CD7E9AC3B5DFC52BF15DB20612E818C7EE91E
9CC19485A4C3D346004B43F4D8F6DEA1ED57F7B5336ADBDF68820AFBF97AA1AD
0CCA808E5A33D0A2A41FAF42CF197F636810412FFCF67F3D77367EB254AABCDA
83A32C1FB3005506FE329E4790AAF52B43DA8C750C2B4F7D3F118F127F367014
652B5969F4F3EF91A4D208C0429066EE180FA7A9741EAFC5892F99DAB18E2F8C
4C15D176386982220B3D2D7E77E23540841B15E953B248E5060ED8F480FFF2C0
E72D0E42781AE58A88D2E948ECAB020932AE4B52B9D4135EC9802B86341402BA
44A70156933F735B304A65A5B924E2B068D54744EA0A6168349014CA53A9BBFC
A36CCD6C513F286C4ED6E1921BE9A6FACB56F6468D64EE0173D4D6EAF7DE1F22
0D37C8E733D73619A11209FF105C45D6E9A8950D018A7CBC3C4CAA0264A3BDE4
A304CA5A63F31C16697C9D7E6FB0B6FDE59ED3DC91C9C2236177FCEE7EE987ED
30E0AC2A7ABA61DFB8D098057BB2FFC239570BCF55107BE417344DB0F52EF7B4
76945507E8024B92B20B5A4595E05D3967C2E1E0A56BC8B1DA1B5277AC2ED1BA
58FA3BD90B863EB12972DAB738165B7F248AB7A8BAFF751582593890D81D1462
93F041FB7A30A366A1B37889422E0EEF395C7D5AC82568F17163E29D8DD0FE33
1D0673F75CF6AC92CE50F4B1EC5C804850C8A58B280B8BD3E9B6105B9E4F3D82
60C8FC71FE200AEC4F7CD2943F359B87974E6D1236F27845A2228F1478FF535D
C84175671D92F58350F569F20056B0B89C43B8568943DE1A68599E8870A72830
7A95701ABBD01448361E85A5061FC9FB0B9B9719F42B21F817EDF9E7A5938DAB
205EE216E7F2F653292BF1EEC849EDC3B27827C288B58175B97BA3AD58F046D7
3634D3505903A0DA674AA8C1877FD67AE289A6B9E4F87939098F830B5D3554BE
68D6F8809CFF5D80B3974789ED7C9C798745BE00CE1E46F7F59F69E2253876C3
68FB345E61E672CE8F9047460328F3836C33203F91AE04D10EE6659BAD79C546
942E2C4F9CDEE784FA6A06379D41125148DBCA3552348C67DA64E0C5BAF493A8
6FC57914B2B32F40C6F10683D5218358A73213E381B18FD11CB1B3A8AD7AB5FE
80D4FCE0AFBE0F8FA23CF748893CB083103A9EC85EB4131305F4DF9A36C21644
507907F201F7A986CD02FC208A72126CF40EB06B86274BAC64AC0F05111A3E6E
F2D44374CCFD167614D2E7543784EC839DF6C1F75DDDA7707DAE28B6D0F503A1
6A152A43A13CCBB18D3F4E42D101C956FB0FB0DBC067DA77EBA344964BD12008
74A791D7E63820AAB6962FE066CC6B728BD5F6B9EF6ED13E31C92D7C6834EFAC
1A912673EEEF7C54EA07F6FDB12403B40B9B4CC136A97B807F645C09B2FDCC8A
06FEE703243152022A67232C795CD9444075484487196ED905C37C408E77EC4E
3B241153BB7B4132DF8FC2BCF64C0A3D8BAA2E047E0DE581AE853C5788E57DE9
DA02F85AC8C906FC3AFB5525E7A16EE19C99F38B8807EC7D1644550032A34759
8A31F0AC3789658B152ABDCE3F68917825E0291357E4C4F9A672EA07610931A2
C7A45F3480A1C34B9985212CE184D2F3EAC253CAC5838751EEA9CAD90423CA6A
952DAEEDD0F687F36D92127E7B76A658EFF98C626F7F0C3CE2E72A81712F049A
655BB0928B3EDEC550B6973DA7C348708B4CE74CB4AEE7E2ED27014663484BFC
3E2C0EA4AC23B7020287BF68E25124A137CA9705BB6710360B75491012F18AFF
1D5043ABF431F4F4FCCDD0541ECA6C3C0D8E0ABC085A4C9A02659AC5B254DD1D
359236FFECEE093E4CFD44F5E3A05F05F21E123C5CED66B91CFCD8E586634C3B
120BB2B4AAFF9CC018A048B329952E6AB958D1B6D47541F09AE467ADE61B24FB
D4E7B3AB5D34C478AD749401A619BB671175019DCD0F9BD7246C9062C4117362
82F1FDDB95C17A9D798F53073F0AFDB35A4AEF9F6A2CA340586ACC96CA426CF1
DE036E94604D31282748A52B4B96AB172FB930CBDB36E6521018F245F33AF7FD
FBCC296AAA1407CBCE3500DDCD4E135DF554497CB2608F74FEFB1BFA0C67DF08
D5631E62F046C7D973D8504A0260FA8AEF0B9BF435AFFAE3ECDB47767FACF762
4331A34DC0AB11B4D4594FF364515345E2E51BFFAFFD103ED5C1C7F6FEA18834
C84B516FFAF39DB58AA17609213673FBA5ADE55703605665EC6F5650C9307D6F
3F969E0F0A1FF89124886AA8A61E90602929D801D7F8E277ADA3EF63AA8096F6
EB5503FC7229BDA74291295159AE3CD7C055C584723BFF61BF1FB5A1BB8F81C4
1D9387A291710C5A79293EC539F51290F2EB43B836CFDA1AA89FC3986E5EAA8A
33FC6E329641DD359A0E267944064F2575810C8E8687AF75E8593C80BF12E244
B508B048FEFE8EE5825D40B9825F6F1D62E0A9F06DEA3989EBFD921B93E925D0
FBEC62BB1F7782546D90295F80855FFAB9A10E7749DFDCFE661EDEEFF61E722E
C797AA207F9BC209FDCB4CF214D8435D0D5B7B068ACFE79D400EC314FA3A1DE5
2CC9945305100FE29A94858DC7DF40BC8974A2B8CBB3CC016BD522D80DD95BA8
682E402AE96452DBB04A1BE468090A9C061F7465BF7C3D01EA2014EF984FFE1F
5F8585CF7F5DB5CAA6D9B3FBDEE59135FE59366ACC8421488EE303738DC5385A
872ED2FF574945D58CD223C716E0075280062A516E934597311DFB354097079B
10FA89553A486EA2345A8A6645D535FD6165F6D8821F0D978C17FBA0002BE878
0B0E44075C57CFDA041BA7F1496BBEE04402B7F309F0DF8FEC10B023FD71DD78
2629722B4A017C2F55A2E055295BFD60CE5EC84CB1315D89A22330C59DF45CFB
FA292EAC58478CD9D111E7D924C8E91D12B9BBA4CD730E8B61F46FF6C4690B25
243262A879A4EB0064D392744B2B8402E47F2DED4C2DF24681907D93C1295B21
37DC3C20BF8238386BDACCD1ECEF708B527DA169FF25FC93D9489C98BBB6D2D8
D1FF87B40A1EE5A102E47CB5BE57E2D98820CBC9374AF2A90FB19D7DECB0D752
E72864DA5ADCA7D3C6D557C777CD2372FCDE93CD2A319B47D2BEF821D119A398
A92B1534168D478265F3F12833DA98707A377BBB11C1FD313DF08F0F048010DC
766F03DBCC2E5A3246CF843AF6B6F942CAC4286E169DA78B8554E9850F9114EE
E98C483BA6FF290DA5D3028ACBC75C266E1C7763C110FA44B819874C459C0270
BF2DEFE4E9FE24072E842A2E1ACA8AD7943E486E953B8D0155E6D1B08F7BA256
DC6CBD384DDB5E42E229F6298CA63CFCE9E2A34D1D596D4268E820392DA12F06
33F0AA656C262CAC0B61575C1139B250DD4D55057118D143924A1B1B6C248A22
26C150F10B56F464016DC50CBBF2823D62FB54810A9EED409A3F89FB1D1E8279
03FB13AE5DF23DAF9CB978D95A206605E100902ED64C7ACAE5114AD8EC77810D
13C5AB7B6A06C1F6B5292E3C12B26C926F928349E41F513A94C98D41B16275B6
0F31EE0937B683673B4ED5D7011FCF76CB706FD2C7F50025684426AECA958784
16B22FA803BEEAE40E710EEF9A48C6BFF32CE4AD660C16B3E104A40CA211A329
AFA9B4CFA599E03AD759B0F707BCAC43603DE138403F4BF58A362142BB350B9A
7E1148CD084DAD691AE173D13B0E614DB1D266792E541F580FE5D534A0042EC1
F2C27C04B0524581F5C1B6B6746C848CE020EC6890EC1A4F49BF9EBB8C8A753D
6081013FB9E6F2708430868178BC9FF579B295E4A9E0710A326DA402FE91BF39
BDDB9158833707082977
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /zeta put
dup 18 /theta put
dup 58 /period put
dup 67 /C put
dup 82 /R put
dup 85 /U put
dup 101 /e put
dup 109 /m put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D91549542CA82FB12E
0A107D92067C0D90197C0A70CB20FA034BDBC225720E21956A2E033606F7E36D
18A24B26CF66E09F99D56EFDC0D3D71B748F6814D3084F434246B71916FB30A0
349FCF5FE2A498E3E04AD4145DEB735C42407C26CC718770692FF5CE185DC95A
237B11FDBA12246E56FE00E4A7933E6D06F75D1A24E75F3796C35313471E9369
9B5DBA4B06A659F2C1A8F281279CC3C46EE6B4A12E7458689C75832288F94DB5
F8BE5E18746EA2A536BC342425A8CF8A05ACE12941E109797865FB73E2A8905A
30D92A74E47D851AA9466B2F745E840C275DC8F994E1CB9CBBD4CD9E77D96B27
F8C5D28B758ABDC29059D923BA7814CA08C3BDF60B00A43351AABED4892B8DFF
DA8CB7DCB206A8379896A5221AC286DE1DD5108E4AC64416AEA4E62604DF724C
473DBBA3F8AA1F9B3F1616504A3C04DDF177FE9EB8B0AA5AED69BC8F64DA561F
B3A7364B7FF4BF70C83CE2D48934D323E856C0DAFA54602E92740F0512525511
B4FF2870A4FE97D01043E7253F660300E3F9F41EB04318CE60534A0EDFCBAA07
F8FAAE7BA8EF621A266CBF6851EC615D1187EFFC7E8CF2CEC65B3E7FC56A15A9
49F91B88C2CC6564331BCC357E035433CD8D979C79377DE553FA3B4CE88FE813
7306377218FA882F53AF0E1131019E90D1424D56B2981BBF2BE181578416A43A
85A592EE742FE5241A42886CC8CCA89FED056BE9067BC0C6513D29FEA28AB261
BDAE2AB074E4D13BE69042D40742F34A941888F7C15A054EF351ECADB4C067DF
BA515D6DEE488CF5422C97BDB56EC23525C385B1149E68399BE5501B015B10A5
3882010E446BCC62FC3B51709EC2826C092731E40225D8D369F549AA6EF7C16B
CB18A386B880D2743264ECF34FC1A2F5F8AC21BE825D99544EBB95575CBFF172
0448A3367442A6CFB70453348C377D65542183DBCDE9CFD2BC34DFDF5900C6F4
468EF61CC9F32196317FBCD38886E31E188CB6C63B1AC0389A10D4E3535FEF60
3DF237043C399BE135CA6312B9F0C6462447312D98DD624BB6AFF2B7699FFFDB
5D9FA29A4F90A92BA41A9AF2866093A69E768EE35BB11FF97AFB4CF1738B6E26
86AE7D3B5821BC4532BC15E5A9468D75F581D98900F611AD908D3FB06FDAA58C
D66CEF43E46A46A9988788E5D682780259EC97673182517A741D784C7299CF62
D9024F653EC82D1B756EF10E50806EB7E02802CD559EC33D1B757956D0578D46
5D6708BBCADEFE572423FF199EBC942197B7CFCD947F0C19C1DE7880C954E607
B2D18A518C6B6FE538AD63E249ED1C497A1FC5665CDCA101D0CEB33A0B3D4BB0
267B6F6BC0BE05243D02D550FA14C904091C72954EEFDB1A83934B92488B58ED
D9DF208104F29D7504102349435B525F2651797BF542B76ECB7DD997DA62D152
F1D21472DEEED2A635DFDF641AC7A6440338E36F3D91F52B9EC6E9E4CF53EB87
8799B58E2D43DB9BCCBF9ED40AD48F909C5E2BC8F2029A9BECFB20F64603D24C
2B33782C79FCBBD24FE60663AD6F7AD83EFA61722E26CC0A0E043B464403E683
205929B081995AA30C58352F3085711C13A485054957C9AE3BAC1106B8F9EAFC
CB8403DA1B5E2800FAB378F5006A9426D6717EF6BB633A7087A7B149E6314703
DCF78C7712A15B9DA11CAA365CE0EC36FFA675AC7A43B11068E6F2BBAC5BC161
9547B0DB27A9AF40BBD955FD6DA5DE053EDAF497032A86F9CA09AFDA72B2C594
CAFF483B44D31061FE4FB58E9A25B50174CF484C4D7C9E69214EE931651E6C4C
34FE457B373760BC57A72F186227A802E39691FABF9A21C2DA433CB7BDE680FA
A955EC8E3CF080439484996EC1993503673CDD39CC8A89D0D7F85B518B9D703E
E78CFB701C070A51C199E063B1FF167710E00E81966E38445C653AF5A0E60A60
0C268113BC121BA77685730A29DC0AA5B63931FC04EDE69B744B53B5E8BC8681
0B56199CE7D027B6B82EE26360055977CF92FEA77C09E6AE271C96DE95426F40
D24DF3246DC861CAA7A969FC42813A3491293C94D5C7157401AC1DDCDDE10421
403812A62AC47C2132C219AE8A9F41578835A047EAFF490B94CC96075BA58C5B
6136725EA91FD608C6A5162B02F82FE14350F781C51B9B81F4CB3E430B76DA4C
4215FF1B2076066D440A77712426ECE05FFD4D72159DBDFA498E462D5CC52F37
24D483EF7DFB84C2CC6AF4AF3802BE9F5FDB16C100A72219B4023B2BE2ADF244
7EC24D993DBD6BDEDE1B1A68927BA3F37CAC9D13C51E29C753880FF8FD1BE4F1
D15A2B4FAB3E26D1BC1AEDE3F7EA11907BE3081EFEB99DB85B1486D46D7F13E0
43C03825A7C3258CA04BB6EA283A6C36BAA631154441616085E648726986789F
8371500E4CE936245353CA651E308512F2C7D923B11AED08A19108399596AF4B
0A1E4A219C8679FE76434047B837E40B1966AB98F5C52B7F32C0F94C438D3AE5
75055CE253183BCFD6EB50B00A3EED0A5AD2351DB5C6D620AE0CF8705C55571B
DBC88FB4E84F84C8901F0720FEEE971E65F54134B446CEE2F5703FD890D0BB36
759A4F8F946D168FDE7DA6FB94FC6174911C5C9336E3C2A70143D47C1F99F09F
6A60D36E358C9326E3E6311F0775C6F9F01D60E88212E93AF0D0C64B55440B03
C45E1038890F0E7A05AB63FD493CDF286BFDB77972DE7515A30D469447CF8F71
7F7FC96830C8E3995A77D462733A1C75293C17AF4DAB4058A4D69AEBB20CCB2E
B73AD1A1C4B2A151E987B2493C1759B35023CE47C09DA9EF98C9B1923A9EF1DA
35F72FDF828420BD8F2FFDCF8B588BD90B0D626F0BEE3A8756CD764584841235
95B9142D4A4EE515DF768AC60465A3927BEA51A0CFB5B20FD3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 5 /Pi put
dup 11 /ff put
dup 13 /fl put
dup 14 /ffi put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 58 /colon put
dup 61 /equal put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C1C5F1391D72DB08B0
C9DA69D7CBEF2C1655A300AE832F3259F12C86B8B638563A1B51C0CB3CECC2AB
C0604FD17B2A2F43865997BED8F1EEF2F56E334A4B5CB3B794E3F13A0A31CE4A
66F3EC2E9ABBCE6991ECD1873495FA252A38FD8BB873F05F8DA04E2B5EC752B3
FC6A5EFC6B4BD03AC2C8B22E72A4157D316542593BAB72EA74AD464CD041B74B
FB17BE31208E17FF7DA90CC64A1F4C3CD71A95A03BE69B37CEF179A09AEAB66E
F7165CABD1D8F443AAE0A3F0C050249A333A1F83E14DFB04509549FD75551868
8DB56FF76362FD9E1C29E1A34364851B56353CE9DCF31ECA018225773B359FBC
14AE59DE1CCA46A10BD728BF9EC22CFFAC50964EF0FD123290045EC2A8437DF5
F02A69E236E3DA431712371F1B90A346C4D818EC74D494FA998849663CC0B9F3
706769BEF559CA683A3E78C4F44F1B60E65A13C4E5FD0093D77E83CDF905D1B8
66D26F5671725C1EC2AAB2E50DAA18A96E78E95F2D64DF693B5E51D15A9B5801
0BC687015B182F1811D000226A3706E7696D31CD8F1F991CA14C790915DCE503
28137AE01EFD748994A219BA6480099E8276173D443884AC0600329C607B76D0
1B828D9A9D731D50FAE5F322EADE40E7595551D15E1C9D974E44EF83A517C3C5
752B9A508639FC3EAD7268F09C9D0EA35D4BE263DFB9C8849F54A9421574989D
1CF996E7FA1D421A9424E04B900120FCEB69922DAFC3279097919A225431CFCD
73CF9560715E3F3C7BD1ACAE864EEEDFB498CCC9D5E154937668F72D91E822C0
49040C5C7CAFB01C35774F604355CBEF1B1C8120EE8C70AE48A3DDC57409B25D
E986DF8194CB3306707631F5C613E3E582A46603C80207E1BD1621EDD75C4DAC
B96D16C75B604F99E87526A644743B53CF0F69C96E7E2BA310AFFA57355A62B5
CEAC4BB8C88837A33B100FF42391DDF83C85FF2A08FB0DA52894DBB8548F0D58
ED841D24B822A24E9387E3E188F2F5BCBB2423B5469F9DD5D21649F19B9BDEDE
5F4A392BE38222592587A05FF0A324A0DD46B098D3B571CEC6E771CEEEFF90D3
5F47A9D97657964B7CDA5F57E10159DFCECFC5D9AFF98DFC652FAC2FB2F80F3A
39848C4AECF4052BD6FF03623E6B0210DC5139133DD3C3ECF2AF8AF0FC66F031
21A932BFA4FA7A21B91F8FEC8BC4D496F3256D8B49565B05B4EF633214AE69A0
555929CEE496E1FD55F342198028A9496278C3DFB25974FAF91DC77B8AAB2239
DEFDB964B9A39EBF8DBFCCB977ED5D8F37B922515858D697A44844F2C66643B8
CD86EFCC6050DAA8B204C4A83000BF40B90161133F4EDB0BC61B5534D7D828A0
53B63A3FD4CB69F8FB6CA2CA571ABECE0563ED84E6348ED97C54815024D73037
E9CDEF09C16A2C0FC13C8732D5463F7F59A28BEB6F1FEB404E47901751F077A3
443B9336946E38C1FE52D8A57D79602D65BBA312E072096DC2576D4C9D99F833
D72AE088F54DC0BDD441EA5EB5A1FB8059023F4168EDA727CF0DFC3ABE725F0F
E01EBAF6D5EF42C394C0B30C2D8210846A85A5E58EE0E7270BA56B4B548FDBFF
E3E6B0DCB52F9BA4A10BA0D35E5C6E7CF63DE42402DA190130A7712BE3B76ED3
6626C938AF0130C02E2FB1CA1517AC15A04254B30E9FC73AE951AA4F0C21D82B
D4C28604E0446779ACBF74C413C7EE435E6B39AA0E53CEEAC58F0F1145486C6D
E263F250FF9F4296940872FB3F39C772AB771A74EB93E3DAC78B1A952BCB3C63
AFF86C63F79CB0B5A99199A3AE536491032675C7663C3E7A1AF57F6513B74F9F
6C1F60A7A5A7AFEB90F2B8163F9B76450E43B49ADC5278402C2DC19AA1D6727E
F2D1382A83DC20215D1FF848EF027EC47FB0EDE4D2909C33DDC63D53F4432252
DF1E10D8B8110333BF74B12C26B1DD43700C37C8E48FCEBEA6003301365B51AF
74D9219D372F01CC903441851A161769BC3C8A92490F38CA2C4390083C3EA906
FB0F96E0D4388AC84B106773AD35354C7F42AD1879BDAADBF8D9DED77C9445CA
4466084691D6565C11D66B0868907843097C56CCD3F735589D13DD94EB3A1974
40942994C4F8FE963EDD42C6558869EE67F6D555FA7C6EA84F44E072E2D479CB
C5BC9164CB93BFFF5C2F7822C541B862142A10E455DCD47FF57ADC4D7D461ECB
AF326251E80A93FEA61864BCFA907DA7513A5D5AB9034DA63965E04C561233C3
E5964AEE466D4B7F29FC63602005003A2240FCCFA6434B98D53F62AB347C9D13
BCE41DA0F8406E3D1333707C9794EDDDCD0C06533FC039FEB875DF28CA894337
DBC8CB8E548723A4BCF23020FD404E7F873362F4492496F9EADA5FAC102626A8
96CA435292714A8F491E2AFFC6D76575E89F0EAB2B56BB38EAE762766A7228FF
3FB3318682EE27F0F22F5697E699B40A3CA818375D219B974E44EF83A517C34E
4AF448D077021FFFD7878159631EA8DAFF5ECF02DFFB4445692A4E1BD9DA7C08
162ED8FB6C594E908CB077DF51C0133AE67D239505CB4779381D3F674AA342E0
0623ED4E8FA3A4EAB9CCE57B8B14C5B0F5E99F780B0A6271647E7AAC109D3031
C7C5D865E3B0BC29C36A2234A8FABCC0D6B05C8C570A8FC0211AEF06259BA187
B7688E21CBB018AB64A8A6BC105B8E6211C3F31E5BA213AB4D160B857AFF1F41
03D6E5995C87B86064C2B3CE49DE1DC7710112083709EDC26146F6AB71289118
AA5429ED39CDE4723DC8A0670037E434D097D6B574285B98AC14534FEE644AE9
6C571FB95856EDA4F76A0AD5DFDBA66759C41B089DD18925E881219889E8B584
D35858BEC9A6FBC5BF379BBA24673E52A656B1A57D8BDBCDFA75722E2DB8D104
68D8873378FB400A8135EDB6E678F46D9EED70D2168A99303C3808C64BA225CD
F940B9C096DBBAB9062EB97513D7136BFEF99418E11E14F4C4DD9C2CC352E036
E4E671E52588E7C619BAB43710DB33F0AF5071B78714066D1A719E0277BF96B3
CF486E2B4C9795FF0B0F83AE32F6B7AC55FD47082DBE006CC5E1C91BA4FEE8CE
8F77C8361A4130D932AFDC2EC726D07C095558FD029922164DC90A3564CDD205
0E48DBFF27B6EF8FE6D2DC18EB4C02C6BFCEC3E71E20E6D983EF94B9DAA29E77
F9419E4E98E6E70971BD6E6582C4A839A75E8B17DC5C67C36F9D48CABEB786FF
7927D4DC8F5FDE80D25256FE25FB21C9E1EDC8FED1BEDF10741D69FA987DDFF1
781BA4CD3A2F990EB48AF3B46990A5043226AA4BF768E90CB55AAB74B0D7B860
0C39253AD84C9B7EB6D77534F3CB1F50953FACECFD82FB5851D11CE0CDA69D88
949CDDB459F0A10292D0754E475343AEF6E35878373124E8BF78AB57D5CE4B5C
3E1B4D7B4EF7986EC4669C5C8982BA732BECA0EA73E1E14A57A8017555E885B6
7794B4A8D366F6644F2BD40F127819C983392B9957F539C41C6C4566559610E4
A2413AA66DA2890FB3B6006EC4681B03287D9A0CEB038E3060789C7EB36EE043
30E3CBCA9D10A1EA9D5FE955D46057C73CB15B7E41B9BF7BD6357752A6DFD723
AB8787B80200AD26E5F020125E2F9F950A0F919B8A4E33ED8CE8ECBAB578358C
DF49D1F96C355583BA222E816D6C1C3C83FC003B21B77F01691C0425A75BAFB6
7DDA0DF5BDA4B8C2FE7B5DAA6A95CAA34C7B703E7A2A52C6C54D11B9D7ECA487
01B5D4DA9DF487FF5379490C59F9DD5AD2E8C80939304BDC04AAF1AF2372A043
F4EC19D387D38BF3039E8FC09928F8F0FD8CA68906E5530A86B62E15E2BCCCFC
0F4AB020C689BDDDB94BD6F277C02551CF36382FAED54BE88A70CCA2AF60BB09
D4DB7053EABB788AFC7E5D305E31B0797BF05C3F9CD7C21EECC70A21E5BABA82
F846986F1BB0370408DF7162CFEF07F93366AF7F26F35ECF8D5AA7363E9BC287
11ABCCCB06EB5A36E90C1F95286B0C5DB50D649BFF205019EAF0494ABA38F9BD
5B8667E237FA44B1CF6F9C03804AA818AE03DB255FF70683AE9119CCD786A847
E4A3139094594234E5C46CF2837473C372E70836243ADBC54F1F899F7E27ED0F
DE2E3F1FD084A38A5684CD64777687458B80EE1EE4FCBC20F31F209E7B473594
45634F467B5C06AFCD8E7CFAAC47C719C8A4FA3ED730A2BF7D23C95E35A442FC
F25B6F007D2D83631A5C35F6D03C056620C2307D2F7F407656EE33173DF50648
FFE450E1CD2F0FE4EFD68797E34E14CAEB0292F5AA10801C278365895FA81FBC
595BCB938FCBDB8A177190A4D7582482F8F0218B0BE065C44076658F0C1E2E9A
6A644510454A0A41DEBAE7BF7A16F17D7F8AC83A3D0946E1CA8433C899EFF83A
2BA99A7AB77121235BB4658907CDACFCF46A61D5EDFA7404834348C3A202A4E7
7553F9CFE352D3CE37E2F63D1B34FB1EBDC9A60F4AB8C27EF1D65FF7E741A049
AF60C860AA9D7B48E8AB9B2A4AB4F786DB1731DB82845F5BC589FE6D720CB90E
7CF34B5915CDF9DE8E4910840235F3613C38B98FEFD06419749A2EF936D0359F
AD5F783CEEDC92728C046BA482AA611992B75B65C3D5D2FE41E6ACA70C2C5F14
D2F547A80D50E03AC109588C7E562CD67DC3890FC0C534232CBB30506D85C363
40BF6BC08C6FC8995CADF7A82C46D6143DC7A3AF0D5AE2903D10DF2FFC78E20A
5DA0AD88061A873E28CDE3B52760B19CBD0A978CE1061A9180CB13E1BC43CD6D
0D023C0121A1861C63AAA9DCBE448331759F3AFE6D86DE28806FC2BFCBEEE7E3
61254A5D80E6479FF9135D1E769CEEA1376607ED2FA9AF8B6701828D5A8D6791
A6DBDAA127A2B6B7A2F37E359F1A075D57003F8143729AA981E3058000AAA3CE
324B5894097BEA46409421454CB759B3D8298C7092D8FB7840622A6B9087A41B
B583D3213790FFBC91028B7736DAA5E48511816EDB04DADEF97B138A68B4D489
7C76F67C193CDF56D7C6DEC8C2FE4A87A62CC6A456ADD8220BF66CEC5F629FF4
8BB49A35127CC35E29E6374AA429883E30996441207EC04BC6A91080EF743D2F
C19EC57ABB690EC6B977640EDC756FD1F81EB38AD9BFCB9220335A4B94464881
E5F92DE49B73DA434A142D49924345EE87C5FF3C5577C03A4698569C6E084C86
35C59A3E55DDEDC25C214D8BA990A3E38DAD7293C54D1441646299330DEC6CED
3AA107E6308AF70AAFC292DE586616F063A5F15CFABA022094FB2D435E175858
65B4236FAEE13F87BAD4AF4156B745EB42A31644C3E2DD0EDE63D2A4E35A7F4F
159721F872DDE30433CCEE10C988B1B90BE74A2F20936A1D3D63F519825659E8
54A890F91E360F420CE52ABEA67527593CA6F2A5F2D5102D99AF932E09ECBCC8
6D70C1350405AB6D4313F3AF0FBE35CB0096DC314655A02FD305786AE3A372E7
2DDBE72F6E139C0E72FFC042AFF29BEB296A283D49AD72080B00199CA62A356D
F84391104C506620C0ABB9F69DD6BAC9C8130165568F903575BA5F9A166B9714
371957ED840C11EBA79B811026B171A93429BF8171778497ED66D1A2793C0E4E
95B9973C5830D4B677EC9C24A985C4CE61EB13D1EA03F81E12DA1BF038999749
9B0E2227CA67DF1D266655E2FFC6C42A6975F266D805453EA5F1AD58AEB8E026
DC77AABF1F34EF416EBD7F43A366C335C7850924A12F5B5C71BC3C77A4B1DFB1
93E91B09ED931886CF83D37F17E15B5FA67FEAA4A5BBC26E442AA0EF8437C89F
3B4909AE2FF7B4E792EBAAD176B9FD067C1DA74516D25792897CB750B03D791E
BD59264EB683540190D5B910DAFA118BFCBD9054570710E3B4CB20145419762D
5B6C56F568FA939583C8E0BF432E6B3BD7269C174F126EF0D83C76141613258E
2F73C571380265C1F67CB4E8379DE3817ED1175055267E54B9A37883D9A3E7F0
B7E001CE2ED9E75C10A53E43EA159D93F7002217A9E55CA4DE658A735738399C
E6B20E4B72CCE4B128B304001706DFE90E7FCE21004722A2674E5802C28C02A9
14AD80422AF021B1CA45625ADDD5BF702CB9881014D2B581BEA3E3019EDFF2C0
F40792F3BA4D5E92603B965D3B356AC284AADF2B4A273F78DC60A00193C4AB2B
878846B00C70F9B655F1B009560A44428A37AC8090F1EE4F5FDE9BA1CBB20968
A87337613CA58B1F4324382CBC6DB7FDAF4685CCC3BEA6838775FD6ADE608725
61D72424A78D96A5839BDA3F18ABA1E44CA7872037E4817F737BC9A017C46434
67D416A41B5D43762C9FA5E741E384DCEB5BFDCACCAFA05BD38DA35E6F223C5B
AF63DC492ED53CD34E767A9BBEDAF6C0B7B5C22DCC6CAD9D6A335B2B004D6751
7ECDEB08C4A8992822E9F58B6EBB4B6164E4487AB778DDBB46ED777C97B0831F
6533AC74A3418920B9473B68FE7DEC01899A244B59E35273FE3CD4D20B16E129
338B3E35FCDA243515946FEE4CAE2C61F3AB1C5D9EEB373D9B7D5D41902A771E
AB6316BFE091170D04FADF72AE5752C845DEDC250497DD3FECB6E0707D204F77
690C9B7B0C4EC1421EB69842E8EC81A0AB5A1BB159FA61128B01DDCB666C59D2
3E84CDBF61D4C4C6AB8D3DC7B82F0EFBC47DB888051B1A8CA146F0B2DFA47C15
8E0F335D36F69E3023506215374D0C7C3CDCFDBF2B1DC3FCE631E55AB411974C
62D6DF972F22E13A250844721725563022D3B938920FB55A0A73A47CFE93A317
D3A41326D0664199BB0A8114767B4924C3E5E04032FA74973E8E04ED4EEF2A30
F9E44E19271CCDCF9E3F92955D1429E8C1C13D37EB7A043E36E6AB85BF09336A
A025705D2905873FA1387B1CAEA82D9EA2A8DF92E0B2E965A5A71DB78569F818
CB504EE9C219F74762E1B4E0980703046F46183B5E69D52C3C75A9724C11034E
AE517ACF908662B4FFFB9A04B9145C99725E537E4E574C8B5291FC6551E89D9F
7CF4F45C460331FDF248247D4B33365885580AE7D36262B1F7434DD51A9713E4
837E681819E96EC561404152B8814F96C1A0BF49E617832FF1F04041CA2A85C3
295CB8BECAB39109B709B03C240FD54D9CB6B910E6FE333F50B6AA864E9E8DC1
C5B37BBD930387CF5CA6EF67924D98D60DE7FC5175B9BD62FC9641AEE5917932
04478E8296C64CAFED396F68A43CC9AADE5E1B9262001A13D0A5C8B0779C67D1
AF9F2E7C1495D8EC67019F0E8661CEAC5E52D80AA150CF00EDF8FEAA7131FF52
4C6685004B72EB99E136005F810781BC128CDD524FB8D2AE4906F0B93398BEBF
43AE7A7EB233030966725F2B7451004CDE9E5D154BF78D247F230BEAE06A0539
A777D5496FFF99A85896C0B7123EC9D0708FB414C68519DDBD29C354469C4454
A4642A3E63A858FD354E22B6F407981F9B370EB59B203E5C78A6690531F805FC
1562A4DD71B545FC62C94E4C84F2494397D448C4C7BB3C6C4A700F1141D25D72
B5DCBCAD8BF3A9BD93C749C8F98E7ACFC0B793ED0BC441A93756A7E7C9889C34
1FE8D9E2789F475039F9704DC67F76C0997D415BE0DEAA16597E0264A747F6F7
1133BD8DEDF1605E77A7121710AC3B968999F5B6700320F06F12F8E15A17444A
15FF8197A8E940BD14453C700B4B4B35669045BB5F2522CE1C515EB6FBC1CE56
3703B0A18DAAF2548CA31FD14A36470233B1F5494153E120E745EA448AE1246C
21E532AD901BFB2CA54ABF4D718B51866603D25DA979078F213EB72286E4E02E
955B51F1131202B9EF3B472968B3C94BEAF22AC1E8856F43A7616D72B9BFDE05
24B6B45C4DEDEEA346D5B57C459105FC6E23A9DB09723D1AE9086077BB0E5E70
C4F0E8E4F20E721D1555098A73AFB1A8BF37855C5052D81D8BE416CFC9733219
5D631A536C0DAC46565FF4F7E9D3E210929791FD91D0283F03CB89F3F39CD691
FCDFEC4FF89BD0A7BB9F9E599350E85510D33DC917C804B547694CDF6E648E05
85208146F175BA0382377DE49BAFE52BDA593E8CEA139F706540439B3FA70BC2
C81185D99C373C3314383E90B408AE11135163577C7AF61B98C59F04AFA3BE10
C1C1E6F73420B11701B69E81266560681E09C3A8B60F1FCD1D6B221CB172458E
0FDDC6ED6FCF218C6392BCDE6D78278E1D3F1090ACE8387C15BB9168283AB0BC
26C9F4DDAF5C0C8F6AEFF3177DEBBD46F69C37B95AFBD5B07BA9C2267A493A57
824C8305CD6C2957F3A3D5EDF6A433B80901B6D3C68D227BB7138439F5F74E80
09B8DC71B4BA47D48C96FD23DB4C66C62FFA75A3EAD6F7B866B7D427183D5322
5832ACB580E6CA39AB81C63C23DD1C48E4C3E888AC7C8436DFC3AFB5C5C3EC38
A7CBFB8E4F971BA47DF786A3BB57F26EF580538B687F70670CD080B3051E6815
B6E1E198C4C8F7D553583C842EF08EF9ED58F371C6B196BF99D5BFF7B0497213
7221DDE6492556C3E59AFFCEE06F2F581A9DC1B3D3E93DC2A7CA630FF4995B9C
22322E653A606ED130E892D3EC883C16907923D3EF0843AA97C50B4BE7B02572
6A502DEA30425B21ACAB9994AC32E915A73823D41DF54AFA23332E20DE19372A
6D1B50A941E91DA766BC580C225B906679FE525ED55845BC6899B294B5344778
D6C710C9E549474B2337413BCB203B9C4E41F411107D1DA90AD4618079DA1A50
E0D623686B1CBF9FB0EE37D9389782FF0E9BC399C094FAFB3424D3F02BFF9EFF
4F35850AA59CE6544D0AA584A21C2419A70C6034C319BEB93293AA4FFBF273F0
7A3C0077E5F3AF7CB768EF81A724E0957330EFBE4BC73CE7A322F1018D8742CE
C5C8683B558AFE10636625E2C5F556797E21CA5AD9B5A31B2C14659A9CBB7AB6
1F06135DEC8DF6BDAAB7C5771BA0D67F3AEAB5D14561A17EB9FBB891414FBECE
F1E770FA71E8D1732FF67BED3D51C51D839B2C60AF930B05BF4D3E98C683194B
BF55A09A015B07F85E2397E25C5532A515A072DD8584D7177BF0CCF94A8216C1
3632BA711759C76CFE0CCF2A5D0BE88BADB65A26E27AA867FE555A4549952D62
79244ECD1BEE0C76E6AD33363013504BD3F87757860F9BB9D042EEC618CB4B8B
A5EB469D88F1DD461509BF0C720F0FE98E77D5EE4AC2E146850AB4BA7F636AA0
FDD79EA7BA7438937D303495E5EF148C71BD59C14E15743401051751E78A1906
D331395533B581E80AB5D2054B4968E5BF56288EAE8DFAD073894AE67804AAC4
73E451E5EE2409F92620D7449C9B193C0ACE5EC44E6EFEB42507675E53D1E84D
95E73EC5E02FE348AE246D0A2EA0DCDDF146DE7E306DC29DE17981AC2B7E6AC2
96126B9CDBB30FA22E3E7397D8388C529F7B53237A6BF090CDB29684DC0E30DB
A1A87D78697F077A71326FD09FADA80ED143198A7D387E755D9485E62724E478
8927427F83AC96148C64F1931C9428B2B4FEC4CBCA21B463D50EE15554773FA5
A874BC17D0C97394561A7F69B7138D43E46788DD365965628D9C64DDACFC1C88
430BDC6C53599E1B114ADCB55FFEF7BCEC784A4C442E6E6B480D32BB317926DF
17AAAA7000A5D16DF1D7F7DA574A760CA0F561852707B4A6234ADA1047422C4F
7C7CFAA9421DB58AE3CE13AFAE6FD61782BDC2B3859B2E85939293E332F8BC9D
C969CDA28ABE0B0A100AA54857403AC350CF95187BAD3F2A91711B1AFB836E04
9316086757530E3D91F804FB333D7322CB6E782A09BEC947FBA66F4330B103C3
121CD1C7B8ACD93261446229D97007B45000A035EFB380A85BFB1F654FC5BF32
4527F9D891E1C31844375F199501F4AD4B0D35A657EBAB1A189F4248315A7314
1BD46555698C8518777C518A47DD92BFB16F1A8C064CEAA9EBD43ED191A416CE
88BD38AD1A464C6223194AD70B2251270677AF46B744B9E189D4E720070B2D2A
677F6CEB6B02A3BE1D8C52A87A34423FEEDAC3DE4A3D7613A92E8B950E433C30
9A27876282ED8F1E511640A7DDE6EF7B6718F111B865314EB74C8ECAA08FA82E
73771479846AB2C16E3795F99A883E57B74E1FEF8A188B6D3B63BE3B30BB93FB
B87AC0D15C28BFD059E4C74965361E56304E8B3658F325DCDDD286D2F13D2D71
67FFDF504A2484EEC8186E4D1D49005BDC588A4D9C7CA6150F950F46C78F601B
1703FCD9A63EF5DF849F6C4D3F9365EC8C7F3E5C70E050DAE2F2F4585DC30B0A
F278AAC9A1BBDD27F4F89578712776082A60CAB310DF92AFFD2B694C17BDA3E3
9B7BCB9035708B509D12FECC675A4531E42B976BF76149CE478BBB2285DE1DE3
63581D2449C021E4AC59FE340F56A0EBFAD7FFE43E2B686DA3FCF4F94590D887
487AEA029BA7CD5D7EE0CB6FE114CB8C3C9F2934A4A3C06F30094CB4D5CB77AB
71CF6622886723B1CC5638DCE3663699103523CAA557331F9915AC0B7198ACEE
45FDBF91EB75629FDE2C29B1C19C92A387BA8769CC0823F9968E398FB8270777
55B4A21FE4A083A84EE38FAF24A7A8F8C8D30F24B524F5161318824C0E0CFD58
F9B20566FFA13FEE71B3B46743E37DD68A922B4AED5F5E9E672ADD878E5F66E7
A2B482A48B031EAA9E3B70B11DC3AA540C2F815B9B7192993EF8133EE2C9F8ED
259B729822F6C895158DAA1BDF3D9532E30B30A3AA07C013C4B433DEAC252E90
14E27F418183FBC658C94BCB8CB220A0ED109F9B70050D2536C1845E2B3657B3
FD9F51A0B3CC7D59F6267A05E560609E66999196F76142DBA9698F078CB721A5
D54EF691AAED754C74438AE213B7AA0E38770438283A29D8F9ADE2351CA33AA6
52FBBBA1E86D352FF80C349629490ED0DF7F159509AC811587514ABFD23EB557
CD2E3A34C454954A0214D7879C97B900B12C6B112A9385934F25CB6BB42A7D95
12371D9AE2F1079E9CFFBD0837A47A454678F42BA31E2024F92AFCB960A2ACC3
FF4D32C1364C1B73144C2BFD405AE480E8044C00D9A70BBB336C0172BBFBCD26
7CDC9C0B9C8BD14C6BA9C4EE712FD1011483F5A84546B1972FAB333FB8B5A0C3
474D695DBEE93BDC94F0176AA735347164EC103C659A086705DEE5D8B7813876
DFA292D8047A42CACC6D0A6367D063C27917C9A189058D2405803D637E3C58FF
F998B65DA67CBC091A5537DC21402FF8E0B391AF82B56ACC4844D6DCEC8D85BC
27447E02B377E1564DBA192B7218D7A261B396527F442291638B608FD16E7462
43CE37B933023BF5EB1CB7FD1AE639E0F05D2F956E0345F68A8D82BE5FF519BD
ADDE8860EAFA933FA48A11C419D041287EC947E83092B71CD9FA0D7739FEF985
1B46B95D018A083E7ABC00CCC4D6DD44562F12185953E174FAD2AB77C0B4B82E
CD8410BDA9FB4802F54C26BF95F919912A560C0D26FB963F699D92582D2601E5
E76A8DBDE8439A88D851B2868252AF39703B04A4A9F3B2F8EAF19D2AA89FBB9B
F6FBD49BB6DA395BAA6A830D59945A11E16E41DE123C9A11BB015CDD7759C7A0
F8E7965C777F4E7935376890FB2B884E1177E03E5E3FC958D70EEE7F293B9077
25461AA0E428CBE95FCB8EB3678C4A0CF5904D8CC60FFFBE45765230172A3F43
10D1BE5D8C1BDAB3F66B542472D8DA1B234A3CFC46E095D60E7C3065FF0B71F7
F0F077C6C75BDD139852F16447972752B2BB3A9E18B172D8821E24AA5A0E31D2
61F2F0048BFDF17146FFECAB5AA8B7525DAAFF7B70304766961B3A658E7AC6A7
3A29B11788F2683D6FCA7E2BAB3BBFDFE1B8F2ABCAC1AC8B019571E12794A7C8
A1008DC22B7EFDDB20E661781A15D5E4A426E0A79F24083113737343AF8FF50B
17D9EA8DA38D1CA25B7131EBAFA530312AB8E78AF00783A32E74A95AD9D5789F
A4C54AF6E674C516DCDA875B7C63E1B8120DBC078EF46C8C29522ACE78473111
0D9D5D7FDF244183D54D6F6529125566AA94C1BC6CF3E01D98203A6D5D76F69A
CCF2C6C1B4597223801F03816A3B4E35614BECA18A9DB7AF3A643A212E29617C
2CFE049F2EB7BC0B3C3E26B03EF3E6755BE237A347264F8E865CD03835E938F6
76E2D9C1DE3D099F7F40A31AF42E9CA44CAA29276019430DF7E4745E78700578
DA5BF81FF98BEE34B8DED5F0DDF13ECA4B76ED328CA71BC5160270B162173281
445C8367FE6A7B6D7CDBEB420A7D91554560078619FF89FDB7EAFAFE4B6985BC
1780E79BC6E64ABF6691D5604838103E0D5179EDD758416ABD875DFD1BDC8287
DD1D6DA5CB3E7D88CA425C63C127781E50313873865D5177995712BBA7750AAE
5F7E147DC9E5FAECB77B4EC143ADC9D923B9673713F759CC57C28CD298500E69
5205AD535402157D654CA565512A895CCB0F91E0C5566AAE0EAA0369955CAD74
6BA5DFE6E5F29CB4F1590B451C42C03D7642F9FDE90510D7E4CF1E7C6172648A
DB66D40EC54F542806243171ED932A841AB89FDBC09B233EF669BEB95DDF08D8
85343D6DEF5357E9D4A7B3CC7A1E6B929D290AFF90B811AF8BCC14DE57D0697A
9DC87492CE4E5143790A07974FFEFD57539825770A33BA0266A566D3FD837384
6AD8AF8C04468E125D4A50386C58F8E0B3C141659D256C344D2AD1EDCBDCD6E3
F80FF44C5D167A0D5C9CCA0E1FD5F8CF93D29A2992BED9589D9FB42768AF2A48
9996496A38FB1D1EACDD41E8B6B6E7387C81DB3185DACDA45CA40416E3F23343
DD3DEA7217A0EDDDD59B5F113ABADD31140EDD9A666A488894BF2B09DD96F329
1486F4F0877FC9A157AFACB514B7DCBFA9193A479FD6514859973C824D0F8987
B9ABA0AD4CF08CA0AA756D5C0BBD0A1308FCF8FC3CEDF9EDE568360FE01B95CB
F2C3D71C3F2A5D8D0A62D00B5DBE0B2930F9778405960ED34E950BEE3FF14A1E
823946E1E47B7CA3702EC8A490545A5EFDFB043D088B103CC10BE097A2463484
95B0B26C288408A058996AC666F3AA895D95D6D555AF9CF045B3F8BE7010CB97
E8040276075363C12595A0AB6ABDADFB4ECBDE6A3684213476BDF05D77EC4109
F9DFAA268FFDF49E7DCA89BF1BC9199521DA6B0088F4C69B16FC11FAD4D4E6F6
CED705E5F4803694E61068EDEE2A6E6D4CF6B208D96A8ABFB9131864D4D3C38C
84BFBDC83F93D8026DEE52CB353949A9A345D05BFD824F40882BA5EB0734C7AB
3ADD9C60C40A93EF05B4E1C8877218A3870D849168AA94612047A6A454CF952B
73642958BE6BEF26C8DC0F7BBE4B4E62DEC3AD5D0C28E9D6615EA2AF61D55C10
FBB287E06C106719BCDC3AAF65935C778E1639DBAC473B4C36754BFBA60FC22E
964C4D02B9FD2C7BB7BEFC0DC0684DC406A0DA3423191BB77253241FCD96A1D5
BE11F57DC75D6B342C8E386F2DBE53B9C3DC1414371225733CF00BAAC1432D6C
3F934C65EF5F8D881E0B782F74F2FA6A0F5D0ED4EC8F8882970EE2DC5E8D015F
78D744E0E859F1B1FF29915225B2F23AF97591C4C6960CC4EA3F0EA963E9A2D7
922EA16E5EFA4C299B25F28BD74E2E94EB31DF223D74B34A1BC995217B0DDC72
B62D256960272BF52362BA9C0A986024E323092D4E63D8B974444808FD2352A8
FC4B7020DB3835D9319F86E5CA544AE52F21E7CB80328FB7AF6BF08B62057056
7F3E22AC97935E87BFFA167B6E61C26B2F72815EE0D357630D838599AFFF1565
DE455BAAA1C6ADABCA051BF4C3CED60AD0EB21B368B78D2FBEFCB610F2906495
09564F584BD667BEBB89CA598986E422782BEF3508852CEB13903C909F49C6FD
B9F02A32854D16069C3B60B107AEAD04FD8C2BAC84FF7F06E0CCF47DCC714EEB
010AB6B95775D3D679A95D976C440A121655B062A7A702382E162E7AFF7F6D98
AEF5583A88AC6B6A306F2A7FB4FA8D92C5D9920D10D0FEAF3F6980F3493D009B
CC7A0B53B36C3C9C1A909A4CB9E952A4227D498C32390F16859B8AE047A66268
42FDE086A34E309633074183AD371064350A11DC15204C2A7A3D0551EFBD4F22
3E2DB08A984569D42D92202C6D24757278AE6D79A0315A14E2C43C3FD8B7C744
8C88F3CE3D481DC292F5871C608525F1B7731BE0B8824D2C9DF7C7FB1C8FDCE6
F80FE93F3D022A460FF0E27FBCC1CDE9F8614516E50B2D3D37ED7EED06C0E07B
B2249385705613006CDFF97094C3E8ECD7D235C06C63D9BEF77B276E8BFF9E6D
790B07B31192788E840CE065DDD2523B3BD40266735C8C929E1272250AA80312
9D1A93EAFC8BE4C26534CE1B4D4410BA400DD5296B490786E40AB815188CDAE2
99F2579E4A650A2DA49DF32B131721DDF333342BFA94570EF21B580CCF5C9584
18F45C3D36BBECC08A02A68B8FB5400724BDD50BABF3E541DD4C8EFA615DA823
C97820D6653C92BC15E5C782E8963C1ED607CC361CE9684AE16283312C0A4BD7
838021CB5AA43CA2E52144F9558387AC0B7693317BCE19AC507F3493EEE69FA9
32955A7171877B733BB64AF5591B0709C0FCC0E9EDD2A43BFB0FD5F7A4264A6B
F8BAC3E8C2841C939D9BD0055AA669C12A761476595EC51C4844BC959E8843BA
2A8EFA51B02A8238AE074D72FE62C99F9B71EB68DC2B4A5ABEA3CAD0D90032EC
D3A1A6794C5BB1A44B3DB49940D03381E3DEECD49B1B19A226EA8995622F75E7
5874B3C5F2A940784D4CF291C3EC791046D051538EA95CE44C8934322DD3D466
5EF53093D161E4E8CE6D2EBDE0683AFFEA405360D7D8B1C956729B31CD6EB449
57AF680CE2DAED325FE6C728FFA563D9001AB92DE2D0337DC1173D0F2027DFAA
21076E3152E2D06AF1FAA8CA71FFFD43EE6D226020CCB363C153EADDA58A0BC1
9F26401AC36E709005EDF82C53BA80F0B5324F46A7E028512F0358FF9B3DB30B
188FEAC085D00C31694F3A6FA7D7C1CC6518C056F372A81F0363B3814BD27686
C053138219C887FBEC6ED0F45B9E6B1859E7DA1A0A3ABA4CBFA14B5EF12A33D4
CEA4EE167497B6913ED2A1DC1D744EAFA9F92E21022254B1AA6FA472EAF2D9F1
5B61F2ACC9841D80CE1B4AE9B3EB6EE1D9DEED4189642EE953CEB1FBD0396565
3161D975E14AF0993F9420511579AFC5D3DA73768462F8F7E20F86F76F7E9F08
9BD302295853937E0FE398DDD13FF49E0FEC5E6F0B182D9519268AC2DE4BBC80
9EE30CC0114FE15DB9020F3CE36E46DF9F9D63AA249D9D807423599AEE05C1F2
FD16AD518BBEDCC702C98999D52B882C5F1B5EF8B3C9A0E00386F80B1F316ADA
7838944888D6BA5918F9EB23EBEE1F6CE945E3236757443F745A7914A6F7C45A
8428215BE093D110E475E957717E4C7EE132AD295BBC928FAA8885D91D11A867
FBB0F1D5686355D869B1117334A4453708E611B3EDE707C97AE6CF8C5FB6976C
78786FCDE81FF1F3D152C5BFC28A3DDD5FC48E40C8158D568AE5612C045C96A6
243FACA401D63307C92582E56A0344BDCD58DA82E9F59F3776EA1DC28297FDC3
EB2B9DA57B10CE5AE1CBD9AFD86FF5B8DC6808409E09F91A6531773C8B9ED776
36A0AA7E6F886EEF140EB29FCF91A25FF02E328B621AD0FD731C472C06786A05
095E547ABAEA2AE680C6CA38EC4ACBD6D7DCAAD5ED0E0ACB6412B0C4BAB52B48
1D0E575DEEA4CEC43C36166563674ABDC041C09DA4193875C65FE314747A286A
382D9850451513736063A7769259F8A92923184E835C91333B85D06A53B3140F
DD1167DC024536A02EDCD05DB27E747A6A1F48A46005B96FF952DFE628C20C79
D696664736848C9A50E741D5CB82B24E61A9F8A2AB9CA8DF1A304D23A76E8401
AEB886FFE42C308F3572C613CCC6B7E52CE5225DB0C2A007A0A51FB8327D9960
A997AA4F547FB3D43A2AFF4ECC57AD9897A8F1C980B3C83ECC4747905EF6FD11
975FA10B6C87AFF63910BF7838CE95410A7C725AF6EA8E04180F6BF3DC6AC433
B2984F0DE1FC5881A1FE518CD12D83BBC7341958CB0F30C5866EDC600B673579
25F63267F716B87D62598361388E9CCEFFE7571352FD72B2EE5DFAAE892555C0
CE3257837AE8F97B4D0AC8C13C93EF7B0A4B87184BAE632762C6E7846AAEAB4D
59DFD89F9867598E91C25167CFDD2878E8FAD4CEBD57427519EDB8146A83CD83
48104377F658C2021854B595AEFA405EAEFC2AE74A9CF9DA573B7B6DBF640A1A
24AFA1BD13E538C21BBB26F1896AF2DA3A3AD33FDF5B32B20A4AB0C41565558A
0D340BB6346F351F0625ECD8C6A4F8853F1BF8AC29BE03082F59D1A81BB62C0C
24E7832187DD2CC153ABC6A44128F326AEFF5AC7260465A657929DADE872C9A7
0F700766BA9C1B8AD0E71E8543AA8FC8BFCD7EA84B0473A171C7200185049223
29EDE05144434A8CB427450FD998F1C0F784CCD0DB0F73D15587CACCF5FF78BC
0D65DD5E9032EDF26EE75774C3F806AD27F9AF9225D7E53A812968E1930B3C46
0178EF7BAE083E302031532D0B02843420C2EF20F0D2ACDC216118ACD0B5E8AC
9A22D4904B3C6CC46FF9CC35CECC698F19AACA0674F5D526B68ACE4EE99FAB4A
AE7A1FBAEBA4505B22E77B099E04CCF30577FC51DF096B49B6B16202B2F1B9B7
8570694FCE1710A465600D50B5692C4B481335302B4029B8834F22E4334ABACE
6E37EADACBB836819BBF2A42B1BC7335E2FB6C0C38DC4C9425E92509E81E802C
7BD33F8F04322587194938A51E504D2903F01B46503F061483378FDEB0EFA92B
2568E361D4034E462FC5BC6AE8A4336C558B2BE02F8D29677742C8FDA1A6E1AA
54B2AE3C9EF86014D45D92B012C2CBD3613B6FFE4FF20E00125814823E9A8340
F60067D7A50AAA2DA696277474D67542E20D5C78C750DEB8DA9852143CF16ED6
4C1B5736DF81446BC5EEFC8AADD66BAF9417F5CBFEEF0DF65FFFEA7677FF0818
A6F3803A5E3F4E0F2AE484E9F37E88AB7919CA87181782120683EDAE067510AA
ADC166E83B3AA5FBA254BFDEC6AAA5DDB62D839C1F0BC0D3AA5E80CE1E860BB1
11A8CCE67B762FB8DDFB3D184567D8DBEAF69EA752EC59CEB12BBABDB84485C2
60681B1867EE445E51B5779F1BB38F0356276F4FA1A696561E35BA05083CAF22
843D3138AC25BB9C01C0C1F9A97CBBBDEF153CDB9FE0E6F44211E01292A20704
0BC8C72396D0BD27C581789BBA34D5150F341C348C00D889E529599D9A44FD88
B849FC160A7E31740D85C6ECA9FF09DF30564C9CBFC88D5A204F12DB009FACFE
E8B73918E210094DF7D45F532335E3FC9D034679B37361EE7D8443C5C22437EE
D35DC30C702E9C9A2068EC51C4B2F98B3E28C5173BE98F28B3AEED5E01FA59FD
36AE5F41B8DE0083D13087BACCB26120D3D58CACD2A4D31D15A69AF2739D4AAB
28D2BD8669B81D9A0ED921C691F82CF09C81F27BA9245BF2F13C626DB7139A14
BF91AF422F78CBE7134AF02B200716D0FE1863CA86DCF3CF0F0DB643581531C7
513DB658A53446B477500538C5CA063A6F4426F23497B98166F8C619E66057D2
552BEC4A1205837618EEF2D3E60902A6C13EB55680C583473FF4B540387C66C1
F387893F27D2A402E3FF27D46EC35879257783F20FFF64F1202DCC966D352C7A
E33AEBF6E359101CC42E0A532087DBEF11B1FD241A8DAD0411878BD276D8BE4D
2B7E6875E92F099E5C1D88D80479C85DE962CEE84A6A87014A55EEB9A918021E
87180E6D66FEA1A0E2DC715C57C1F9F51848A875F68208D7DF2CBB82A536F1F3
F0EE5E219C5750BAF4B5879DEDFA0D0E4F22154CE6383C7BEC4F603E8219D70A
BEC075F144E754B281FD7085757DD1807929D3A7010DF63EC4B206E5A8CAFF45
9F985F2A76478C47844636C95A8FD7F7C9B5C82A73CB4195520324FF63BE973B
1BB7E355C1B46BA57CA78FCC04256AA6AADA2694C9C4844B24053DBF1B7748FE
54BFB0AD7CE28ED382427A1B50E1203B4081B3F05DD4BF9A107C3F95536E3261
671A37801FA9941C0E3136BC0755342E49E9D176466425C2AE81EEFBEF7FFA02
F4F632690657F87ED9C0F5CCB0A5A39DC17BE890E1024651CC1E112137DFE06A
C96E95C5DC4412115892BF09056C71A68A2E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
dup 32 /parenleftBigg put
dup 33 /parenrightBigg put
dup 90 /integraldisplay put
dup 112 /radicalbig put
dup 115 /radicalBigg put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F6578921D5AB9E577C031F9EDB87EC734958EB
C950C93CDC8C2DD2785A2E1EE8BB1E27175D9DB1F2EF7148779D9B638C817C82
FED1C72250F61A5DA3CDD017AA5610C82FE9B6F93EBF8761C590BB1B7DA69032
34F2A1AF133A55162534D20423DA137E93D5DBBAFB4812F3543139B0E498A584
67BE4C9BCB153993FFB6AC63AD67A3D982078FE5FD9AF4227CB95D817DE9089A
916158E39A0BCC0A3C1E7F42CE6AA6CE8C70252AF2C073A51427B807EC775F8E
45E1E77812A0485FBEA9546EC7538845D3B793EEBEB57D1B5ED2D49226E4E3B2
65A657BA420F600BEE8D8E9B44001FAD0249835F399A5539737128205646BE22
D5A090F2B795ADF4742DBA65C7851217F9C9B5C55303736472728D480171F9CC
1D46E5C5686C82055C6410E496E7592D776E990DB767A08445E611DC86B93AC9
9D453A316DF72DB5728CA4179B9F65658492A89F639FE8CF8C3F73267BB61618
A49D3522B6B42888F4DD79598AC8659F4F352F0DFAB61D8D339D9EF34194C9BB
4F652238265863EC91D395C37A2CD79D63BB3D3A4A9D07B0BB2B3DACBBB5E120
9F15362908BFA7B8F07D44F1829E88D6C95C302221211E6DD24350DE370FA7B0
283C39FE2B42B2FB81975AF9317EF7DDD35059A57212A7A8CAFEA6AD754BE839
D9D2880D018C74B3E2FD375207744FD3229D3E022B5A76F68902AE84F8D7AFDD
7E80E27B0EA2234B8B5F6693E7A46453D3DFA84EBF2697D00DA67DC06EB9E4B8
B3463DAE909CDAE1655D0B3CB839AEB29FC5EDE08F5529487A198EAF912AF30A
87D8EEAF24C9D1CCAE711FA8CD4A50BF949DE1C2AFC70B79B91CF1B74760FA94
7D74EE812238BE0D96F17A7839048066BD5DB4EE0B93C7140D9C2333ACFB37C7
1F83B5BF143B6C9308D1892524E52813CA0CD3AF6FA78DC6571E64DF5205AEA8
187DA892C72DD5B839807F519380E8D821E7C6BCCF353C0F5D4623415BBCC1A0
B9E7505EEE96709EADEFA49C5C7860FFED02808D1D45B11EC27786B1BFA30713
8A645B498A7BC3F817C7DE95FD9025A429D730BE63C63969F98A16ABC82B2686
24835CF05A4622FA70F438F897D8349C7CE4F9643D9558B0E89511C42D54F21C
7D894102B46455ADC98A4278B258411CDF909DD21015FC312FA8BDA112F12921
EA7CE01A8ED5C9C10D1638A247E63F1C665C093E95252789B61EFDF9E1DE175B
B161DEA2E542BEDA21E9ED73F49F15E7D0CC62467D14F35F5550A50E404B0485
63DBC044F9802B3B94FB6E4A18B1315CCDDB110D2BE7879838348FCDAC0ECEEB
CFFAEAF3C6CD016F1A32676424BC2B2B3D6ED4EC66C13AD16EB3B108945F5549
6EF05C145883C60710BE57909B3DEAD62F367D8E1F44A1DAD181C627FAF7B264
2A9F9585AFB5C16951579BB635C88BEE39AFD6A37120642F0A6EB16471CB515E
5070FC967EC64E1DC1360A51C281E4D8A820298F87DCD2DEBCB6B5050136B3DC
19A7A19D8DC3306BCFCD5D4778A5FA35D9F6DE99C7F6D09BE7CCB874D99F0EB0
F97B9E6D366FD5EAB71E6CE9E720800B0CCBC19D68A4E6E301F10BD85D268CAA
928894E972FEB802B86AC898E5A9B778BC504D57EB3B0A32CFC097B05F9D6C40
E67749897519081346EBECF747619DBC3926276836E9EA8AB232FD49BC8BE05D
A8D86008E6831A563F6BB522D82ACC126D2538FF8C4D43D699DBDD803F1BA7C6
893B54C0B6C7E7DEC9E11944BD0C4F12650281E7FA8865ABF29A51C87BC977E4
DF36D3705E771E9305E712C2B17662D9006E5A0E6C475E91BA65CBD7396C00D6
BB38FCDD13202296FAE51B9FE24E71D796BE0E19807F1F54873AE086D21413CC
9E8839E7D4C2BC857FF8E9680B8DA0A4EADB28A70F42B96BBD073F15642CC994
74D6643E2C1FF5DED3AE2C7F9B310411EC67B4932D6B4A8D9D67F65B2EEF5BE3
5FB03505125BD16094FE1472FC19549E0856E529E70F6DE36B5FC7B65A78C749
B7C85E12BF3EDEAEEE473A82831433D6BFCA28B0CA7D8A1F7DCE77F074CCBC75
2723
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 84 /T put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA4621E84351914EACF
7810F41CC0BDCAD6165182C7040F052C34D073FFEE489549EFEF83111310B3E5
F67EA5449D3D81DF1FFD64AE0F1A760922FC629FDCC6AB0DA66CC29665BE386A
4DC43CFEF3C5904356B7B2EC0AF36BB4FF6A994C8158790674A8EFF54A36B7AD
8C8B833C1D1FDFEBD7D39122BA602A67ECD2EDE9D35C2628EF1FE34B2CDDE154
2247242DB2541C5FD49EB8348536B83A67E718DF66A627D7C7622F22B5D3A3FA
5149B224F82B72E4F2A1B22BD6FA7018B45A404E66E2C6B96476A39E5D330AB2
ED04E2A7FE38D3A88B439E804F390F4B7893506FDB87F16DE8E2A0E5C3E71753
63255A9FC1B2C1734066515DA9C0C834427B24FADC2B17AD8194090616F5A9EA
A8A6F0B4117A9EC24931C504104FF01A8CA2BAC82ED38145BA8C568D2C17CDB1
E95CB75617CD64DC7C5B8AC5BB8AE21591F3B5222FBC53B6906B0EC647AED248
2A616C8CB212B83AA2CF2E06A9A8D815FA5C807048FC1B0D8B11CD88F1FE17EA
91AD0A11C03E0290B4A1DA774F1AB89694D40C6E2E991BF44E274E3F3FE679AE
219A28329BDB10BCC0CBEEF3E614B04B76876C5AA0932E56ECEAF4851AC286A0
4B9A0AD21860F8F1E79ECC2E464DB3FB2F1C5E0559444020D655E13833EB40CD
5026296C9A85A3DD937E773CB0985F782910E76BB4E4CA606F28477AB555FFD9
45362DD9D8A049A463B138459E33306D5069D164A7003F9D0ED6658EC1F3E29E
1E9F6B64504EA73A9EEB61F1AA9202D9CF00B2C26E25836DDB33C1730F1D296B
83FB751CE3958FFFB7EBC64BC45E483BC8155E7DAD9D386C6E265B19AB313D2F
8898F47F0ABC4C9BCE2AA4C013C5AEAD20E393ECEFCD61459A9F4109CAC5FDF5
53999780A12CFE68D8B19F9714288D551DEC721D276ACAFA8B06E4F76CB618F5
4840799945C8814CC0AE7235BBE5A32223A493FDBA35C9883053B6A76557A7BC
FD40F6E653AAAAB1B94B22E6B75C45A8F5EAB703DA339D0C9310A73606268655
0FDB5CF27E88E4B22F3F97CDE0C047669685894D828266748F2EE1436C8E55BB
849D14DBFAB5B4141B934C3EE7B52117418EDBD1BF948DBB7703A541B1C9599B
F4E573462100801FB8045AFCC8759F31284D9FB8E685C72AB2554C7E5B419DD5
326A9A73B9A7EF25D1F9447FF540EEE9C6C331F5820EBD80394F6261E718DA4E
38F1560AF91BE57F36D26EABF182C7BF6A9F65E3499FC5F9333A63052AC6BA84
E56E6494AB20B1522EFA91AFB534564D9C1E8163C3EE325B0DD6F05AAA14D659
52C03E0D212175BC58FE9961E23C972F873C46522A3CBE3543114602E154069A
7D6CD95B58AD81E8657130850F6144850A83715E629D92F1E240A23CF4206A46
4CCCB21E9B3191373DDC4664E8F94F8F82895428462C2D532372F57B3274A16D
67665967923F2174CFB3E21BBFFF96EFF2AE2493829DA510594C48C856430CDF
1FC1409DE5BC9C697C5D32A76F09A1DBDE4917BEBB3B9CD77FEEE7220907E611
43556C5BC9BA0720B7CDC8CD9762550A065AE753BADB2DA90202D3A78E380785
9A18D260A0B3D545686E40F642184EB3CE38946DC0596FBD4A51D37A19D39D32
A6D65957FD9A5F33A9D83FCC9EC380AA45BB8B164FABA2B1F858FBC62ADEBE76
ADF2E3AC4F0F3D7A936725BE8157DFE45C03EA18D6DF59AC976E6B124C3C30AD
CADD8CA793C4D85553D60B9578723E7A63167E2D9DC1538DFCDC2A296AA730AD
69B69A14C1CD8E0619CC81EBB39822F740EB9FE3CFF75AB416EA2FE98EA8AED5
2BFAB817553B9017146506CF824B117CD9933462C267744E8B4816794C58B989
D1119325B52A6FEACAD047588A0A572DBB36F3BBBD7AC1F5533539342C0A3F05
846F89A785AB2F7A14292CF6D12579F8A67106CEBC325FC4E08FE4C04256AEBE
4ABEEAB3BEE3949326FA0C5F60271BF6EAD2F11A0DBEB163C811D031FA1FDE90
4C963F927B2C9DF66E6D78ED96FCE2A5CB4FBCA6B7337D439C599EF59D3D6037
BE4ABDF7EFF641038FF16DF19198E693DE0BF96EBACA2C421AD01FC4E81CD698
42A0FE5C7814BC261100D1EB23EBA2FB3385F020EE84D3FDD472440BB40A88B9
FB8B46939189B8A18E7EEAD1DDA959ECBF6C33127F7AE6532421DF70884AA433
ABE8F637BC76F592FFC7DB72DAE5DEC5509268F1FBACA754BBB1B77308B548CE
D00EB9DEAB2152C04D65713BC9B2A4F4CAFD404E1B1D88B70982AF6366E6CE2F
2DFC061EFD592FB1422274A6CBA118198DA7E720D677335FF799A82ABEEFB4E1
F78D88CFD1214420BB74D2DE99EC88A02D861CAE0628398C63039FA34650273B
A09F22B550E63BFF00D86995FA7F60A4D94B7CC2817F69CD97913E4243671BFF
B79D7910F03973CA841E0873E9857BB456A3081B36F275275C65C38769437223
B4C2AEAF07EF24AAF61AF099631EC62443F522D992196BB3D75E28A89E81F599
75FBCC82717C69A5199FE02D4EAFAE4DCAD5042EF98B73D5C89B5DF13D609D59
4E0B1645ADF7012E250E5F36138D38682FAECEE73A4CCE8B7062081B70A69166
1AF7895CF03C68CA17408212D6EA6B9BD0856C346859AE813D261BBA9BF85FC2
38372E71C26F8BC71EB3528D43169F83EF2274C965F4691F7BA909F48B38C3E1
501687851C09012AAEEDFEA6EB70CD71C223E94F69A0DADFF73DA4964B1A5F90
48EB6D4B85DF4C39CF7CCBF4EB97976EF328D64A874CF31CB8A2236A5A4F96CD
61992769B986B45D04E28E193BB1C2E76C307D356F195CFAB44A8E826598FB5A
E6EE93E661FBB802A3DF1EA55604C50D1A2E4475DFF3CD01C4AEDD1D162BBB0E
9BEA0DAD8FDD4E8D106504CFBA8ABB09F4042D8EC85F3C5653963FB8E947938C
0EEFC42D8E85AEF1458F594E5501C3F35F886A2F68EDC4392AE303EACF7E1243
CE2903B1A50AE9D64BF8B7FC6EE6CF0A6F57C21EDF3D9A69FFB07FE2E789FFE8
938187A3B5215D3B19AE3FE9FFAC261F75495F37C36244882B96043CA78D0FD9
BF8A88CB0A88BC7CE526AA9F720CCBC813BBEA387AF1A19FE943C1EC6303FD73
384E4C4EF9627832AC0B3B22386CA4A183AF11D81EF0246D4D2964208E1E9562
6254FDF82341C01BF8C5DA56090F9AD01B4ABB61863209D30C507CC09382FD25
9EE54220A2F0C17F98FC3FDF4EBB28E360B36C65D573E97E8E3A471F538F83D3
473A44107F34E92E36942A58221C06DC4C79299DE9A794ACEAC9A54A0DA59DF3
AD741AF3B49BC58702E93CF5EA410BD66FAFB2114F5560EE8B82980886CBECF2
E7CB978B09D2435873B7B53E65E97C592C0BF69ACD8A53D05A0A0BAAA2AA9F08
2D36C6A0F76DC3CC59BBE82DEBB634824AF4C4F720509B94B683A35364273438
798B7BDCBD167C16F03C9CE9B7013B87597115432536B305B094A27DBD5C32D4
CA6DEF425096D571D383AA8DB06A89E0062A6E77F33EB42B868E4F10DF5D0CF4
38D846B8878E10229A8C12BEC57DCAC367B20EAB7EB9AA78DD6EF3D800AC6F7C
8D7CA46F278376E9E8813505269F8029F5A2A22588EB7238D064019FB7C5D19D
8C3964BA4C4CA348A44F5C5E2F8FC6772688035C8476D2B2523FB283DC03A752
F1DAD84848B64723B9B3FD918CF45BB155C66DFE54C1FBBE9BAA701928902D31
A19A12DB4700DAD71EECE76DB60C394D52A1858D6282C40E7091B5EDB64B7E1F
D0C0AC2555519C72B096D9252481EE45304183C0C4C4F9755FD8166791BC659F
E1A801933B5974848830FE8EDB707DA85BA221625654927467FB87576CC16679
7AB21A4459E8E09CAF112ECFCD4D9138CCBA358D313E18E9CAFF0A213F74649C
F1CF91603C13F709153B87DF332B73E4D5E8A1B82B3598860D3881C761E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 70 /F put
dup 74 /J put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360CD1885730E570A3252A5ECC419A7F
D124C3FB3A7D58C0EF6AC117F50D7D4B6CD852200A1F3193BE101CB99C685815
93A6CEBAFE9A9136C3AAE071B00E732B7721C7A3A8D01276AE06E8767ACBAA92
E17518435ECFC9B42C21EB1D9BA4DD79569DE87FE23F11E65E7C1141A7903C92
4ABA53A4B5C7C390F436CB4C0DB7279511CC1700DA348283522B5AEC490A066D
1099371F128C794D9D6EF7E18E83010405CAA3AF558B233BED8EE2895A696AAE
F0EB67902FA53D9E8BCF2B5EBA3A06F2A4771CF854FE240328C4A2F37B9C73FA
6933A798B6E803A0A99CABA87DA35B532BCA16C510BFB7B509983872C58A3EF6
7D2D71970060C270EE7CD127704CD3EF0235E14156EB241070DE216B7E52495F
23F1173793087399AE2CD42EA3950E8C685E163310E87EE665F4E74227B5A328
BE08D81F6EB1A4EF4848651EB7A024989A6D910914C0224A700E1245ADAD0B4B
92B19F8D6DA3B137B76BFD5E32149937E5B2316E80E1217FAC6ABF3636ED2010
11F687AA6A1FA145D9D8831BCCCA57A43E7425065DE7E3FCB42096A87D4B0945
0AFC294825B15F4038E34C9DBD8455E3AF5B5D9288B8F54F0F326AAB7E8A8FF8
DAB3D2E3FB7123F4AF5488D4B3F5B529A4C4FE593F5697EF6F029E658D3ED8F2
928AB2757C31B099D8E75DA9854FC3F7AE20B22E72A4157D316540F9CADDFB0E
FD694DC5204A24F0AA80EDC5A18777B6C75EF9A4D7AC376CCF057BACA032DDDF
C1FCF8DA503AB7AE8F89259944B127A0A02C5C331A3752439C53590D3E1A4AA0
5EBEEBC69CABCDD80BEBA1C8F911AEDE793A435F04B0A8BFEE7C64ED54D5B612
02F272844DF92CC28D8FAD80AD511F464AD118D427D6EA576DC9E9AB838A7579
45ACB14AC3FC6D9C6D51C52D30FF86D09CC7837AFD95823A1595A412FC859338
C6608635A76845967C70A238129763D81D9ACB7C75A02DAA31853C12A3DDA220
F37A9D63DB60BD038E41E1A8E6A0BF1DB857B9446E61EFE066B665ED52308F2D
A28C1651543DFEF356678A01249736ACEB178555E7EF2DC1C369371233298249
46320837A6F8F72827E7B413373C26C2B8B8A2A995BBA296A410B123CCC3D2A9
7F73A9FC4784CEC48EDDEDDFA2EFF1ABFB03C06DDDD35866CB938F1898E23380
DD0AEC8D485A9691DC9119CB58B51D3D34F45B4E3583CB242A10607B23BB867C
D49A74CCB549DECAEF83B43189B854BF5633396B2A244E11161319C1ED680321
58579D5B7452DACF72BA7154675669F24CAC53C721060702EE12C6641799994D
EBD48FC04EF01D2B6FFBD4E372B3B85E00C10EB6B5399326CF3CB13D7BB6A370
06BB78A920C3BFD46F9AD39C9FC98B91B2E36655C2842F5C7F6E3BE5A7DE6440
5908A559EF83324E37079E6B44A586D80CFEB32246F16C0E69A8BF3067007787
14A8D7AA7699529CECBBAEF48038824D1B64CCFDC1111183811EC78038D8521F
88E2944D354A7EE36B8356A874069FD0B4428A7F10637E26D682BFD0E63EC8C0
0A7E4FDF9FED162C8462BEEF3DF71EB9E636E3F00AFB6FCA97BBA774360502BF
87426D2BF7D31EECCEDEABDC77087F5FDE9EFA0AD5853E990CA4711DC14B15C2
9EF6552CCEB751C6C9C79027C38EF91FC6748F1ED7EE513D0306982406539FD8
BFDFEAF3BC11303C2A2256FEEC0A16F7B276E348A8169D782F34C9A82FF3C69E
2232DC33462F9A03F99F3FFEA7E4664CC432894895CFFE179DD98D485C999C27
A10EB2544131F32DD6E520EFCDC9CD3F5C0C65116001A0C9F0A98AC775CC105D
854D5B654B0118876944804480EF85643EEF17760E807CE568FAEE51B05C138C
9C103E8AAF922F3E0DEA0E77BB99C0ABB3F3B63C2864784C7E98DC7BFCA1037F
6A42490D469CE568F04AE232DAA14CFEA0F0273D6FC5F3E90A2882B0D370BDF1
FB6545525A44D2396312AA6DD67A5462B94FDE2A571065FA63B295617C526F76
71F68772D0061C370B9AD91B624D3E1DCD880E4FEE180633DB46495A651AE328
A6DD1F3F218F621C4C486DBF404414253A862469A83237E0D30FE2C9EE5059B9
EC227E46B52319B1D4EA7488DA449FFEA5186FEDACF1301C702EDB88B727ABB9
4445893D8869B478FBDAE18D9EBCD581B37838CBE30B13F8452D10E99AF71046
4E516601FE2563827DCA8AED3B0EE869C1251CF4A1F1651D3CEF799D8BE44FFA
02BE4027461ED6BEE75FA93E3FAD84056E5836ACAF7AB6B4E11E28D43D824810
BF0A72754A5825CEAD4EB3514AA186982F47DA478673548DAAB059A7004BCD40
A4A6A6FB41253ED40E0C9AF0F0F63DDF3989FA4600EEB7F52B688292A35C6407
9522F333D24A910661084904033B571BED0468D59D1CBB73FDB02B8D876CC6C4
4C3C07B3E4012633E2454C15C564660B39C891187D2A7753F111EC507D1E36C8
B44B0323FDAA25F5E5CB3BEDE5D5DF56A96D0BF5D76CEE8EC60CEA1E757494AC
D27909114604BEAE312E397C6433BDD7F5A7655D22F08EF2CB666F77B5A6F319
99CA50A11448190BF7A6A123EAF08439B25DBB39271375B74B9D05132326E0B3
E0337E285D4254D07655DA00B09FA6FE1EBF1A50186DB773FC7753A0215FC7D2
62FE5B24916FFEE9DB1BCCCD9575792E23F44C57DE5E2FBB28B2C54E5BFF2836
D381CCD45A210A7331C8D7B4EFAC7DD07CFCEA92C3445E3CCB875FED462FD828
309CD4CE7955CE711536D40358F4434557979EF97DBE0930F2934696DAA3CB0F
E0CD174D859377228B22CE3A4C27C691C503A27AB34E4910E24D229CB8FDF4D5
85E2AC6B379127DCA2E1910733849055571A03897E68EA50909D179A00C11599
5817DE8541A899C91F4AEE31993E9CB9BD81F6591324145AB6CDEB4DE2E88A5B
CA093963E62BBC05230432A2E9C88EEFEF5EF2AD9DB484070E94EE428BA1E3DD
89CE4DE07FB0643D7A5DAF1732580A61942B49FDC5F88CBB833FB8D6512C2590
028DF67F766B7122CF1F4C070C8F50F185C8BB117D0C4996018FED3FE64F392C
4CA494C6BE8A53FEBC40A2342BE9038C0948B9DA658BACCF1B24E3F2B60F257B
5C92D52001909DABFD2639BE56CD106BAEF26C226F6B05A0D7F56DD2B6C552D0
D8D83A44427738616E16A7702883440420D97E90BE144046EE7AD743CC37081F
441B35224A8D661B5492E0A1D8710181C0E85089F1353AB944FCA64AB29B7C62
DB0F04A13B62C179238EAE4D5041E71A8D057A12741BDAE5441E7B8A5A4C899B
D056043015950CCF6E117A76D5A21D243612B70B601DEFE4BBFD96DAB3251D0D
344933315683411C876C5FF4C8E5BBF4BE529A8E5C0824BE532DAC3E2263C137
872F8EB124E156D267C39934643D298631660E2563E81ED507561F34998C45FA
9D314F34D27469071CFF9C166FA936C821884665D0F8E4B795313FE5C32DD27E
D2E3FAC62541AD133AF453630C75836E87E4677F53E535AEDF879F51CB472000
A2F3387E42DC4F41EC3F01B4DF56C777059FFAECF98AC4A63389724C50E2D917
1AA17383C4E594B1CA928EB862ED46B4B6C3EE05217B855A5D3ECBD2ECF66BE3
604DE6A6A142EB67EFAA2E58D09320096581D088332C774659FF22DBDEA31F32
DEDA3A1378AF6C5168AD23FEABD58B4739F05B785CE83463CAF62B83750162FC
A50C1D528AF5650261ECF4176DDC2F578EC1A433609BFADA208B5E50289E5DD9
214FEBA4DEB2DEF0E81616573E4807852CCC330A7FC6D9339993E479E58E1AA9
C4AE4CC0865C56F5C89B5A34373043659E217771A43CF6B43B9252F958B851A5
1E520A1D0D2D32E1CF30C668E405DB98742E515399D6C1AF7146321FE9DBDFB7
33B1D176088F05219D0D93C36C3EF830A1726E6117EAC1C84F18592981353D5A
F0B3E7811E43B13F4FAFC0FEEA74942A8765F72AB1E42D0F300539144ECDD50E
3B8BE0ECEE39C5847C4EECC7AE5AEE2AA49B5F3459B025716C318400623CCDD7
B47B24ACDBC9DFFE2726BF61D3515A4FB19FB90D79F28CD0011F424F252D038B
F79B6C38692111561967C2EFD8DCA8E7B95087358A890559E12190A74780D8D7
ED67B05D6853B4E9988266204099C9770D55CEDBB0FCE6B2A43D3E6FDE8955CB
4DEE510CAC5C49196F893FB682D2C7F05B67DC8215598F455D58926C5C0188E5
603F09AE6BAEDAD46EAFB5865A346050F61861316CB529554D2166301EAC17D3
D5CA5486377224EE275B9E8C1A099E539292F8E6E8FEB1113E96CDFD7E24599C
0FF8CD36284AE36F160B28F11EC99076EDC888155E4461F18A6BC4A73B17EC72
E0DA9867BBC1701D6D414099BAA8B5F3BA92B17F6DB030F726EAD1A31BE6813E
BF2275D49E7CAD483465E909F74B195737C1A4F0E2870E12367B07D26B6E3298
A105FC0C7FE5A336BC56AD569C5726AFFB96D2559F74CAF741BEBA830684FD33
F603A8FA8719D340D6039390C2E798C1FABA13E37B3F6F50DAAB5E9DE1A15771
0F66C0E46F838DF6FF4C90F406B524D7E6F281A233180021625BBFA03E7F3FE6
A8BFA2E25D18F42BA3A83D176962B19F0E6F3B63BF8A2FC726B1CA6BC67919AB
1609E9B6DA1A77892E6FEB72B633AE8F7D5C3329FCBFD894D10EA2FBB97238DD
B1FC3DF2DFB896FF37EA64FBDDACC359A5F8B854BCEED6BC138CA01DA8CBB247
CA7504450EC4F3937ACA68496B5E419F54E3CD558708BFBCEA2D4600FC9A7F45
554D582942ACC60223C395A9BD7B71C6D63547457744EB607A6275853BCFD947
FED400B22F80B9AAD725A8DB9BD45400F1143BE6D5913D03DE06890280D74C0C
379CAEE4A0D5E6DEDBA4F510CFFED855C20CC87871CB7BEB80C94957C271EDFB
B50C8A41D737CB3B0ECE95A52E70511BEDC3CF77526F09D3DF72F55323D51513
974DEDD83FA665B0100CE0D65236FB1435CF806E86A3E3DE085F6C6CDFA2F933
AF6E8A1922229361309B95BFBCBE9B466912652A295D6BF2BDB2F8B7C16F86A1
BFAFB034E275E819779E8F1C55DED84BBAEC5AEA7D5A28C119A788A1E2CD4058
7531CFBD507697954B92E1CBF827B693F102BABC4CAE057E401B4CDE0D67D4CC
8653D412F4DF6C46E8D12AF92130BF681D75B3340A7A1342E8426AE0E0F454CC
6BA76BB83A579C96D321F5632653389BEF6EE4B33F08CDCC7E4466F1C608088D
ED97E1F2220A3C26910E8C19A1020231CAD814FF56BC375F683209AC95C95DAD
B4F6655B1C2F9EFCE2A85292D2FB1167AEB8B6DE06DACC3325960AE1A5BB44F7
8EC91B8823CFF7D77C9930B60D319FF9A13009901B69D06B530BA3D6BA3659A1
9DF1AFBEE6558D7E2FAD818AE7038C3C3492C9147A27DF914C44C878511EED55
B1D71500477C76B822819B2ABEC34A390908D6BBEFB5F35B02337FE83A72B02D
CA1BEB6803112F550DBB7355697178E962E58D287EF89DB8FA1111D8501B9364
55065FBB803AFE7AE579256452F16062DC86418BCE504801460A2E988AC33C1E
9FACEF03158ADA54BD19F162921601F4C7076B78B9B1343DA9F628A3C197AA70
95C12AB4C207B2AED0E3CD21D35B2839F68D4C7043B23531DC40A4395B8AEDD8
C1EC0F2EBBB1972248F0E44781B114462C83552D6307B3052CF0ED85C2C1E4DB
B298E9929C33EB767C3E118E835399FAF4B0210CFDB3780A3C3332C2878F634C
48163B8301DB364FD3FC40892000E08DB59266C3711A7FA76E47C6AEE2617AC8
4533577D75CFEC634A9AB6F7703D83225650173AFFC7F59D7B05EC4F325E2617
899D4044401C298A81CFF25EC6B0A6EAE517CDE929F69C03016AAB9B9E94342E
BD9D7EDEA77F881EC431C32B8CE080CE1D04C8172DE6CDD6F690719C8A68B936
6F0E6207715FD6D43DAB42F7554F138BEA499065C9AA1C885E3ACC6544E89E0C
FB8D3632F48189CBF984AF2F1C1F5A2E5864033637424F23574D95E8B665A1F9
97F9CDD0518B7D7A3F54B85BF0758D8EC360CF96BC6646213C5683B8C3F2DF85
5916DD84D0C789969B07DD4391408C54721A754B1AE40E322BE3F9D28ACE3A44
52248F23BF184937480BE5DA75EBEE8D2C2382F99AC70EB1E45605B74E87549F
08F93A54B870E50D5FCCF7549031E9F9D66DCEE342635FC7D233B051C5865770
C6F9C413AAD20797B8365718BF74C3D3095B2DB5F27BA7D1B55CEC4F34F1F450
0DD08FD696E99AA0A316F4F3E35463A0BE3EF0F478B99DC3A36B738E2F15ED0F
408BFBA89D23321B68037492262E8F5FC5C577304608E62930B500CEF5B340D7
DCBBBFE885BFF690A03E5DAAC1A1864BE2AA70BA25CFF50A83BA24C1BE00A74E
6C2A3E2E5BA38BDFB107AB353C6D5DD46D8050E18B89A843638E4F792BF345E9
2D9846CD6BB7BE5CB0BDACDCD1F8F8AACD21D960F551AFAAE530C5B3119B41A0
FFB208FF08802D0F9E0A3D836BD054CA94B3BB50213EC7289195AEFE80B51B63
0F930E1CBCF91606534A5118C3A5D1F306B3F920AAC2D66983E4F8FD801DE9C3
782469BC417D6E68A23533F807D207144317521457A09262C3E9FFE75DB66C97
8783275036A2EF38C1E9C9B7DC45084591AEECE1D94142F630F71142947A206E
E7B270A8D67F10FB9A8C57F7DD18EDC4D4E4886EB0AFF05A472C31C8E2FA90C2
7295B849F712D37B2719C0EE904FB9C25C62D7B470E83A587029E5393D961D9E
8269192FE45EEE745484A097B2E102335C8A0A019D820E7836913757EE09725D
5EA010A7ED743C85DF7AE1DAEEB54A70F13B29B77576FB27DF6EC9D284F63B7B
C0352652CBE5A223A8B104385E1B5E6117720C4A8B1D88B61F43E47A58D1CB6A
82597D7D1310FF8B9BAB4CFF7B65864122DEF0DC79165E6B53C0E52C81F740B6
37A112F6748C2260C54024551CDC3C444575D1EC74BA0E80EC002E005AD67377
5A87B3FA0E5DEAEF514A10F9E3D239779CB3B5B29E2A8B4EB944B9B8A8FD6049
4DE71D4253E64E4E7925988B924139A404BF93963DBADE8E6BDE528FE0EB2D19
9E619C1A78D21451E37F1BFAB1BCA9530E87BB6F194BD7B231FE14827B20E43C
3B610244956012D49BE03E9A9802F478484AE6D72B19B2642937DBE69BD808B0
893415684F4FDA55A8E25D74A747A459E1A0206B8C735C6FAC79F4333C02699E
755F54A6D4CA00A8307629CB8D6264C892058371FC88AC0E1AD19F578939A307
089F7E4DDEE0345B42112CBBBB642601905A7851331F8D6F6EA72B9FF33462DD
7CEE66762338B6AD316814A4121E99A737B8687DC2E96A20C8B8AFB6842CA494
A29A4370CBCC6A3B607A1A75F10545ECA80325C4381227C8DD193FC2BE8E713B
A044075BD14F48ECA65B790B0762265D35E90228C803271EA1407675A540E5A1
982FECDAE178F04472316F765FFD6D116604D9FAEF1D06235D977D4FC701ED01
13510E4D01EEE45EBD80BC540BEDB9D12E7199DB0A15190BE36DEF0142221BFC
A55422CB9FA2D4205DA055C16576217FDFAF072332AC37C853AAD853425195D0
56955D3EC54B8C9A3D371D67ACD42FF5611E6D344B7B3D9CBA4D06C31C127649
7464B9E461E3A9C424392447FC9F7ACF842919DBADC5CD9C88E8FB915783DC1E
FB4C52B02008C0FE8A47944AA3CA984F26FAB158ED3013B9123E9A788B76CED1
EA729FBBF3D917211D2F564F02718782DBA480998629D151F67CEB0BA30D90CD
BDB3316D236751489CC7E265EB26360680E5EAC051F73D3EC7EEBEDEBB79DF02
308BA0A7A80C2A509D47B8B6450357A5F730EC61AE396245F0D4D18530D092C6
68B0BFD90DD3D7FF567BE2C93914BE59C20CB6696764BC909A66D0FE06124572
682125F6B821BFB1B5BCC9B75C5C456ADA1AF2510BC294D246495B0886597835
07B575B37DD1D9B0D48FA9E2D4E67B004CB33F91A7B5D7690DF2594770755A67
03FA227FAE84B80C2342341675C2D6FFBD84C5512FBB7B7D9EC4DA6068ADA554
BDAAFBA361DE6B6AD41BA51D30CE8C742C8C2266D8BA29E69F5C9F7278E1464A
F3D1BAC9488FBDA6D6093746E1D0AB0E1D92981138D2EF0C38E52C8E186577BF
F20E98AF3C3912C93ED81DBFBC261C9D0A98915AEBF63E296F91096794B2E03A
99ABCD85FE8564CB7886E5A2C3FA47F4AAF2FADBD06158430A93A3C2BF213A52
B59E3A6418A2B8F13DA80F3598B147982234F448A57E2E457AE6EBED8D22C27A
6409D6D212118178CC22580885D2FF2EA5755E89B9772BDF96A61CF194A16FFA
802DED7212DC838E7CB1518B8F5F929E150C70B113DC83DE883EE1CC48F1A1E5
27955CBE6C2224A1B0C18D1972EB6C8B045A9C7C92BB49F12D4C3E08DFF7D06E
11CBB01A4A2C611F178040FD45DB5FEC0EE0156D06DE88366B999431F0845D40
1C53C9CF6F2D29A6096E61C3F4FFAC7F0640A50B4DE05EF3CD05AF80C225599C
8B34D6FC0E8260F77053085843AAA6AA543AB986F35D5EA67AA60051D14BE7E7
3CD6E00A41521C0FFFC10D738E22E4CA0CEE91A4E97810224A912AFF7F82E484
68E40B25DB2807972D6251767F482AEADB604CA12F88E7183926C71E71B7966B
4E612C4ADACD078F33C20F9A67753A9164214DC84EBFBD20763A448C5BB0349D
9D849018F6AAEA6244301C8ACF8353D9E6E71F0433B6664BD815B47FB83E77C6
73DB992B00CF2EA25AF2FBD46750DBFE3B11F31F8CB8C07377631F4D5E5E05C1
02A854673B903083C80503389390AF9668FE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.0: CMTI12 003.002
%%Title: CMTI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI12 known{/CMTI12 findfont dup/UniqueID known{dup
/UniqueID get 5000829 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI12 def
/FontBBox {-36 -251 1103 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI12.) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 67 /C put
dup 68 /D put
dup 75 /K put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5E0311AE44B83C3E
4FBCDB0B74ABB18FDD877252FD3501E05E597A77D142BED9940318B98D508672
4ECF79C43A857674E4DCF2556325CA8CC1C432E54543F706987376A084BF512F
0E4C517917FB1D607C83E479DD094240C3F309A57561CDF8496722F1D3EBF6FA
45CD3D7D810E2C07D39BFE08C0A25FD568DD37C2D182E5D30A7B2855BAD24559
D455B29B1F723BE1C4F827D72B1156DC2C1EEA76C9B27733FBB23ED36F61919B
4A6E8253C8C05F3D4BDC64B99B8494F7C37E9C19DB6A9CA8E9B0F9E7E3346EE0
EF416016CEE932E53A26599DD8CD09D77DF591A9D532AAD3E321CDCB28636809
E61D9EC969F2E27190A475407B90211902429778103D18665A681B0DD51F6E92
58D1288E2AB3FAEF05854938FEFFD3B4F376AAD303ECD28B23649E5D4C3CB85A
5C9CDCD1853BBF3282BCB5CF57720C6CF7AE468048D7AE5BCD2F15DEC1B33B5F
9917BF69BB64261CF101BB47A09E47D6508250374D00ACEC3E3FE8C5330AD9DB
9D9F60CC170F2FD6DEA12DA24CEA846E25ED6683A213E4FFD0BA239894C920B0
EFF562ED994A7A46F8EE2AF98F88317E513A06AB82A629979AAD3ACE316E7074
01EAD920A9E1D54E8FBD623773429C58A2964B498990E8420E5F7A45B3D4342C
1AC109FA67D4BF33C9D1E0E2973BB8B2495DDF5A7F8E306A0C712BD7A7FC98C7
44B26D102D3CD44A320FE89CBA6B3AB39627DA4679A5BB7C27276B34ED66260F
DEB659189A797BC41D05323454CA4600A6D840CA3C1DC31BB7FEE8DE367B8177
3F1546C9EA98FA9F7CD61F177CEC2950526D54A6E7A0038F2B20609E7BE31EFB
51FDB6829852937071FEAAA3A0E51E625D7FBF2F7C224467C7DB77F7AFE006A5
418CF691841AB7A9923506845BFE066769A01A51EA48840E898FC6FF0ED9C2A6
1DB61E8840029ED92A129D38CAFAD4084B17679A84A262D2F9376363D4B5E46B
1C94302E5CD24CBE93A27319A8F79138414B2E94CE6F78C6F06B544D5862C2C6
297EFE524BBEF0CC2C32F63CDCE433E19B52BF0C2C7064E3ACD429E2466BB85A
ED82C6EDC8AF5D75855B43A61504128F75C2DAF7F5C4405BE36C136CB809DF31
A40E0DEE80C10F6E6442CDCEDEF8DD0C01FB2C035A1D136693D366552862A421
81A290080EB8A3C5160FC2CD760A69F8254E8B0EC8E7280EC33802EC2668C149
73CADCFBD4E56A1E7A9CDA3F6A50E00AA536B02B4BBF4CE60B7A791098C3E434
B5A7F17D6E461FEE23C6C8C148C54D14345DECB7A619E56268131F65F86C51B0
E45860D46A1A798134AB3283BC8B73D9B39EC5D0C1241A85AA46B02E51DE6433
60BEAC76351AB35D8DBFD60C6F12F8B32E08C671E0269174E1E142E687B1C558
5668FDA480255261DC29288FF5ED56B50DD8512BD4948F31F14C71CB4F8FEFEC
DD8E4F4EBE9C28312640334BE454634EF26B5FD02A93210D487AA4F3AF284479
303995AD31F4A6DD2C2DCDED3380D50EA1D8743A3C6561CBF4DE91634374DE87
FED0CF17C73B49060648AC6AF2921D19FFE1B7C7E76AA84600078A0160160D5B
BFAA2007AE70640698BBBFEBFA5C11F351610023F563840413AF6934156D93B6
551069D681492EE73D480D648503801A921E37868B4ABBB013B628772DAC3683
3E44C318352E7700094ED0FF624AE560D2A783343B266FB925AE0D990B65F8E4
7A9725F23F0A08EFA08F81616A5D51E5EC31CD1BA229A89AB63ED782A6D716C7
1F00BA66A3158CDEAE3399653D7A29193760AD92F65C066A4DF35F91BDE771B1
74E17E4879428B5692343AA963A349064693B52F14B09C5F4B329C4AF4078998
D3F6C1046538F989C8AE84AE032A112C3E657907EE7A844B14C6A0FA8C9A1CD9
797E195186C478057525CBCCAA0FFB09F67F97E69BC402F6199B6900D9F285E6
47D359B1728728770C95B1A85E22D2132FDE7075F8FA1123F62504E53AB106D7
99B33689D55D0BC0C552745C5129CEF9F874850240FA6BF5F4779E35BF15A8F9
F425ED40480C60FE3ED85173E620320A462092834C0BCF6EFF9F1D5912CEB941
9C18D8EED5CA36CF2C7D3965BB0929EDBF7FC997A9CFE79A9FA9C54A11E1F421
7F3FA4ABB80A3C60E9165DBFB0EA765BD21846FD1260F1AA4644CBE05CEC736E
638311023F9F51F4C0166733A32BC1F615C8D9256E44BE8C2FFEC45B7B612FCB
21C52DB57E87EC8E166498AA8A4528B7C612E3BB8117D6BAF5CA8F9D038C1430
B7EA8699F31ACDC03774AEDDF6B73233944A1A89ECBAED2EFBD30DDF42821846
AF828EC54BEA6E7312B3255A7F55783C5D4AF1D9780A9670C9C7E02A50535A13
6D957F895D53E4E18A4B4263695DF2BD9626E717D5C3B80E908E59EF5D093798
7215550A5613AB86D67C1F89C95FBB0E6ACCAAB397479D483AEE4607E111EF34
2FD92DC7F991B6AE84BC7CB982D819A17022ECFEFFB981A6F678655A6278825F
0EFB5733C5F46529EF1FBB01C6BA7413BA9211251C0A70A470F735A96F6E0D45
DB1342D6B97ABC234790D346C74927F5C910F71918D615CA907984F0229E3F54
4F5F75AFF784C7A470DDCFFC308ADF6EF43979DD3B54C6A8DF3B53DB783B81E3
9C57413C3A317419C190F207720743084DC20288C1AD08B8B0FD4ED805FBA8B5
BB874DCE4AE93AE3B8A117612787DA6C8C7512191BC36F6D8AA38F39099474AE
CD570CB5570BBA932C9C7A63DD386CABF1956FF87C266BF145ED5D27547234BD
943841047FE9A41C24B82FD3D3EA49A56C56840B1B359FB2A3F28E10AB09AECA
2FE2520DEE9B5542591E72ACE610DA4BF31C6E204574DC78033008F019519B2F
E45C99F1B938D212602E824CA1CA020211420C77FF545DF586702451B0923EDA
CA15BFF98CF2F0A56404591E57F7C89CAC6D22E0FEF9094770CF003801E5CC08
110B272A50805F89C0BB5C2966B9385C26F4A5008AAD97A29408A5116BE613CD
5ED9F85D2BCDE96FCF3121D5EE1D455A4CB03BF2AC33493FEEBEB955EF737F7A
EABF96C137DD84B3EA39C61CE95B5967405CEF17D9CF1BDD1199346F95E77CB8
5FA2D38D858DAEF10D0DD660211C8C4C69EF58B60DEDE48DF76300EAB8F0A547
6DBC87BEE8DD4EDFE3020BA56F362503AFA62D8C13BB270C3884560E227AFABB
5D810B2B092531A679485FCFFB88BA8313646B644A35C413053DECCD4B371450
18F54701F610E52E727AE8D25A8093B60093FAF775B6414F66F43F517488B4A4
00AA4F672A34A73531218601904A7F50A045E80CD804D028EAFF506EDA1ED998
ECF16435C6CA8E203F2A813506F4B8CDAC0A3D69F4B704AB80F170EC87B7C732
AEFCBA3BF4050A9CFADB87F7AD4B53BECE197C10A2E84571A640328B90E9A294
73F6CDDE4F4AF9F1F3A257BD130454CF95D390ECA95FC4221D5041E71D65FC21
8323BA5A3335E2E905E33D5BA56BBBC9CC30D25764A066D013B116E693C56762
4F683F112A572C2C04ED041CF7BB4FAB0D899B3F2679B431E8993A650184CB4B
1B391B39929AF803F868245A69C964B560A274B07DFCB88A6508082DD6092E38
80D9187A146B60B225CA22F593AA6B4B7EE1EE41A0D375C4FA69EC6C8E02B54F
B855D385C973A7223DE22465D039D213315C35F0D079E8CD030F62993495B2EB
A0F9BA98565F89D2E09BB60D90B0CFFFF1F0845810ED27CC8F1088F74D48A30D
7FA0728498E78A381B0169B7678520EB5769522BB5838212D32C8C1ED5635753
EAA3C14E6640BC34D43EC162711996E0CABBBDE0932FCB6B2838C22C0E42DCE7
1BC85E372F24C1145655D59CCD50EA6E1A673CB0342BB744A43EA1B9104CF736
324E367D82ED67E01B0608294A91386045C1564E4E417E1A62EFBC148C0B4A56
73A98AE2F2433164740B839F851F9C38124B3C01CD976128DF6A06FEFE14B960
4573E748370D70F9FBFDBF875584852E70264766FA5CE893F74D0D5884889178
078CB149821A743D797E9577A7D27E7ED607349CB2CC6968A7CE402DF9A55069
4A985B517B714C603F993944CC64083DE3D5F969F9C5913C297E8493D310CA42
795C94740A5E5D3415CE7B4A5AA11A940D93992329D8B00213244405BBE73958
37CD65B6AEBCCB2263B937F671FFF3C6314D400983E5AEB6A34709D854FDD0AA
3D27A62BB23E253E6E2CA994294009B857B5F1FFB66E772A0BF9D83F4F72B89F
51B125AC9E495343C9D84A4BB4759DA4D2ADA38A195C7905CE288FD8634ED996
9068F0DC8DD08F3D3A1288A271E7F7EC4AF76EF6A78C47BAD95FA14A3AB690E1
19A13639774593D77FC1610D7F1E25A31AF94C5354B35500B8E57B0F65AC82C2
2A519581B587F5E3C941734A4269842D38F74E89C2AADB8ADB3D16542B0485BF
BD4F1EDB4064E96A330D735F73789614C8D606DC553A0A2409CF4C595AE51505
CF203817971BD7F9B3346C036A18FECA44CE1C2042BA4E7FFA3FFEB6371A06F9
30082F47FE87B207E13A68BCA122968AD74CF6A12EF6767988F0EB0CB64981C9
30D9717F6C7D07F4B37CFDD68EE4480C0CA305AFA4BD21DFE131D6715E839973
E1271BF576F70C2F8C6827B3EF02CCA123EA46A02B2722E06078C3D9B3743CDE
45B43B561743264277D0D1FCACDDA80E5C6185E90F82D1DA4DC076B6BE49D2BE
F03EF513F1861CF66D2B7F8D52C7A5C21DF1276B72CC1CDAAB5A16D20722A95F
8B1EB6E6B605D3878831204A0EFC95CB3C5B588D4F0A540D466D13B8468ECDC1
DB08D36E7FA19709A67A0FA08421053EEC9068ED464D29BB1BEDD0BA88882707
9F41334C3BD3F995321711B6ABDE3C12A8907F930F7AF490D774A05398ED03D6
789D91B4DACEA3D8EE11C2CD850A6EF4128B60EDE9BD37710F43836EF6D53FD2
D8123F81EC6F01A93A8B36FAE49692E7276F7CDCCB09F332ECE359E3E7DB2364
A60B192438FD158B18CB3EB40FD28F74A740367F02D5CB6B53959A0D11BDF388
9AAEE02F0E96AE2F802FF08BF778F26DBBAC8F5AA04CF3AEB180235BFDE493DA
4D0B13E0B61696A8ACE4FF7A09956A1896B2875E5B2BDBA09DA08B9589957E85
51084D76A00FB728E286CCFD2F53088158005599835B18F6F5AAAA6051270AF2
59F7BF641B0AF4E79F4491725189B89E57CD10B442B8EF89345D04EE3E18EC98
217D81FFB1B473B9562605F7B0AC3FA8CFB798A988E5FF20F068A6B2399C71B8
2E3C19E58601B0AD3872170B0AE8FA33F3A50EC5E67EC22C00D3DDDCD7B592E1
0D1CF31DAA48D10F7C6A56CA052A5AE914EE08CEE011FFF20D00B46A7738C434
D70F1040C611168D2C1851DBA89DA526428E6D5DDA244AA267AE3559B0C7DC8F
AAE1687F823CE628AAD59999E74DFFACCF7D3412B466F6C3A315D8AA3350FB18
9EBE417717C42F3201D19E1870A2A3424E96F1A9734F32E85DF220E08C4DDF8A
AE6F3491A3C805578924F36C146CBAF1D38C8C18D18E5A9B38236BD3E6B9E5BA
595F66A2A8DE9F52C9DFE00ABA5B99806A87D2EA39EF2C3A8D94FBFCB0CB5345
9AC36328B89AA13E4BBFAD70314009B0A2588847B7092C9EB938DD069CFA3679
73D9CF01F9756B931B34E70F4A5F1C41FC577515A5CDC49FE2C9A13D62E7E612
2AA5969248241BEAEEA5CAD34154EF5F9153D85ACD6FBD6B7F2834BC65C77E27
5ED803220949B14126BFAAC7728CAE16EF205F408232C5D7B83AFDB9C2191997
38005204EF424640DE1163B577274FB455EC0383BC6CC17F35112AB638743DEF
9954A5B2DF6A50DAA8662967E8E2208A9D1E3506309A9EC4C001CF91896E79A1
F3F6FE998DDF7C7971707CF7DF7415F6D42EE28620C0A225A1B9E389F397F972
552E566F748613EA1FD417CAA7B90A2BEC1AB07F44BB8AB6ED829F2D7F4DD597
989617E6BEF5E701498823382DEFC2D5FD078DF888DDCA99E62890AC0E5BE8BE
0CB662B561A49D2221847151D203457C797A904BCB5A1D68A51EEA20A167047C
36FF0FDD999E46C857864D1CE7568CE9518230418124EE5E51FD96C0FD8EB7BC
2A49F49AD72BB71F849B112147271000A77F41CF476AD687E6BC3DFDDE0CDE1D
ABE816BF31348D25FE0A11FE7F5559BEDFC24A14F91BB73BE7F5FA95DA24D705
3DA96E8D05B84A1E5BFB0F15D7D4638CE4C63B74404128CF56A016180EAA054B
85FEE6937681557D0B5BC3C560947D456F48D7F4CB7A5EED52B103281B152E3F
ADCE8B98497B74B05096AABA261D2A2EF56572904ACE2866C6A081C926BAC3E0
DE02EBB63FA29197B3812809F08A9E3D5ECFFF751E60F7082749F57352040E06
CAF9290336395684E85FA2446FBF1D0223F74B0D3464B06975010B83D0975181
3DB6C0E2967CFBDAFBD555018305184953487AFAE112D36E696DB8A18F3E3A74
C8B123F16D077DBBC85A226A26D406F622858EB7F1646BC0093A7C9711A1DCD2
6302B0611AC20A3870195D8BBA4E8E4F2CC73030B2354308CF8C06D68DD7FA14
87CE9D6FC7A8A356AA2DC356231B4993655A0FF55AF67090E2947C2B7FB9E96C
EAAF52A01ABA6D69B738D6E3D4B2CF1E037D991EB5943BB0E6AB3868138CBF20
A112805F4CC00C65A4BE86D7492C23E34CC0BEEFAA0403E2AC21FD33D7A7FD09
9DCAC0BE550881647B322FE5806735FD993F5ED7C62173AB29095F67A626B9F3
20829E4788786C978B4BC9BAB9B3A750F130F9D4AFDA6EA3A7DF09D7615951D1
0C783A653F0BBFC23902019BA276A6D7944F1A34C1EC7E2710091C0B94CC3938
01C50C5E4A9C19F47D69074023F574D7A7302565EF9920A8E2A5076E6E3DDD2F
409CF1AB8BCE348FE63A136E03A520DDACA32571675AEB94D761B7B625AF1626
8BA9ED761E12A52C511890DAF1F790857C3C9FD3FD033A8330CD8E19266FE888
76AB1F3B3C8BA1FFCF3A6CA570290FC1640B6C4231D8346BD346E647D138B2B7
F7861E2C7C7C4431E3E91E318BA1DF8338AD4EB4AC104EBE7AAD8F5A09E6AB3A
48B9EB51A85277B221E3A22AAF38219B681918DBBB2F77FA8AA27F310159C763
A6E66D93879B592289B919B425FD7A367B7820FF430100E1EAE0877F84326FCF
5F1DD99964BC6BEB63528D2B218CCE41024EA2CE703959071A65EDE99127EFB8
0CC01566E5E52DB32D01512383A7711C7770AE17A71E5D95629642AA79CD5F01
D37FC89696F25C2EE4DD70DBDECEFA4FA2CD5D2F8ACE75937D2B1FEC7A31A893
16D314D800AFD3EA28068983A2ED3A7C75A5570F30A2824A47D6A789AC554C3C
A78C2DE9771B86F73C66EF8E1D0FD046DD4F19A31EEAEE04D5F38B73C623F326
F146C7164C9B18B5EED2113363092ADE0ABF0D7BD4C10BE9766F81C34878B236
1A0FD6D8AB4BC7E3C01F1C880C3A9186E4006210D22EB64CD7690FDA750EAE7E
C87A9D29128D49082578ECC0BC977D91E9CBB1ECC0D3527DC0ACAB39402015F1
B067FC5E7705586D97E81F8911FC2BC8E7C077384AAD4DDDEDBEF65CA4B75F6E
39E41528CF53CADA928537D557B518BB740593A6E4D0100ACBF126FF20888342
A0D3D7C201C4CDE8CBF59A1BA4F924E4EBC3E02883D5FDF2C8249AD8117332E1
BB52D2F621115C0F98037D4962EFAC0FA86B14F3C046A1F7085E40E99C0F2841
8B2C299411F9DC8FA0C8C7E5D7822A10D31D881F6C47B6C47CFA943FF9A9F5E8
D5F1C3E6CCFA324059B942FBA2C6D0E9A3D080DA0CD80D8DF76B0FB6BB706F45
C84054E62F75294ED126A95DBB4FA2D09EF80D1F2C507DF980D3DD2BFA3DBF49
6A99DCC954BE39E51507B12ECDD92C397E82B1E979FBFCE731CDDAE1D9147448
8C312DF818A0E08266A2B60C9C0902AE64276F7A1C6D7BB2EDCCB2E3B7659B13
AEA47A527FB302716624B48AB754218E2E3D99115C606CBC90B5EF73B9F99439
6184472986249C8D8E52A404FE76E17FF814D5BDCA95AC580B44DAE8C593939C
9E7C0ED996B9D2B8118F71BC2F0EBBEA6D7E18FC7CCDC78BF05A034BE39DF9EE
C6BDAE8886C7058B15DABA55E85757137873AE811F25AC7EE3A0CCB8649F6095
7249EDD95E20DF06719DE1E109E5BEFC2A4098E77020110C37A90B5BDBF09775
B4356BF8281F2D2B0016B2B29B3D67C267E732A8DDD131B064946D81D83881AE
AD3F826DDE6135241432641F04D3FE4F25E27C2ABE4AE0125D437EA8BE4B8D62
BE229F35324501AEAD94AA78F850536004C9F6BBE03CC7D10417F50D32956010
1378CC2850D82EE1A2F0509A035AE3749991DE0F357D2060B029C1C80A0AA1A6
E4AC50E58153FE77269E171134E3BFE65431C1536228FCE80FD44B49B8059ACF
E6DABCC6E166951492454C7669C9B96D0089EA127B4A5EB38E31C7FB5DEB9C2C
F422DFFD3B72A16867D56C8B7B4F566F04DA0A5666BF518ABAF1BEB97B385224
4FDEF451E11298201830F4A755D4969254BED67B725E515525C297CB90A606A6
0DEE888C56BA742A2A0619AE086FCE8F8D57218D168A5967D78DA69748867C51
4BFADE699146A2EFD36F9B6DD0F0C90759E55225520C3A4F593325669DA9F684
FD9329DACD14B341F14A9EA424785A9273C96FF170F3FB90C7779188716CD616
4E97F49F8A3CD29A358373D8638A1CBC07DD8BC5177F4DDEE9963F205A33EA66
C3E360BD7F83637BEA404FBD9C1B6B75E92C20EF90360A7463F499E9F41AF940
130F80B3B0EB8B24711B2749DFBF7C77F311969D2259BF44F7C886E39D8D1B3F
C4C5D21126A66503056A72A2562DEF5B778E264C48789653104919BA9DEDC0EE
CDB884309FD83BA1FF68F2146CF0B0352A417FC441B54E80002BAD3548150B20
6D7EE643B4981D9EBF37D486FF5B7DCC67074ACEA8605C285AAA94A9DE9E99DD
551F98D4382D568A38D28C5BE5D2E05A596025A24F1B939D2C7FB79BE8A55F4B
99AC0DF4071C133569F3567FFA4A0BA0E3C64730DC2C49751A1E06E87F8B922C
F47CC1F717B303BE296D004A70230CCC5CBAEF662D27DE5D89BC1DE7D235C272
A78FE380FBBC1914CB29F06FDFCA163602D7C294770EDCC674ADE88EA4D18C83
D2FDF6311B079E062C282102D7C063BC02E50D7D8FF96CE8A5C8F9003506AC31
27A43D16BC123752CA243BBC0FC81F8595C3D934D089B0B30F0D8EDE5E0BEC40
F62186658FACD0F0B21E08DD93167BE3F3ABFCD15580E5ED9CDF274B18EBFEAA
83E5B8ECE14C99E27062F72514C07A9ABC01DD18ED008E8B144C5D4E6B32FFD8
92DD15F838A3FD6C1B49A5C13E76E08F4F1C33A70512DFD326FC396E5C76E3B9
789C72FD6583719C4EBA0CDCEF75E9DD18CFD6D580AC3AA8DCD29F7D7EEAC574
E723317E46C5C79180F8E12256B91F7C9120DA85BD3EBE67517EF87EDD81953C
1B8949EF4DF5E0BEFA79EDFD2B9920385876CE72E41DC2B766AFFEA563C86C97
5BA196592EA492BACFAEE6ECE9D20814021CFB9F4155A66339685A823A8B27ED
E3318C916CBDC39465653A7C68300D6CC9351FDA6EB491711AB99C735A99A9E7
328C47AB13C3D587BA5026994CC4F56B0AE93D97B189EC5668F14E62109EA410
06277AEBCE91026F734C6694FD877A4E6A89D139E6D57124180173022994588E
4CDDD47CB83396911004A7BFCC8F4EF9AF4D19E31982243C023BFE9E76208C4C
C0D83246E2243E40613A2699BB08D1769476526CF0A3FD974EA92E602F71DC13
1A3B3F3718A453B91B08C28D23E14A67FAAC1D9199898B8E70B3527C64BDC3F9
B500A0DB4088E1FA881EFF28DFE535D61DD7FE1B3278C20B115AF40E8C6EAD8A
CF7A231BDF7EB0B633453795F56E09302302E7963DC4C22CBE7545D61A26A0CC
AB2A4A419380D7B31BD8D4C29C6369140D07D1AE3BC78CA106C4C2B8E5276A5B
F5BFD54074152EF4C404FBCA7B674C93BCCDE87E9BF81ACC492DD6A6BCA73A70
AF501BFCB283C7765092D292004F53824A5491378FFC70FB193AE68B69548099
428B97BAF3DD93F0EBED4073E20EC95476614F60A1776C5DC30700FCA43E3D0C
DBB099D6001CAF0BD02EE2C960C38C8032AC2E2378F5A26DB122E82D1DC965B2
C2E0C3EC1724DBCF6E42D0977F640F04FECB07364A2B3F06A85AD5BE5B95BA21
94AE96AB1B5CB00009CC595AB286E250C162DB53FC3FA379FB4FA0511F591E5D
CE80DB2CA66D6D8F58E913C3A6038AE70B48267D73187D79CB3CDEDC188251E6
EE809FC99D6836D53E918CACDCD0AA93188A80E23C9CC3BB9FA41DB2722A0794
B237D3D5141B93451268F74AA621DF05EF36D6EF8235A372A80BF88173ACE2E4
EB9A916346B1FDF95AF6DFB61765DDC500A4B08732E2133EA090546E25FCEF2E
97DFD97A5C364915BC70D8E6DF0B9319570250615C5B95F5843A574232A83C97
DD6640CAA6F371CC4E7199508BF571B4D7B3DED53FB7EFAEF01C5DBFE26FA73C
FEC85D10D87C3EBC22E1205DC2D6661A14C55C53E0B71D6D1622C2B735E55827
481E53F60C8E0C2CE91F8B138D55D06CBE06955E2CDC31D3FF195F9D295654A9
FC3CD4FF792CEEB34AD03555D0642395E1BE112137CEFC737989872BC7B13880
03BC1E328033A0A2502B55C60BB13734F3D62143A07AC64466E5410DD289DFBE
C74EE22165CBBF8E07A690D71B09EA1121FCBCF81AF6580AF2D0846D8D28FD79
3806E7538A0DC3A705672673DA4D0E627B42D08190063F3877CA9F198E2B56C8
13C382FBABE2619AAD8128D92E0AF88DA4D406CA473CDD0D0C62E84D5E0A4AED
4D0149755D879E3C1D6C7F38512493ABC07B35C23992DE6F0FFA9EA881794266
51C1C28FF1A6AD2C16D795D094A2137542862DB13FD872514952736099CBB1DA
69F15DC83E1A2527810D5E041114C67238462AA8937E0F858CC94CBB2CFE1881
D26D72FE5B32807F65636FC396677CAF84516110D436BE4861DAB4E49427052A
D3D0F38826A89760A1F6607E058B72C44013D7BE8104370F949D74CEE9032A50
E0B38229C99308F481E3BB2DFE5D085C041E4A4350F5D8B640A535BAF8201FFB
3DC71EAC1A0A360ACA8201B95A8B2AE7C797928710A0F84E29D3037187E56246
204C8F3B5E6664AEEDD49D283B34F6C7F60893603F5B381CA741121541351943
55FF122C4D09AA067BF98829A9EDD78A200491139753C605E2188D1A09A99B88
A8BD239928E328BF2401352426532FA4F84319A1289B44399EDD9E9B8938DC78
7E6600CE99DA425AAD1E7FB27AB70782AC6876FBBEA8EBF7473EE482DA4CA42D
7A44AA8CE25E20AD924B593A677313EF1CFD6C8AC896390A748E87D73354D649
4FF6DBF9B0D56D46F338E1EAA6410B9C0D5A12B8A4F962361DB12BB6B6D52395
22EAE1F015992DBAAC23E2DA58B2330BCBB8D067FB6B7468E87269DE142C0B85
10647A3611FCD88198E3FA4DE0659BC2EB3557F64C2720FB56B7E2C877F7F01D
8E5829A55A5CB28C444ED5319404ABDDF459926CF0B6B0C7DAA16F003AE92288
43AF9BCA34499D7B18996E1B18C754E38189835868D577DCD9F8FD04F572A53B
4B3AF1939D9B758D83D300CB05DE3E4BD74C1CA889DF71B4AF2A3638DFCC19A9
4ABED0549E6BBE4057CE6BCC91E8CE16F599E2EF39B43C076902634F2F5D8521
64B0AEED7A09D541712B667E152EC1DF851550F6F11C7DCD41E4E2E61B8CFC78
3B74DC25F464FA8D20AB578D567201F541620085A9ED8F644C0FC850D38C78E7
41DFA26882377E8DFAD49E244075D792841BC6B5ED6F9CF5890D4BA737361729
953475BC90F74DDD54FEB6B62ADD939ADA36F65EA93F6ECDBCE0126582F406BD
737C6E3B62DED3A263B93D3B8F1374BC7C76EF485554801D000B54FF53431D11
872F67E951EFEF758D636DA3F9B4E71C25A3AD99F34B17E6A8BD38AAB65FD0BD
1D72E0B4D29CBFC604692F1D59ADDC02D6E13BA1E7DD97808EB00CEF3116C076
947297E11715DB8EB4B21612A6F0F95A041447594422EE27A3C7244F6F89FEB6
06E501E497F9CA9323409777FC11A10E557C9F11F1DCD195C3EA89DF6CB83133
167E74CADC81619B0F787B20DC77B08D79D7947696DF23BFD682D4E580F8F942
80A30A3D156A7A228E92547EE7BB9E717341C99BE3665D7B37E990E3653ECEAB
F64A87E9B10D05EEB39412732D127C3364D71E280B96AE2FA97A7E5DB2B80415
4A9AA2BA966A96C5C4F41096DE6AB66D52625FE0D27F899104E9CEA4984F87A5
6313412603C752AA554734B147D4C870A2A968186C76640F83E93710F9D6B8AA
5D816C93708CF2F577E0FB6663DF80CABE61094C3DD20FE6145DB4638E1CCEB5
DE9711C8D330F0AD6E397A23011099394FABD0A4F71D92E271BE30E075E67843
992D5BB885D5CD5E6095EFE68B40B4B44F72714864D2E9F056B2944020A3B6F7
16CFBA415A9B674072CD3C40B7F7C13E91EBAF5B92C9E403B3753AF55401C28A
A81D2DF972311DC2375449E6A48135A3AC32223DEEE755390CB30C4D93F63C43
211B33177E6842D0EAC4998B5C3AD3476783695DE4C56CA24E8516CD148E19C8
86441E1A0BF55EE35AC8BB89CA84080229DF473FFDD9B84D8E0EE5ED03D22227
9D6BEC783FE573171CE9F452E12D8182B872502904AAFCACBEC21DA0A9FE9E93
9C2896ED6E7BE19903DD5EA5B38040F6EB7558783F20A3C030F4473D8B4BBA59
13636710D9ED94A70CF3B362C8627DC84E33203B998CC2DE01C5D63018C95713
1BFFF00913F3181084AFFDF12DAE9BA1552110F31539290221FEDF0D6F36178F
4D10E5A8E6AE64904767F07F97A6A66B6995E145E80A666CFCC8C0F23F246A96
149F3DF5C08ED952FDBD38D15582EAE88732EDE7A7ACCBB2F808179463E6D859
EAB8EA413B6800C9610CE870684D284C85BDEE3B9E1F8AE30D2D24EC5225C270
391AB70499BCB03BDA36C0F7955AA0FC20AC001F25403479340FF2777BA451FD
FEB4133098581D90B81DFB6CDDE25CD8B83EBAE7ED49F18EF702FBB23AC1F450
07B522D5447146D286CEEFBB71E5832E33923E4087819ABB2B010F73FD0B319A
1FDF96270B79DF899111DD1A6A96C578EF3AC4EF5F26ED676798EA20399FC43B
5384F848D96496027358E638B633E3B99E98A7D8899152B70EF90FF21548587E
C7EE786F2109C5748A5A80AC30305A16931A53B9ABCCC0F83070B94400D23024
C9AA0AF7D6D29DC86FFEE9BA35D594A83570F81FB39E1E02D361EAC2161DD3D7
CB0A0759841612681959D2D46100377267ECDBFD52A8ED8550453C7FEE6CFC8D
7D71D73F8F5730AEE403BAADF09A8CF452BCA950DE7F49C17D0B75077A422AAD
BB691B02F415BE72FAADAA1188DB3678E4441AA573B94A8576E8BC58C64C7DB8
7C7CAEDD0BFBA5882C85ED12A4210A4520E455DB85682DF40D8584F1936988C1
EE593CB6F2537BA048D424DC2AF89B03AF27E84F32B256AD79521C8A28EC31AC
B0DD9360EB370F2BF673F6627D47ACA68703EA2A007BEE3C722A89C9B4336EC3
8AFE5F3E6AC2EC38242747DA31923536AB81B2E45EF45EF880D70A470E920F06
FC31B124056708A24CA23463AC2461ACEC7858739DA18C7051D56C4288F2B999
DA212B0ECE20DBEE3E1A3D10F137DA2F7A18D11234B34FCBC29EAEEA555FAB73
9C98EA7DCCD94C75401874E4473C2DCD05AEA6EE851CB89A6BCFD16F03667D9E
F8DA3401103DBAB97B3697D610B0127A99C82FFE312C8B36645A69B98423214F
A4D8593547AC837D51C661D87D2A356F4B8DB9A2F3A9DE2AB26C7BC50BAD057A
7E7CEE87C1562D9FA21A400F08A83D207B73AFB6A57FC34AAE26FE350181C6E5
116FF6631F9F1A6B77C5E198761086875F51D36BB6492483FEF354AADC19C42D
F449C67DD4BB956177A779D362DD02663C5CD8DD25AE08B023D9EF2F82C104F2
2A06DDF146B46C544F81DC7519BFF15F454DCAC133EB69C369C46531A802A611
6F4ECB97FE00F0148664D6B4BAB3453680916D10887954CA1D55C96372582E36
851D36410A84A53BD8A238A5CB8F764C5E052B89558338DD6EE60E87E735C449
D02441DC6DBB2032B6D119B2868BDBA89EDAE9E6A0504799D6B9E880F4250DEB
92D34E6F97FF8CD0A018CD678CA6E75338426E53459D8313976AAF8B57818774
367FBB7D12D2F3A3BD5DCFEC68DCAC37377339CE692292A725AE011BB867A3C0
74A74A38879AB7BFA5C6F7D992376DB0E332A2ADF141E4BEE1C42DE97195A338
5F1CF0B6A6A3CAE406822A46039CCD0C3061E66FFD6114CD87EA7FCC52120921
299A38875CD5B63E2D1A46BFCAE3276E6D5FFD34C816E466DC58FA38F996B241
BB82EFF5A457372EDE1D8C85741F0E40A032C394A64A1E19FC0B16FABAE39501
2FDA12E69570C57AC1B5AAD2E8826DD2B71ECABC431B660670BC1F9E776B2A89
87657414A7C0CDCEC746C0028DB9A3509F974FF4A929136765AD5875CDB8EFA0
4917A883028483006AF2ECD90192DA51EFA626B20B513CA44252069EF98AA29E
3EFAB657D36B97D3777DBE5AC6AD5E6EBDA91156564D8B05510722273D1CB94B
44956DE9E5D501E21ECC4D225263092330BB547F402BB8CAF3564354FAB141A3
767B06652DFDF34B6FA559E15C2EE76AC52E764BE765BCCA3BA431D4E996A137
72D2F24B41437B3A21D68A292D457CE192CDCE98A4CD3C432A7AA8464EBC8D7A
BBBEA6FC6111D567EECE1E42FE201213BD5881ED6AD07891151524C864381EF2
F626943150C1173F5922BB5062CBB7A629122807AAFF4011C069FB66F28465AF
A2DDADCF6B8A2134164A076FD33D81FE481AB2F76E4D04853492EE8E41755D29
8B1F7F336069D4B87EDFFF07285B6F4D1896AB9B335423434466E084D3B4649D
1A73508AC8AA88E508A44572C3A0CC66517B48D3074CB373F30A02237AB65FEB
BFC3114E4E61BF73F420F90C67D3BB3978537C3AF73FBE15C0AB6CF395419CFC
A806F7AB9697B763BC7ADD76F56A6677E097536D9EC9F3BF0F34DED1BE49CE1D
740E6CF3698970BC46EAF8A50A841B518037910EA6DD075F875A2FF7CAE66A83
B7E0A8B5389EBD4AD7FD790F18543A8E2A38807E710193BFD6E05BE98D29500A
AE888596330C7951F117189DE9DE68225721B05BF0E6D18333CA78D10058E730
78B4AE4ECB36841601EA8917AAD44BDE27E4949CEF63A375EF5DBA04FC86EF8F
E010131045BF5B7135B412BBC04BD557ABFAC3E5D3FE0F9C58038074A6E0C401
A4CD896E42C501B49B4BDB0DD64D11C7CA3E849E967C8B229A4819F7FCC1C166
422866A0A35551FE1F222FF7669AEFAEC42E9D95AA2B96376AEE19D371C9EBC1
D03559377044F498FCD0C1763FCA7CB9646A8F9D81C5EE0BE9B92770729109B2
C133046CB45610CE6C28306D495FEAA55286C13F2E0B78E2B075E7397A39FCC5
8A964D6995997B7DCEBD185AED810039953B45ED5CF0C5249B9AD5DCBC9EE652
F636170D69DD08A357F1DD72907FC3E23F52C74CB820BA2BC011B815B565BC0A
C9AC13D3EF043A6A0C2CEFD8D5EDC74FAF65E9D1A989A68D11C0A9F7A4209A0D
04B4EAD22B8640CE94C4B593AF0D41422CB06E7B758E88D0B002E4D625A1B621
C0259B3537128212ECB09B322CAE024DF5B16E78E4CA1B21DE5D3C9E60FCFB71
36D80282726A61210BCC587D572D4E268E8BF28C74A198F712073EBFA77054B8
F98249342EC6536E6EC34470C82B24631B63390FC301C7438E3541BCD9F4BCF3
17F6A887969B9B6715ECF4C520E7AD16C7F372D874480FD0CE750644FF6E75F3
F8FA7CE7A35B13871665FF222D9FB050FA6AB7804E18ABE9F73A1F446AF7DAA2
09BC2D5B28F982CBA4A3BD6E47EA4B3572C038754146D0CEFDA4180FAEE4D120
CC4E4455E651520FD18BD1E0DEFAF0F385313927041A28504E5D82C205DE3BA9
0C7D4934235D83B540BF3A1487E6550EE3A3528E5DB93169FCC5B86B9B8C11D6
D56BEF6F67A3D5E09BF7891C7581567015355768106FEC6ED881F1319F9405D2
221E893341308B73BA8B49BD641DF62531C8230B43F5DE4804BB97C8EF5D1B82
8939ED1765522FF153775C2CA8265AF838C8782E6C3B20E51C88D2D836D30770
6F1E4773A4A8565C28B8931F745632A3C7775A24EF754DC3BE48C0AF4587D817
B7E6EFF981DEDCE2661216A60CB56A17725E4813E0578268AE8AC980704F016F
2BDA05D2696D70A7CB4325070DAD070FF56E417DC9DCFF8B84823331E9749DFF
FCD1CCC5688FA11FFE03E56CC60BAD33BEC80E043F63C19B288C20718A4243C1
4B8DFA5B7BD4B46FE15B56AA99C6CB950A3905E536B2C38AC6999984541C4AFF
47B5B3033B56B7435508FD551CDE47D24C993D7D008FD93EE8C59A5779BFEF27
4522511ED799EA4CE6944DA07E2145B0BE7224F8800CFE16559E8F20A162913F
62BAFBD159CE68A83247EA9D3070028D060364D816F77BBBDC17BD6DD78E263D
853E06141405FC777428FBFA5F9A66F48D16EF02F7A59D586D3F44372BEC5C86
6EA57B5AE0339D0CE3472B04957F823E2817D068BEAEDB3CBACD8978C4A0F50D
AAD99CF73D53A7498E483575F9838CB09C484954E81191EA390B18C14F46B2FD
3ECB0FDA5B9C9C3ABFB1E8818487CB507F181394F28F444221F06401D10A50D6
18FFB33631CCC145C270138AB98C4CC1C55EFAC9EB9268BFE36429F53D6D8B3D
5D03FED568AFD54E6BA333606FB2C5BF5739FFC11C8FAC53F7D1EB4FDEB434EA
E404E8A8E4823F3A4D865AAD8A4DA6D6E03D766D264D46760EE7AB723D0A6C56
67082CD08EEB4AC01665B0458EDC336C656E4F201003338BB68F3B1A759B5B41
AF476E5CAC113F50462148967CA6DF2A5876137678473D4C64294CE1F01B64E1
B0B7AD4A8EE71A5EB2553F54CC1891FA4194BF5B22FDC35AFDD819CC03E60CA5
9E8FC3F521FA42ABC66578053BD8416053E46ACFC65AE8723AF7E02952AE0AB4
866EED1967D0A67B82B4D233D3B13BA5DE4E9A8EDED2E7A94E683773454B8D29
2B60A875A03F214008C6E7B115E4BFB215F781EAAE55E101A4E2DB7016F9003F
ADD9F11910DBEC93EC957F236C8018CB9E115BC0559773FE36B8F6BFDF82DD11
8C70E852F0F0D15976BC5CA22DE56B57F5D5723B37887AC8058BB5CE8EF4AEAB
EBC68CE29F9C2F1A8E6C121CE92D3A5E1B4803B8EC2A55AD8923BCA62B529DB5
0DA02CD2B2810996B499405C05EE22E230F99DB8E27E0CB84C0978876A7166BC
F5D4DB2D0B29AB7D2F8E0E48F9B1B31291AF713BC6DA67172869175A47754FC8
7F62920E9AEFF6508309C8F1F3F047C9A532984339100BE4F1F404B120F76C7C
8C28B8F4CD9FB5491B1F2E22DA3FAF52A37D2641CD27C8E48BF15EB0E15F8AB8
0920EF1188850B649342049E65A0430BC3B9CBB15AC84EED7E28F6B40534CADC
32AEF1AF66343C5111F66664741C43F2DD9964394CD6A2E42CE812C63268C16D
8EFCE9F0112BCBDF5744FFB46A93CEE3E875BB53DE8D7559F260A0904574C2E5
7EAFCA367A891DCDACE755B64DD793BCB886F4E679D4886AD6DFB64639E9840C
86BA0E641C12C5B1EE2E131A9B44CC0DAB351534ED135A43DDE338F32003E907
D72DCB4474C8CD55E02B38E826AB70A8DBFE9F14E8F23291128BED994750E49F
CDFC9F356D80601831222F0A6CF933E8B9FC78CD568314E6B8FB80FAC223B0FB
A24EAE0781938932A0422FE79B83FE3D88F9445A96E1207923D66DEF594B3830
BD46A099A6B3C6E40E6AF8FFEA64DE9587F72C572DC6F4DEFF0EC59CB538522D
048080030F05D92979588D03D32F3AF5FFADBEBFB24EDA368FE82FD9CBB9649A
9B45CE7BD2A87A21255405F5075DD6130BFFF0079A3F8D3AA468E0DDAB2E1348
208596F8B2484EFAFFBFC5994418334647A5F8881C6CF15C26B7FF43D2CD009D
3BD4F84968F20A40A8325D7137FD989FAA6FD9FEA9A986C9CEFFFF00584E29F6
37A26FB793895251491B720E9B3429E1DB44E1E2206BA3C57E41671EDDF679DE
DA691E30A2298A2DB206C659AC327810013A231970953614E4377D8BB460EB1B
836E42D0C13E225C5972802A9C1A6C5ADC1C94857EA7B9BD18AC2C035B90B777
A213FFEC70BA8F340A6B2505AB243E956D71210D825F31935253FCBF14C5DC50
3EF2E27F62B45E561A622CE75C065005A3310A71BA3FC7500033578BBE993C9E
FB2AEC1684C5B7BB4D9693B84FA7C36F702F0797840EADCDDE798C650C55F67A
04BADD7A433644824299CE3B0F13D56D0D9AB45C0A8054E14BD3EB861E729199
91EB95968DC94DA7F5191B3DE1D5178739F5A822CB5CD163191925B28548E0C7
A08768BD3522826B6EF089BA547225A16C4CD76EB050CC4E3263B3A5E64828D8
BC5E218754A228068AFFCAF43BF421C8B880DEE6B502F6AE8CCE912A3F5DD815
34341398A0EE2253BBA700EB34BFAA1477CE0617106F14E72A4F09FE2FBFB98C
3242B6D40C4B30EC980A548789E790A739DEB032AC90E21D8CA9C08AE1DA20E8
58FD17453890445D5A1DB7494B43B1302CEAE0469C23A8FC1E60F3E1866A89AE
96D671EE4BBD553FEFE3599D5F4F8DDD91263E517F4BFF82939F168B0EC91AFB
73D38FD82BE384353D95027B8F46D3D2C14A62005AF5B6D1835C39AC48FD3A23
934862084D4539F9F4315D0D7F57B50B85D621037B1119324917566C083C2B7B
67103C88408197A7F9555440A50B13469F4AA2B9CEEC13E2FFB3EB7AF706B981
11732F2538B6A5707A46D5B21B8999930CEDD6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 55 /seven put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DA7F2F631C34FD0E7EE6B3735317429D111049B6639DA160DDA2555235
3E6ED578ECFA6389BB0B585FCA9CC4C7E19686727E70E12759FE9ADEB63633F1
7D7313CBE7B7961693C5776FDB9F84A4D1ADEC8B07955CB7AD89D7BB101FB832
5565276FF3490AC2345A924B14C679649A28982481ACAEC990CBB343CB17230E
2C97E7609A33FE57C9AE939084FBCA7AB2B243DFC589C9720323BB68273CC771
FAC745594967201BF169DDB3CAA698EE68445C6429B60F5D12D52D6306CD43ED
436A723488E5D9469C2A2285BC033EF40EC4E1151DAF2303561717685EA2F032
0C361E06FD10B2566873393434CABE47059546708032316EE55BE2E4B527C210
BA2AAAE813D3AC4EF039A842B5A7BAB09B3B12BB6C79C14C494588F800AEF346
2C15202F8C39E3E76388EC31302B24A6398E7DE5BEA78E53C5BFEDE1F20A6E84
C3247CD7FE2DA3C4DE9029E3D6FB24D5BE36F9B0F6FF44BA0A7D41C9C74CD208
87C54268E19962B62EEEB4F9330163E88942BDACFF7FCDBA3B6B2DA54CC57D31
7DE096F67194E1CEADE4BEC82880D6B62687BA961E262D08AA1DA8D0EC1BFBF3
104ADE9F6A3D62571256253CD6E382AFC3C6AA07A0F87EB482D07EFB571F52EF
52097D4BBD97F3347945B7957DCB86C5CE21546E4FC83CE6884B725D0872494B
4A14E4602330DBEDA0064DE64DC5B5C34E5FBC83BB78D09D498E251CB3B3A5B0
A9A0257832670533A21609D77702E9FA6162135EA4DB1FC3699D9A46CAC898EC
33154E0B0E0EA86DD33B40A48CE2CAD4F205C02CB088319E561C6A55FB93D8E6
B6E40EDCEC7876D80D59D658D3664093B81A0B8DC57C5D515D5BACA4AD0E5951
25547D95BE76E0510AA5B672D0D0710BF4AD2F7590C2992804EC9268A59E9EE7
DA68DDAF586AB144B4DFB96DA82CDE6D703126CC1D47527A126743001AF577D2
B03D67FEF8BD9673252044849EDF70EF99B1C9916B31FB41F7B3D177FF4F3D13
EC8A2714028E93F7C2B135F59ACC05A0E018AB30F63FDF51CB5A56293FEBC522
EEFF234123C66BE87C8AA3C86F4C6B4795FCBBF84381330D66F0FFA19056CF6B
EF5B2AF3FC663EC57A6BDED2D0E0C05CD81B3ADC627122123FA5F122884ACD1C
FF88B9FEC6A59EC1E0BB77259650FB5EF306458BEDACD29022F5890D1C55152E
D07360C8F56374E106875ABA4A8728EFFB20012BAB5269334E3ED48D0FC7DF45
9EAF5AD6740DFEFF5BF71084F2E0CC10A1D24F4328EC7B3CD8AF7BE157DE58F2
C0AF6E95576C7F7A2A254F839D62E90A6E28E1A8B12BC0F0AABDE4A6CA5F77A5
624366CC1B74D07576EEE3D61F20C3D1528C5F7504737A700C094FC7CB1A5CFB
DBCD6E3D581218370479933F560AB93929969BCE0A5B62CDF61C6346EC58F11A
900139EB4C7D39BF0BB0D63DCFC2884C06AB935056BA65CC696DADBC7554A5A5
DE446AFA5EC8B6BE8A8FA9B5FCA36C7600E1C8C63746B9F8A60B90B521C9BD87
93F4D97A2AA4A9BB739328EDD192348BE2E04575D6AEE7BC55F6ECE2914329DB
DB88C8FF1842BDE135067809417FB7BF3C00F01ADC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 14 /openbullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EEA2
557F8D2FE98B65685700673A9F840C8578B6D7B384C4A0B2A77C61096081F6EA
8AE970FB31850DAC38AE12D2E458850E6C6CF9E5CAA86DBEF5298290123A8B67
E6AE0B5105EA2AF7D1E5EC95BAED8CAA8399708D4C043017B3ED93F64B37B48C
6DAFB92FC1F21A4EC7894E2A0D724A524696A0FAE044D3C8ED6C393BADB09536
AE22A4FF834DFA815E1F3765392D2DB2F4AB03FD01A2656D715EBA1C3063499F
2468B192BA1CC682212B97EB81FD61322F1FB69E5C5D1EA498A138CD5AED49DA
28411430C42A3D1366F57F0124EE7C8370B7A537DE55B277110EC87721D864EF
9C47AFF828B76F90CCF6758EEA4132F47399C1D8FF6795F21C209B25AF3BDEA9
B7239556A29427EC5F15889792AF24609C504CF2133506A5A20E99C49D3BACED
D5CB3A6304B44D1E9607E65DDBFA55BEADDF7432514D98A43377F80AC279BCB0
8EE0859DA2AF3DC8F13CBD9D331F2084410710561508E3DBEBF67298A09C4FCF
716F2B1F015C7400C5ACA412D707801AC678439B365A110E81511B4CEF7381B0
4FBC8A988F2B773FABCE88A601054E641378E13F001401D328E65B84683A84FC
89AB09669CB22837F62EEF0951579DAE63B6105C47987552D291D4FD4AF5C295
7BAEA061A6D110FC191952E30A0029A8DF275888273712E7A625E30A7F8A5F65
2105D7DFC3E83B9518512C604A09FA49126008332367C85F06AEC1FB8EEA649F
0320F4DC73DD39B6CE7EAE9A5AF97971481F890121D0BBDFDD7EF435EC2E50AF
7F440CA5714925586953FB7B2450A1D9449E0B365F8C5583290351C12962FB4E
F85963B52C72D93A02611F606D331D5774A1A31F5B63AE1FAE5A987DBF5C8374
9976885A78274DC2AC3C41FB3CD899658F2A67101AB5B878BD1E9D9BF9E946BC
B646FB16E4806067890ED6F7140501762F0169AA3CF79381E76B7FE483B15406
87081AF7A16CC5D497D0385E03107F5C5FF0B40DCA3142AAF4146D52C5FB5B05
75C3690AA347A7A15BC31B84DFC492387958718043A06525868689F96062DB18
83132B5C57C4A2225D3F8CB50C7F81A331D9EBA85268926D0BF8AD09422DCB67
220DD0155DE8B4162E257E763B8EE1B682D4F10C39AF27AF7EDAFF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 63 /question put
dup 65 /A put
dup 73 /I put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08EAFF9731E745F2BA8ED0C0E
1ADF7821CFCD4E38F3F4C243CAD31D9F8FC68B9043740852B4CCBDD37BF728E5
648215961FA82A0C847ADCC5187331D0863A4573BE520C02CAE14AED4F06B3F1
FB4A318AB54CD86DEC824707B29F858FD726A167F2333855C0575EAF4EBEA0B6
754B1775F967140641FC06F82B191244186FF347A351FBD8FA62E8C978B21F6A
E124929876488AFA97FAD1A68A0C3496BCA768F4AF8016D7A65BBA3AAFD7F5FE
E75FE714FFF3D54D09C9747ACA01CEFD260985C6EFCF9F0831780165A3374B17
88EE15E86A40B16BDFB75FF3B73127BA45BC6E1F752B9A508639FC3EAE24DD7F
3CAE82407719F13E819159309FAEFEE5BEEADCBDB4CA8582DAF2809A41072FD8
17E7072D80C54F98BC9B79B94FA86434DE032E531FC86C88467D824427A45594
4D02A8D6C95F57140DE63C8690E4EDB30C25AAC4250FE6A3779FACAD88A3DAD5
F0C90B42BB4A586DBD10FF2301BC9B33178944FF5CB128A7418376C414D40F27
F9807388CF2CEAC9197FC725FE8B41073153A99F90EDDD8C3FC2A00E05F05638
5D1A7546F745C381B380088386537ABFD6327FDD1B8EBE65043EB481B83FF7CF
46F246D9D20D673FF29738BA73C016A0E849514AF8099160C467A7EFCB0CA56A
56FF85D4753F5D61243FF15818F79A224E2F4CAE772DFD36B5FBD50F94D7C916
C064F8D88958D34A760BB693C194F0EE17BF22EDFF5E14708A3895EA9B750DEF
0CE159DEBE548F921B0B7DDBC79645099DE2A84B1709CDF1BC546175A881AA67
4544F735519EBDB9976D8D46FE2AF1264427D4732F6428EBC37CE3EB2757A5DF
3D62927A828FE727FE0E570DF5CC40A80ABE4EB29BFF7252585FDE8E1DB44F57
DA148BA035AAF7184AB88804074EEA63A945553675817A2DC56CC52DE14E5314
FF86781CCC84EA72DD74B1F8F59215A404E6932060C0696D36D64715306D070F
2F55CBEEF739FEB8F9CD238389531BEF52ACBEB90121BB4D910429CA6965C784
4459EDEC4607F29BFA90446A7F2E2596DB72C67D28653D96D86A1BB481B99F5D
0A4CDAC36A664B3F6ABC3F45DE9AEC42B9D0098B1D2DD543EFFBA4B021D1AB05
ACF3B305065B498337B8A00F8F4B38A6B47865C501600D81A6250A6629710802
E53DD961F46F0A889F832485B31F3607011D5EBDE6346428A68360BD8401736B
8F6FE10781671ADFA8A590BD1ACBB80BA530C54FCFF6FBEFD910990B2D4532B9
735D8148A4B619CAD13D1F9E8C6260153600964C44665C47B14DEF46219EDB5A
4DD6B41B69195A193F8CD4512ED0B18B6CB4CFE38247596AF7DC1E2BE0187105
126E4CDCC23EB4C4F3818138007D125BC6D9171CCADABE578C85FD65EE4EF8CE
770A50464EC2ACFE996242C200B06CADFD84030200D403606D2174B83746924B
45659FFADF17614A014AC3731EF9D9D78D97F59CB3A87F878F0F8E1E928AA424
46EB4A3CCDBEE3E6643AAA5A650972F79C182231C7F6145BB8FC6661151BC74E
7156C963E846975DA7BA616AA5CA9B41D4C3E62A55BDAFFEF696F87CC12AFEA4
C04F25518793D781A53AD486A271BD9F0BC0AA8DD0AFA89A5A0690687E60F590
CB43CA228DCE1BDC45E4840BEFE5E889004C7F22C8E70FC3C056B4042390C0A6
33A7A31C4DC1FF958032F52A09EF306D4E21D527658A52538853EF79ACEC44E7
2FF33F3D92E111026E783610D64F0427B74AB7A20ADD5B4BE01CB5FB6B756421
59A99913FF8F1642D62B951A6E02E9BE8805185EF0164881A7F8EAB7649A2EBF
FE7829195CD5E1E0E20F478D2F8767EA7C97FE9D8DFA0C8D0E9756D361222AA0
296D7C99F5D7BFB838FD85D278C3E6CE58D9397D1812572AB5EF8A6E05E383A2
EAEE89DB2C8560E08B0EA1C48EFADAB2969B9B34EB6B46BC8D1F8459E72287EC
86A84BAB92AFBBE03298CF9A3DB25D5EDFB79635B93AFE25BB0296E6B37CAC7C
1C666B61D4B0492B195EB82989D2975E58C9730BC4721116288135A6196059DF
5EF97A4AF0F6F292E0696CD2D0533A9736DA26A5585F01377A22047D9067DFC8
02F7D64E6278AA37C1097D33F1375EE900625165CC1A02EF41DBFCB778C4C474
EA4C4E3CC47E15C76D53BE59A389E12B404E52CA7F69695924A3D83A10478D36
B275069EADC9856E2F5FC5BB0ACD241A0EE03E3DE02A9E1AD0541D6D2E2C9316
6060A42381909E10DE4E82B050DE373ED0768E35735C08C5616E5E92CCF8D12A
FC2435739383371D24B7E678243E2BB1E41D2648192179586958690C15A66F72
9388D5B757F8ACA755B1AB16098B60FF83639CF6A73541FBE78590D39FA83E48
0C6A6E5C451C600A86FFBD69080BBE2456D7041C2E4D99140BFFB1F6ECD1D833
CBDD111FE6EF04A2D8DB8930CFC721627F766459CD03CA45FCC601B584C40665
A7A04E67EE606E65E2F26EC58D62948576C620D0E7818D8C0F6D53A23A2394BA
A54D72A4CC79CFBBE27E04769970BC2718EF8C7A296612F46BBF1F90086D9D5D
1C2914A272FD0BA6F095393946397A405C1DE176AEBEA78F9B90BCDE15CD4F9A
3A0D5959D2F6E122333BB49B60AC9E4EE39127A9F3ABD04DA40B5960400ADD77
95C2D6B1C9125FFD3A8303329839F3781F7D05C0FA672FF7CE4557E2E1BFAA48
457C2FD3AE5ACE74F6E615FCF93C06254FC89B3BB38665453A42398D324CA27C
83959383B93CC511EAF896CBA0EE3AAF33AA433E9D74D44E409D6F3EFD56951A
338078D70FBC7A5A69D97D6DF1E9F045674E97780A36520598354360F77D14CA
F1510C7131815D5B14E1013529BC8406E184FF206FA8CE98B5173E642A08F31E
67726D396E4A6F814F96296C022878277AC232415395AF3D421720D1CFE4369C
8F171B50E11F380C3DD304401F76B0AE420B5F0D070A43BE2B2ECC9C577626F8
C734747B6C5871B4669E10B0A01DF8F876EDCCE9874057C6A5AF7998EF68DA4C
222A96B62ED49FB581E0A5EBF57547608E1900AA2C41932858F4E389A5396711
EEF7F3A2202DDC4B1F193A3704FDDCE146D749789A1DD88D2ED4A2EA488E84B8
839DC61F089BB9A5F830D8B6E00F5F1C139BF24E5FC3378992D45661FCD930E4
7A1D91FCCC7A7E9A6839DED3705FA35A626DE31898CE8DA9D3B96EE3B9662AB9
631060DBB0E3F7AD2FB4A729D536AC5FEC282319B3E4A4084F3C5C182F248D1B
6FA3B9C0FB116513DC610EAA1F7D0B3078CA97338F58B5E50A2D0A91C68B2EC2
01D796069A86F5415BDA3A900346EF62227432048B55DCEDDBC97A859C803D91
1CD26C8B219DD8A2C4B6496FDEF5B05AB99B4435511AAD277FDA59BAF274E85D
7680A78496310516B80C3C1DAD1038BBD21ABDCA676C88CDA67539FC8CD01866
E9F3C7E9B3BD8F5D739E63CC1EE2DBF4F86EFB2F17A825E1CD1B09EBB1DADF78
79403F1273EDD46C31B37CD1AC4F7FB3F0AEDA599B7863FD0146CD64855A3858
7CEAEA9ED3F53B6131F22087B192427247D6278A2CC28C985968CCEB6A619F9F
178CEE8125A0FD78BD81A4F27F639672FE7FB0D97E7E4477D4888617C1D116DE
33B3B49C49381A8CB7B4C3354FA6B70459C61CD96D1B94F5BAD68E4B6C39EAB5
8E6700F3170BF7DDEA01C4362B79CD9F4C8C344D0566D74537C9B02C351D1B69
960CA6AC97D8B6F3E8E2DEB0C187D41773FE41A49ECFEED4E3203F3B0F635303
44BD2C729A62D10750FA5AB16F9DDA0130C5DB06D8D358CB3544A35BAC5C7198
9FC598630057C8379B25D860423DD2C022E51417D8FB92240D5F360B72938731
A94A868587E424BE5C6B124BF3EDAE5C338DAE4DD3AB3A5153B5AD33FDBEF64A
269F284832BF844D07E43ACEAA9EB933F6EA3CA762683FFB4942D78E61F40604
3E55F60F3FEF18A137C71D1712757776555BF823CC7355EF3FDA972842CB11CD
1A47311433B32DDA12036BEFC51A05E865793412FC3488E4A1991FFAE78203C7
6400DB8F791CC771BA9F0A0C7D7DFB8C8805363156E1C4F6BC0BC018DA861C69
EC3ECAA61E513ED8B5BD418570DAE0514D2129D05DE85AD1990934C954EFB29A
050CCD660C9F0BCCBDB8728C207E66672BB0640B40B6A021E21D15FA3AADAFD2
A850D53CAC685CE04B57384E74E9E6939EECA68C67BEC03A8A9DD0A1E38007EE
F3A634CB3848C8F25973A271DAE4FE99CDDFB3A8122B39A7D8CF21F49B9F8E7A
DE0ADA9B3C794AD699D05B692703C3188148D6260CDEF1AF1A1E58B642B444BF
3547DBE3DC87D40BD9509DDE065AE69F988079183B123729758C879F377DE198
ADA2EE2857DD8ADB2BE861DF695271BE78A1D8D0543786A2937E1AF4C5FF1FC7
F5D7C5CEBB2E82108AE0B6621F0B14C906DCCB032DF7E2D638FF4DDCA85190D0
B99262AFDB9F37F32CE5CE2563A24891DC9B41210321E77750E0CE096414E087
B3050139ECC12E004836A6A4FB8E236AEB12AF6C67734922A11418AD888A44E3
D2DD3A4DDE758DA59D0DA722ABF1C3EB1421A55B729622D61D37E965F6B402B8
5EE56262223F158C458817DB0FD4B4EF47EF9EDB530610328EA75B5911BD60D5
AFFA716B1B367193F97070360B4445E82F0160E49894072D9D252768860A8954
6C64A3F2D822830E5C1F3B24E6DE37606AF6B43E834DCBD4DAC5DFBD5967C123
88DC982D2AE8DF47BC5BE9501103B7BD33EADAC8380457ACBCCF6559AB2C3039
33C9CFB1D6AEE795014535DF0DF99420B289ACDDA2A172254638C4E0FFBF4B66
A7089D3CCCD064C2A326BCA56396E6249149CE28BEB8F4BBB0BBC5B2CDABA332
4712988BDA722A69163044EE6167FF5BF3DBD87EEE4E455FB2E37FDE97D60000
31341B9D4588BD49BC194F85710489784B922E83DC34101A2FDD016C8D967EB7
86183427867575ACD664AC9027D84C4AC585186063F32BABB8FD4935CB7C3BB4
B22BC87FEC7A810775B85C35379BE9D43A57AA2493C2E4B54ABAC9AE95A6EFC4
4335250E6858356D6478B741AEAD58665EE693F9DEA3BD14527D714E3BB614C5
6A19D736AE1E1636174325C5BBD96E99BC8B91C84C02A80053478E8D8B61E476
B64AD4274A508652F9695DD512F6C2EC81A22EDDA8AE788BB602759A16A0762E
FC243A377CA30B189CD9275FD745D6982F34085D329EEAE2BD6CE23CF2DAE6AB
F704C8F4A73D6D12183ADFECB4262E8BBFE62557C2830BD269CB92CBB238250E
4DA2B9FF1C652A1CB1882AB568B8FC0700ABD7947389737FE624FF3CB3B84668
527551985ACCD4B2FA08BF7E37E1E7E986D89B561AB8A50583BE9FAEA8DD9013
199E726C99FF77C5E4A1895CD324A9B2CB3F9278A3D04267E47E75FF0D723364
583100EA8206A61F72CC9CDAB5A66CAA7E700D618DE860F0065AB0DD1F729176
827EF1E4F370C6A5290D44388369C1A44D9C004067FD06016D6FD5939A9F7C1F
EAB153A3C00AD21E0ED12F4673FE0833FFCF0A93A7E606E5F886940BE13162CA
FF1B2CDF33E8B320B908EB1AD55DFECC93E6B966E07EF1254D319F07B64F3149
5E759EDCD34AE3396761DC37C144C64B9D57C3703F0181597BEC6FCF4DD6C9A5
5BB5E5295F331AA0B0ED2BA5E4D5BA2065F132494DE00E95C9283222D73B9556
F7317D8D20486D23E8FA021CDC16FCE2BFAA4523F08989647395B6FFD31DE5F3
095664FF668CDF043E333AD5420363E13DFB179D3ED7E2FC542BF51B41479CD2
A14151C38A83C34D9E4BD5A5A891A6A2A848A1CBF93AA011271EE3A4B68A6804
A3FAF9E33543C05A7123945B922F7551BD89B2BAE2F1C14FC6A96FF8BC883583
BE272E7B8D493589562A567A73BEBBCD6E7B0E97985603059C7EE0E0385EAFEF
5FED20590C0C34E684C20859869A651394CCC742D04842B3A2795B25257C6E03
38DA4FAD8E46BFE9284D82BC69934D62AF6F7B830ED455BBCDCEB39E19855949
B8956A8FFF3AAF3E2CB5132DDA4B5EE124A4DCA599AAAA77F02F3BCAACEFF772
AF454098E258F888F4E472C134DA57CCC5FE5FCF2B373F3668BC991430439CBF
1ED14BAB16CEBBCBCCADFF6803B31E5CD9D665FD54BB8AA27BB2CADEDB606CD5
907A094B3A0C4DD6AC84970B4EBF0B20776A72E49EFD25950A4E5FA1F30143C7
B6E51F474E445F000FA3C45FCD81DEA448E67F9E71F3AD81D0B9DDAA6BBCE3C7
40F9A1A6D367840CABA94F1442D85AABE370C22A01CCD10073156BA9E7E3B708
152E2693449635C8453939303B402A179D818C85331E1D40ECC988DE13D1A364
E65BAAFD767F72FCBEA43B4FBBE7B8F034FF0B1EB03C27786B40C0B4AB1DBB60
DCC1B4D54A7CE496AE72F4CB8FF5D727037EA35843B29519E6D8BF524A78E6D5
B7D113C8D574D1642E4698DECC40F031A7F889DFC228233AFAC2854F42A43DFD
172F2BC75CB1F1BE225B899933672B5B3996FE2DF31742A41420A762B24C245C
B64F1CDD20340498E6FBB969F8734D8A67EFD5B9413C9639DF6408124FA6807D
97B3F16CFC93A209B1CCE24102D93679F70E15DC431AE5CEF713BBF19B77ACAE
0B8558174157B8E3E7B676414C59E8D9B2550B1FAED337D3D0E7BE8CCAAD49DE
DC1AC0BE29478AA1C822A433B3050C11562F713531F2ABC9793C4E4951F5E363
13DB26E46B02706025D8BCDBF97E2C5D4EE099CEE5E4D60F4081BE212C272E69
B724E9EB1938A330E924392D610B3F10621594B0B1CE04159DA3B47A9F971E98
6A2D51DD05257C8280CA92751624B386796A66A17231B4BFFA34F0EA73B7782A
3B80F6E554B7BD620D981E73B41A5B90A9B38CF0B0825348D78495332F9C601E
8F4DCF1B113F397C93DB5DB5352136636A5821BEFFF6445F8E00CAB588BFE6B3
704837B98DF476C18544410358E6CF0ADE0F82FE413077E1B8E820E25CFF5E15
B3222E302CF8EF21E75B315F28EC4DC23D8094F0FAB98E2D3A4E25F7F1E15BFB
A1E154878A584054B1B9E8AE82B050C54BF75B834B7C1C2952FDCA7E04490318
AF691ABC090A3EB827036F10A62818A92FB0D38581831CE4BFBDE0A187DDED29
6ED164242B01C9AAF2D9CD7D1CC132A742ECC64863EA98053DC391D699A5D110
443BF34D89C4183EBDC992B760B325E6EB12709B7A7A608169F3FC0DA55FC6C1
BC28D8815F0B5089206BFAA7437BD5043508EBB8F2763265AE7FC642E3702F41
3CA54717C5D63AF18DFCAE47C4386AD343B78B70C786063504F4EAD968D403CC
5B31427BDFEA0E61D2A8F16947C239380A0E5A6400422A43C28613AE7941285E
679F997AFE7A2D2674E3F12A34
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /Gamma put
dup 5 /Pi put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 127 /dieresis put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD2E141C0A7B647030FFD1FEAB8CE703C40802E0D32EF0DF87BBD5131CD110D
BF5A11D66FC2087779FCA72E245C6BFA23F60759FECFDF932C3026D4CC21D843
9789FD52FD7A85BEDF58DAB6334F4880C2C99F49C0F64025C76E0550BC4B8AC8
5C7E817DBABA0E78F36954E9922286067E92E69D23E9FD278CD5F26788A7E5D8
476DE8E21397716DBA03B23D85CC8B701EAA654C5EE74F40D6C3AA3F46E30A2E
E663C2CC64E2DA3631AB809AE1B70CCD429EF7488E7E5C782C8311B03F19DC37
7EF382B6427E01E60CCE30B07576ACBB6E7EE72D60244102BC6864CD99B068EF
5C3E6357348AD409FC3794D1DDA03961ECB2B2BBC1FE5C4865D0CCCE24AEFF7C
B60CDC148E37E05F6347E3D00C46FFF87BC43B7676E7E463180A9EDB2D410CB9
E65415E19EFB29A555B672B03B888B65CCB6E8BCFD8FDBAFF555072643BA8F78
35F74B803750A31F02AE67AD825FEFEF2FABE1880E3090B061B588AB3B7D906D
3B5269509DAA54F2B61E38C043CFE466061B16CEBB5C347C3819B115C4F9BD53
0F39CDC56C375C212393E44217CF6FA96EF2AB50BCFA85D6626F2353FBBB9B67
258D12EA10344490E066B665ED57380696D33B3D389F221A05A657C6271CBA3C
6F6B1722F69A70B4C3B8C2345891F2D0DB1215681DC27A61E06421D3291B249D
865B878EC0B47DEFEE25329BBD5DA29C66B968F8E8FCD31C57E329C262DBD34A
C593EF6F481899267D2B56416D2DA5A76F2E5666E74DD47E0BB48FEE0CAE1914
A3C1C3948B7B2524ADC36FCC28EB515C31071958FB3DD6CCCEE118DE2B29EC01
1368DC82631C648F23F8120B9BA3C7C0BF29C98C3E0D42D357AE2528EA3A4259
87C5AFB791413A1691E6EA72E8A644332069F3CFF233193884EA30FEE43980E0
07D5E3A3381236A4461CD922F80C040CED913C4CCF26782C752C566BF198061B
7533F6B62C7CFE6E4C8425B2C7AA578159708EDB49E2CD9C49B8FE90015618A4
806972BC3421365A776B198A7926682609E284F23F904EF6F4F883D75148B60B
E8333A75F7F9E364888768115C79AC70F73E073F1F5A0C8FE2C962FF21D09AA2
AE8FB00C6E3C4464CCEBC0199A1B5EE145BE816EC2E1176C13D69FD559A97C2D
8E4DFA564636E08B313731C2B56E7726D2E9BA37B6593B04DDC80FEA1D49FFA9
CC558890930C69F57337434C25A54F64D0CE4657BC61B1590F90290723578FEB
1A084CE63F9079BC948EF67EC4F37204799D1C268AD8A3CFF5141454BFA24261
DE40880641DFA8255DAB46D40DD675172A678AE3FF0B63B7EB1CA76900FE0677
15343F7AA4F0BDAF0A9CE588FDD56EBEBB0207DA3C900B04AE3B1F67CBFCB07A
5F92079B15E42D787630EAE379D6C7831E6DC99D5AD1F15D672613E678ACEE39
DE6CF0F7DC4450200EA06A42F0B00B91E51AFD497B2AC6FCD0072B18E211E076
34740C4E4CAEB2A39164445F7D5B0F5C991FACB8861A84A94DA9EBF4557B6D05
0145BD5FA755FD4EB092ED1209E0437AD71DF8D0EE92CFE1B7BE9F44DC6545E2
C2F06E294966D7B02F4F69493FAC083A5B95678C27047D12041F3F0AE8087123
DEA86B4FC2A91B214267C6281DB5D1792117B6C610B91D1BAF281648240798CD
F685E4C6DF68F14FE3C3907D013A4E923E5E254E36F2307A9560736971C87AEE
3E4DA05C0F7136F43B653A821C5FF2CBD6F0DCD01F0A819B1EFA666333CE4252
2B34FE0842D84F18193A960CC57050B31EA3B73E095EBA0A463A68D5DA98BB38
E7E04310032912C292C66A8043890B0171A852A830805677260CBCDBA271EA6D
B3D9865BD7A44DD8E96EC462E7BAE280101B732BA3D291977AC1FE099D8384BF
87D786197111AB87F5C72AC533752141C0D9A654F86303FFAD88E56893F22D41
4A7CC837A9F5471A82E8407807B14C518BD70B5B72FE6C9EA9FC3E32BC906631
0050F15F458AD9071A434EC40BA0033B255AA2594CF4F606140740E723CF02B1
CBCA668E6A7CFBEBA20A3315F33E67D9B5CBF72211DC080DAE41C1DB9272F4CB
B362A6651CB0F05325407F5DCB08B9A21559E05378C9E8EF486969553235AC4B
720809F08A5DB0CD3853F9BDBCF2800CBA474ECE7EE30316A059657E2F972251
65FC57FDBB59ED94C6F01E0E798ADADBC2D91CE0B64676BB85F932D647CCAD75
D14A82B632366D9619CB373604DD2E3E647BCA0A37FED6BE28A273182AB840D3
C59A459E2634D0789B9A2AA705BC21CA8274444E01CD169499D0594A936DE2A0
142B67FADA2C28D1AD549B47909434F1E19937978085A6E3C624AA0FDFE254D4
F805388B841034795BD6D10D3EB521FEE645C23F7E3740ACB4EA179199B615BD
BF33A09B119FCE210D978183EAC233DD3B48C17580B68AD754EF8E472303212D
2211BEC910E205A454D895A540B5FAE3F9AC083E609C88044177FE479FCC0922
2E99DC8234C12BA736564239A7319D994176F21C1068C1B8DBA10344EBCB4F2D
41F2FBC2060AE8E6FAD984A701896534AD7BCA233AD36658B9FBBB0E24AEA829
028627B26DAA14739943567B6B06AEB96D651D3164B8E0EA3E2E401B0E2B2C25
AFE06E8701CCA51377DD5992D49F2DDFED20426C23D37FBCD06C7218D3F1C6CB
3D39E57863DD113411C6FD86228A85738B33E663A01D5FB289541B36DFD0C07C
E3248793D9AD71D00458AE5B08E8B716A0BF2439A44FDA981310F87DA7DF9225
6CD04CF402381B8AD3EE9BA48112BFAD7E4CC9A5702ED1BF8153E1B65632E3D9
9E8E5EF4A1D84AD59C2AD0A231AB47C97E711388F9E6569751F427AE8319F18B
005C7C7F23BEF40F26A2734519A717F0B6DDA3614441D2774EFA67BC30D57061
4B671E9FE7E4346449996D8B752E8063569BD49B454C5BC96E7F757A6D1CF321
40A8F36E0276F9600DAC2734CE0A8FFA8ADC3221600D167AFCA23E7C11F3D331
CD36A1A4340A7281DD35F66FB0117E44B787338D5BB0EC8802B5CB91F7889698
D121D82FE3FD2496A05025C9F7E528E22E75C0B9783F588BB329A0C0F932F33D
A4A1A82BDED5D53D0C32E2A8BFA1940239BEE8FC92717FB1A9FE75E722AE0C5A
41170F21723E092BB8DF9C0705780B1E075C282C3F51E806C7520952DF87B315
4F21761F57837C60CB0C0274E960BC7C559DDA331C0C9C3B01B45E9ACB9BBA21
BBB3706FAED034697624899DDEE961EEEE7A3CF9E64D3D79CF50AA253DF1EC74
235FAB6ACFFD9E8B4AC831AE28F2869178D8AC2C527D99F2A0A96E97241F85D6
AF7AFD007238261532EDD65C27554EDDEAADC3D42C90A2F1D142D428D896478A
EE38E909A86E5422E1D0EBF0AD955CCACFFF75DDEFB75E19F726583C6C882DF0
2CF887A0DB18152D56A72E272834A57DD3F6646EC91331442DA96C8EFAFCEA03
1637075013D725A78A1D256DEE088408112DFE448258460E39549B274D8D9CE2
D5C9EA9550F6338ECDE8C847C7C9D55005B23544BB2E19EDC6F413FBDCADC6A3
B53F22D82724DEB1C57A7B6ED7E8A0D49FAA7115466D96AC24132E92E73CB3B1
300DD163CA6C29763E4F67BAF9F63E7913E6331989F1C6790FAD1257C5219EF0
D7ED82B800F78082F457A7545EBD67683FD55DF3C02946937012E6753981B207
4D56CFACD47A17E82FDA5E58A2E691995A67EF845B6DA9E79EE644EBC5453E45
BD39EF9982D76E17B9552D7BEC838345644B74C89BE7D3341389ED26B1A8F8A0
B9077A8088D99C55F0689CF233AE6F3C80161F6E13840C58E54BEA1BED2E10B1
4614B1A7C465F1C892966ADC9AC3061A3D207387E8F5894D9151A944D5833BA7
632CBCD867988C4256D20CC8A3E42CFA3478C7A08A2D669E20AFA4EA839B306A
B77755BDEABEBE48231E2FFC152004E0D0659424F3FA1159B8429AFB5BC7EACA
4D8C2ED2C2ECEEC1932AACE63DE825D5DDE69392546A9760E5EC03094381F837
4E2AADF761620F17563564C8FEAE0FD2D9289137D70EC964062BA3D947AC60E9
023C5C5D5E82AD6F583D2913CBE710796CF47F71B0BA1B7F703C1045C8CA92EC
4DBBE8F535E119CD01074FE208F53C793B2E71D62450C5A10C31769DC26929C1
392978010040E87AB506F8482741A51AAE5628B642A65B57F5410A336918017B
CC772F8502DD958987749AD98CCA78494977E77919663A759029D4A4450ECB7C
46D47208A25B73DF40B4E922D5225D436B2B801A244CAF4AA87631B5D4A07C8E
EB54D8B537A80331B22C28639626B7A23340098BC6424CEE7E4019486EE50B52
A4FEBE4C29D068DB765AE9970B3917D8B86D3C0858028BC8AB4130A31D73867D
8B0703B9B723748DDC1DD7C78538074A986FD3D3E99D3E4DF68B824E368FBF71
F9C69D5CC891DB2144FCDC82251432C7DC8ED0C1BC12412C39CB8C04758DA3AA
313CAD75612967D965DBFE96AD2EF7CF6103E5450995240D057349939D57B724
4B22D09DE0E9BE36D78A201B1F68D816F7B42B6391C53BAA16CB7BF50F19691F
15D041F8BCB36EC3304ABD605F4B17876AFEB4562A873FD5A6F23BF1303F5CEE
9F7EE420278B2D9F08A2DBCF8BDC9D14D7C0F06879FB6D69153F3CB8D262C6E5
8851359AE76AB76E4E5EE7261D6AC3AEEE05742C16C60A43F6F500F86133B7A0
C1D36BA3DC8A5A8A1AFDB2E827EE8433936EF9D35A2C5A867B53BC12D33E4FF0
6A010D0709E188ABEF0E43B28CACA5A957996094E6547931145934FD623663AE
F6AD8E43A536DEC217ADD7F127E271BA9BCA991D962FDFE455ED17B63762D1CA
E581BCD0CA8CF9251131232DA5F76283F3F3E42AFF0BCF277D47B3AFC6C28FA2
A48220885626B2826B880D6A47AA1363D13CEC5373D6556865A1AD92AED5CDCD
99E0F851F9DDFD26EF3EC45525047CA5A4D1FCBC4D01A44E4D1AA0B4F212E688
92DEDECA29021D2413AD577C8FFDF424AB6E88844BA9BAF32E8C686C93961BAC
6F9E37A9A29CA8B03E272F32052CADECA55ADFEABEDDA820BEE4EBF3C13FBE7B
4DAD690D416E6818841D5C8B935700A95274A20E4008C2A36AA795A50EFE1DAF
E75E45ACBA5D8AB30100280C2194B5D3C8588A6AE6EA0B546D082212A10A8DB3
436961234506BEF227378919BE7608BAF2568203710507DAEC9FE96982067A64
8E9B65BB77CDFA64BAAFDB2182A14D3359EDDDCD59D9DF860FF34D057ABFE76D
8A4DDA92CA0868D303E703B8198FAF2E4CAE4FDAACC16E79952F328EF45BD1E5
083561C17A886696BCB951486EC17220D85889A3EB37300E5A1895FC0CA6653A
2598510A643BEC7FC6093F0B29DCCE94B8D851C4FDECE337D369EAB4657E7B29
1E803D1499230095CAAFE5811E5DAB8414FBEBEBE8A3D0689A576491F5B026C8
FFCD9A9C6DA5242C50E1D35FC2D46E113C5FF117524B0779D8045A704B2817E8
65EE6C7B30D68EF9930BA48394F23D5F37698DD314CB28CC4EAA54B6CA9D1C7F
D0A6D1427A823A0BBAA191EF3F761AC60EA840B6C2C26AAAAF6AF42DA8E20FDF
F0D8D357D44A3F5D8A772A1F31BBF5E5F267B2FE9FC3C9F04383CA4136404638
5A6E0E7A7A128A5804573899AF162ED992BEDB00D746DA6363F0119CEB71F9B4
43F0F4E820FC771547F68D42FC91A03C83B1E81D6C228D0D3031B8BFAEC629DF
0FAFC5114C9DFC2A04FE7540BC621B080C4B2F5DCE6924E039EA41FC31262BC2
218D55CCEF6EAAE07B4BE6231C4AA5B93EE82F75F2AD2B24083A473B787CE48C
7AC2C960B0766E9B880A887E10B1D3688F1FC1FF9F006BC7F0AE8CA77C3E04C1
FA5F6E67F3DF04666E1BFE02B15AFF6413A7B642C214D5723539DD6BD2321774
6F268DBB25C2901425588B5CE932C84A4385DB2DD5E8DC1DD52E20B779C4F64B
0B3950222FA43EFF75649EECEEC9409245536D3C6996DB9E8058DC63AA44391C
5E55F08DE1786AACC618A256BDF6AE65B58158BCB2A00CCC73A8E8AEAD320CB4
18946231141B9CC18B8D7ED41EF3B7955EB357D737F15CAE963314961545F057
2866169594AFBDB28DC33935E03117F9771C2899DACB376B054DD668D016CD47
C86F86A74D76B4F878FE0A75DC268D754831D2EBF68C549FF9A249184A21B74E
6ADB416D02C5B2F3979A48470454DEACDC330CC92BAA17366053F954EEB95D64
FE26BE2A66143F8A11FA3D663D5C4F35DA671C45C9AEFBBA17ECF619BFC8FEDE
AEABD1839777070CB63D83A64D2106F4978F97335EA64323B192EE871C34F94B
F852A3779B8C7E4B197567299EE5D6CB6CED74EA7A498225B124654ED810A3E2
2CBBCDCC2A39F59326CBE9C746585D404C7421E38A9C1CDA97F47A466C7C1D83
4111CDB08EE414CF3341E17E08A981EA0A9CD9C7A6D180291F61D308083DD09D
4B8C64900BD02648DC662DE9AB1695146EFFE4C102770F073AFCA33DD16E15B3
BB1B5558F247B31A25F703C33899C2BDD80E426190E84134E16C5C435B7E1510
EF3985F541B91B56EDA8A23274941FCE7D14D82A4CC28B7EE10739AA28FC9B9C
82255E808B6F429906CF79F447C3F9B64B028722F2272CF1C98A92A23F3CBAD1
CDB7D6F0957596996E0C473A76160BA8323F421927B785DEF000CF05AF34CFC4
41DE88FBF2D6B94F120D1E1D9E9F19C46E14073A7EDE88DAC7A29B1761D53813
FB7BAAC86E4E56420F61DBC16FA924ADE408A918CE831F9B99B83C3617019654
52A185F7BFF1A94D29B5EA41656FB2453C7E0C811AB433C14688F22141E67074
C398148DCA86642048F2BB87F325E34E7B1B053FD9934A0640692B8013499E80
5BD38A709AF4997D257F7DC5968302BB227B761632CE15CAD67EA78A169B3720
F229850C699968E2FC78EFDEB5FA88530889038D7CA724527092C4AD9BA5EBCC
59300B3851A17EE8BB3C5550B7D72B716DA2197752607A4A4739CD2E59F28D99
587E929AE1359A6E637266330E369BBCC551CFFE427500E3E6FA1A7031EE82E4
DF7B067F4F6CA7126E8A32136B6697E964EDE5498B7AD49AB5150E90F3E3A16C
890FA5C14F777C6E12B2BBEB2DDE04A561097F3599B08DDD82C2F2549AEC7119
01C8CA67DCA591744FD6563B50E332CFB6851710CDA59B6AE65277D5A8F498EA
90F6203DEEF7EEA7943BAD56CB8722F0556787B430782E656DCDF68B020DE432
EEF251C3B01015963DCB25E36F7C6B08C08BF55D2E60F4B59AB90AEDC4D32BFC
C9318873A252D63A649301371DCD25CFC1188E65DCF7A929444BE80208AA19EA
9C5CEF3831240DF532CEFF5E057D9043DB7CB4EB34146D5CB9F7CBB93111FBFE
AB3D28447E7348FCEEFF44F169DE80363E41288E8C9EAE403D3E5C2C1AE2715A
5E36987A32667331B98B6E645E8613B58802A3DF7DEB91DFDF12FDDDEF79200C
ACD8DFC4E359AEB7DE75EF648A3AC71BD3E3580978EDC5913459861049B7F389
9F63D424DC783EBD6D9C251E5D66C9F68D9C8D6E0C8826B3212C3B426BA4B800
FE2282FEDA380FBEB6B2107E6ABE78BCD2A120D024D33FFAE629300F2D9242FA
EA1D67870315214E4790592C79F663C974AE2BF8F87917D25EBF495AD93FB917
80375590F8FD4A2EF2E8373AA924F7432D2AC44472D257BB32E9AAEA59B0243E
3CF555103DA20199E83A076068A25F0EFCCFFD8B1E334F58026DB25197D3E03D
037DF5C301312266B1B30F56E10B31677C38A9F7538F7460FD7FE80F302E64E4
A3520F7A56785AC2F9AE615D1333EA2FC5FFC8CC6C459C2908A7ECE39370AF0A
1388B0556D11374622E2044D8768179EB11E41FEEABCC9C731B7A4488278E45E
1407E2C5C0072F495573EAC4B0FBEAE474991B870E3F1209C460A5AAB48F5233
305A72711BF1EB5E130912AC96AE4070009651D3C1033E3536A1B7F66747FCB1
C3EB5076CD62B46726D0DD41B45F6986BBD7B0CF5E31B4166E4309E60898A741
E49885FCE092EA17F917F93D84F2DEC77EABC307E5F2F363B2EC463B73BA56FF
A3AC277BD938F54BC8B1E00019C08F6A46B767F060E53FD0DAE89571D69839EC
FC1B9E9D52FDA64D14EC913546F76AC5D6CAAE8731DB425590527A5FA035A74A
85C140AF76B0C13608E9248D13B8B88523C7916BA6AA1D12169C39BFBB1C987E
24673666C9E85798A5B5A47FF1C1090C6D73D83276EC76265343A81CF1F5004D
598F28636BBAFE3704898E6EE2FCC0E2FABBD673458BDA9F31F1881F9C70B828
CCDFAB10F3C12339D89F0634BD3B3061FF587CB6BFA8309F3C21CA8488E136F0
664E3E889F88D005068462AF6AC92F17C5309D640E2263B3E8A1758EA722773D
30784FFF91D5D9FDD14C0B7EED15AAD2223CC3A8E273ABD29B6D2AA6949186CA
46087768FAAC1A34564F02E519E3D49FA9F721E7CB5AE33A5D1C2750C7E17C3A
CDC0BA36244B8A3BDC4676569604F03FFCDED12FB5E5AAD82A47BF58F04CE235
60A1250C313229D033F79924B81383DFBE27A28D2B796B9CD4021F003522BE01
A5AA954EF90DC65BE4C56D3C57E1499517483C6B74BBBA86D3AFB39901C56B50
CC9B54B9E9487BF576248BF078C8661FE88B1D1A1C41A6372EC83E0E7FDD39DF
373E509135BF868C3E5532AC46C86BD4F8B90F406847FB13AAF8B965828A792B
EBB044321B4F4AC6F9E3A0AC7DC56A436385FAB102EBB2E2158B6C6DA20EB417
2820A441663CDD216969F1B587351EDBB967B025D2AA65B8C2B81541B1B92754
D444576CC08E564DAC595C5B8EAFB51297B5C952B5E997E17672AE2105F84485
2350835B25612E0E5CA42E2C54093830F51DD260A94E15279C1CF521BA46C38B
E6260690AC8DCED5C05589BA73B20C89403CA3B0A0759D9606A476A9C15BC6E8
F1D3659254DEA9C76F836B1BF47E4E0F0AD6B431EF85E5037355745AA5C0DDCF
3E9E504DE4E765255E1F9839D5F636D01DEC3426652ACEB0C51327570B355810
439B37198987073E0D1792AC0CF18BAF9ECB7EA6D39BBDCA34B7E2C0475F6C21
E6133918999EF61A82AB0B55D6EEF92EF472FFCA640480B69CF8C073330F22C0
475F5CE9EECE56BF6633D95C06D678A8A90B86185D7C001A609B45C0BCADEA23
F06771D54D047CED8849C44194585D3D9B2BB1BB2A25E02FAA4CAE748B1D1F97
9C31F20ED4868225D4D8DE2C26EE51EB43B3413BC3F73B91A8426E34BE44DA92
5036F65457858BD80C24405E8ECE81235B39431C548318902380BCAD0380B8D0
1738EDE155A9C7B543686FDFA11CEFD1F45C6C94D6BD538DFA8A9443AAD1A996
FA6D21B236040AFE8B93711441A658CE358B48FFD3F16FC02751CF80299240A6
8AB3D5B8F3FFF83EBCF9FB771E1D81A018C6651D97A012B293F6BCFE93BE165E
3C1CBF943F2F9910C9DA4BB19699D19352448E13B557985B56185ED62B08308F
DA1FE719F32CE57BD02496F62FB0773EAA314F18CA0E5A51E8CC4F11CFBDEBEB
24A63564E2F538F633B50C835B75A6336EC3474D10A6DD28A20D5B6E92DB42F5
E31CF3553B1123502CDD65BC6B36E9E39CFDC65DEC06AFE0ADC51A484E392FD2
7643A7F359620D88C811134661DA8FB3C7FA653BACC6359868B902BD4A824111
28D6CB41F062BE414359FA0FCC15EC425F428FDA4D99A1AB684893DE58DDB7AD
635632368131981A3A782B65892C341A33AD22B1E10486AE3CE54EFCC75E5745
D5F43DEA7EC3B094B146FACC8BA07152C92D3562D0C78414E9310E0DF4B1E767
810F225685E4BE79FC61A178DD56F550189F956F08DB0E5A0F75768EB81620F1
5401CEA0A26D1BBE18198965617A0194688FBBA1E0F4DC6C15406225988D05F3
E2FDCD27B4CEC1745CF9A481E0BECA4C158C3516596471A730DF3C05CB6D3CBC
409C0C61B99E929ED3B4344E75BBA2B4C51A1FDF6EDD1689FD3081EF46AA863E
3C1BFFB82CE9FC942054AFF358DD3217FD598ECE0286C0904A681F3C6D77604C
3B89EE0D54C247EA31A6525B8BB4DB6D8686CAB9CAEC225E8175C3DB3D8A7C5C
2F8EDBD664843215C009BC656B2C65D8DAF36AB3119591CEE4B11596BDD87639
9497F53E8CFD081245FCD5A317BF72564FF82A9E9DF1F8731C4D3A6D1A420EBF
5E7AC5FA295B1CAE5E832B0ED548DE2359A66CB765F51CA3B7D5BE89C20BD748
23B2501052F9ED8A2F5F5DF64EDF37BD0E838544394D36CD178584BB4A2DFCBB
660474EDA19505A9B239A4A380FD93824B99E00E7F75DDA466AB9D47C5964A72
936212C3D5620A3A05F69B3DDF25CEED5C6AEAFF7534142D9CF6BC28DA329863
4E4BC853C0F829B89629D782E43D76ABD3368AAC59E12408B7EF687F649E98B4
59AA023B1C31EFE1376BD3C5882BA09CDA9CEE85A3010EEA1180B95620BE3EFE
F6978625105367452762357E76CBD36ED262976383D7A7C455D83190A7FEBB3D
4830AE94E8E9D8C6F791FE98295D2C28127B6751BE49E6E2C27C0E786E81B6CE
D914D2B0DFF5BC1E74850FFB3F3F39C38EDBB9D4A15C81F910F5900FE6D112F8
82D0933D3CA6AED3952226EAC211F9D4BBC7C53300753904985F77C1F3ABCC78
EA64BE68E01F1EE677535EB05F2B16DE0F08A9206CCC9866FA3CF2D4D2692C71
778B631DBD643C687C1DA2CFA463410F43DC399ECCDA86B437B987864EBF9EBC
5F329F9455AFDEE3AF629F70E5464A3B4E99B730CB2970BEF10F214E5EE70ABB
4BDAC12F79B264AC4A2747E35B1F114660E21957269A056B58C29065D6C6CBC5
73F0E24AF0952AD35E5398C06E05F9BEF1443C6E39E04592DAB8955E0400B219
32F21688FE54404283E920FDD1A2CD6F5EC712472330B5B7F576F6BBFA497EB8
E85AC2A8DD1177D31DEF3DBFD0C389119BDA568DCD6C8E357E4C641AF42FB614
DB5F11BB76CEF814B7169AE8B32CF5A93DF599C888F95AC086AF96F92A62DBAD
4BF63C7F94BE6BFE10AE3CE3D0AE05F371860B07B5A34E15A59F314EDDCA1D81
A4756F20CB65683BDAE95B6EA54A943307B0B42E1B97F807E5AB84C02C5B7E08
5AD3A502B0A19C6A5416F10804EA2009EF54B4B590E7924B3E31DB04456A0DE7
27774C026FCE1DA89ACA49C726DF927070351F7A6D84A50543447F031AB43C3B
5DC415240E0470D061052E044A64E379EA66F629EC34F102A5F4E1C2B11D124D
65B501B7FDF3C04DF6DE9BD80B4228D0DAE3C075A59C5FADF77AD7DE946F8C7C
49787D0F4109E8339B6A46EB5FF117E6F513D0F7FBDC5A630182895F8178F4EF
74E86A5AF63CA43EA3FFC5E76CE30541FC6BC96B0640AFD86020DAF93AEEB544
A2682CF279B6885EDB759EB2B0B552EFDA219D372F01CC903481DF276E196D45
D016601EB07CBDE5DE1955E585ADC752A412F7C99CE068E07634ADD8546374E1
579B41D47452CAD3CEE7037830FA12A1B774D4CEF81F59E7E176065A5B0D7BF6
338DBF9D1530C429CE29CCB438534C8C19118675B81CF2EE1AF0CD3199B54B24
3BD23BC8261F71546A3F58C6E3E8E1B2C2661371737F2117D211A2C8954106FD
0B7B61A06D0F5B27E36A589AA60C9A0A6C10B4482075078D4F44AF9DD4571F8E
26FA57DE2D80B2671DEC4C5AA0D885B378FE3E60ED2F066FE2F827C7AAF1EF19
2CADA0B7BFAC0DB177F68273CB73AEEBE828F5D26A77B8C297A6CEDCDC7F3DE8
EC2520C4479D4DFAE5B5E142DF5F06F48DD080D7D25119887EDD96CA36DFA453
410CF798C740C83DD67BF252C14124D593D064BAA65AC1503E2698543D26C3CC
73DF4A64FE39D09BA8C7A61FDACAAF83D810B04D98E6280F146A09058C8020F0
AE768071E619550CEB2DEF8571D19ACBFDB1150AFC1B8566DF9656056E80BFA8
7B70391DDD6FF0CA069344F06045A5DB23199AA30779DE97E387E1595419BD63
E535668243617EF6CA249A55EC371EA554AB5506EAC2E02963019AFB55B6A191
2E1147CA70AA83B74302278E17771BCF124D16900443EFDB1274F6E620A38D4E
62BB7FF4C9D45E8EE2E7A5B6A7F2D2A01F13C1B7BAEA7E77A8B4E0B5182CBA8C
10BE25D2E8E8A1E4A5B04975803A3B2F7196EC03D918733AA64CAC27B12FDB32
AE4DA0E37F6197B689AB6AB95AD3C33C0C0FB7296031342A7ED1514377817333
266C7A9FD5D57E2353021EC77FA16C610E9474BA1E0692D12202A057AE2B4567
7F30AA8BBA0D6C1E7918D81F4B12ED4FC4B50CC2167ABCC0507ED20D7B52471B
B7EE7744160CE61C2D5F87E1954F681E7672FBAD76CD1A930150642D764BCF58
00CAAF2A6FA2459E6A63B492EFA3D27992D35658C8DECF16FF7DE2ED4906F933
13CBC4546DECC325BCB4501C2A6256F1FC713091A41B34630C845867177C5D51
8E505F587F6650B6DC82AFC2BF712AADC9CAA66D4D37F6B40A12812ECBDA170A
7BBA4301F10C87A4384820EDE7FE449D5D313D3175210916D2FE6733F9170F1F
41B4E18CECF3D943BEA1D6AE88C0705A8F75368591682B504D1DC74300CB1364
F04D773D4F47377428DA91BCB1609DD35D3C483E4F0858D392DDA2716DA061DB
851ECD43B79E90FD6AD32DFBD47EB647456B202F09ADFE135B62E61C930BCE9B
083103A87296DE3861720CB3C9E05A4CB229CD15EECC873F3650B4E85A8DB075
029D3690BD7C9BA761C73A6936E2178BA658CF468C4452EE5A6BED3A2D024C4E
DE04428764090E8700401E0C94D02B27A251FFE10EC7DA78DF6A2E2BF6511224
8BEDCCA954791C69F69381510602FF26C955CBCF4CF31DDA24EEDC4E1D6A6138
3AD5BF37FBB2029B13F18747EC00F3E1334AA930A806036775E5EA2325EA5346
E0FD8F0A6B7D553AE852A59AE4E3C3B99D7FF781BB2F85B330D07B7D48EE5BC0
6713BAB8F69793B42E80A0213AD8E8DEAD2418167D0AEDF1D69813A5D35F58FF
574F1B464D737CB90C885D85A48CD1EF19A311BBC91EC6DB4D04DD79326F1DAC
7C7EBA1243201D1AF3555A765229C1E010BF812BF12ED7CBAE0C6FE719BB321B
402801FB273FE5493EDF4A916E40719275D5EE10C3ECC331AC2C5DF389A81110
E0A304AA6BF274012290959C6FED35846C5A9CB62913709997F6DBB661779405
FD8446D2AC725A26A033DF5831F6742CC9CB0959A9FEC5ECFFB6956E75181EDF
C0CD32919365D2820CA76B6B43BACF33C9CCE40043AC6D84CC6ECA50601B1FC2
190CAC8A103EBE3B35E92B623A4F9C33910CA61E4F0F9E95BFF263D225F33D49
DC7623CC381E98ADFFB484081DDDB67FC426231B94FFEF9049C74D09B7BF09E5
E8A2F29E38247A750A65BB88020C9675CBFE5EED8F7F8B7866E6D3420E72E1D5
8E5ED9C86E3E27022529F8817E2E6D3EE95E8204D3F9AE4744EE49630C72D17B
6C14D5B2A021CAD4A524DB78F8F506D96536475FA0018E618E09797C1CBFBD4D
C9A9904711AD7AFE63E91469DC77034715EBD63417B4B424F290E06A44E134B4
6EA58D47FB9CC5B21D258476E437910601D137D1584C13D0FC78C4E69D6EC06D
09CF00041693D13D94BE05DA9FCD579E9C4499D19F17A793786B16B2A366F678
50CEE21BEF2F7EDFB5A649CF7C4BDB47C3EBCDE2F1EAEFC105D6769D818083CB
8A15C1DD781D3CE086FD27E9D6A91C90836378C980324B25D09144AF8F467A21
4C47EAF71CB0BD41007DA250873FC3D7195CAB3F61AAF973165EC8BB213E9906
FEDD0907D4C65E6789CCD182FA4FFE5600DAFD2AE9EF2A7654D2FA7D903B673E
42831503165056026E06331D92144B749CB62C97BEA4978D582AE0DDE1AAC95E
D5570E312419DAB26444AE1DDB0965741340429805B1336D52DB56E839629049
B3AE5D142334A9C7EB1A2092FC669A82F23DEDD4CE1DD0D7E68D07C4E5DBECF0
CA11AC00A61014EF21D00C6060927EC46753C14B96D9FCA73A7A5B600EC8D1AD
4C3AD6EB2E05510C4E3D6AEBD84314DBA80B6F356A45CADF2E9BBFDA3E544200
6C8974F84BB2061440701D817A53A069CCBB4EBDE3BBC8A400A393514AB72AD6
203CA223DAFB99242F7C640C5CE8BB76ECE7171ECBC5D53BA80EB4D846B1CE47
6F14B0D7A8CE7DD5ADB555EB22BD634C08027F9FD4848A3323FE1BF9BD21C545
E7C9CFD1D68559A099C2114203C9D014FCE2A888CF139FD9F5F19F0B0E800B13
CCF9F50AB42E09B28EB8954925FACD8D8CB428BFE03362247A701933B2055947
1F38C5E40E63F36F644C0ED6BC784F274E292272845993022B4ECA9CBEC33485
E8E9AD5E786D38A212C5FBD3991E5CED2EECBCB74812AE755B9EFA562E858BCF
4A2A0EB57379F9EE2FB8BBADC1D69F7D5DAF9044C18C18E75DC7F3A5C86138C5
29395841F0F5D45A712EE570B0A2DE45785ACD9A168E0E59746F17CF4F37240A
092AB56DA4B911A39DCD37317D4F7A570D5BCB7C51F7D0DBF2C0E172629BAC25
1924ED2021463D71C06D5A082576EE364D19CDBE4E05C7D52ACF9A7A54071397
89D2EC32B466D21C9B2117E86E914ECE1F073DF6609D8CCDF1C7385C1136C384
183473EE58FACAFC6DAEA5AD46B482D39B1EF61D9CBF933393296E873D9AA26E
0E9D48C0AAB4552D92B4D6264ACA52CA4FE33ED83D75593E3D99EF7A1AADDEFA
0C1AB9158E9ED9A93B7A6777527DADB00DA132D0D381B6EA71FDB712EFCF3B3D
DAC2820E21DE4A76796A40907F9DC14F18900585BFD700C6AEF19A41C804D355
FE263926783AFD4223F9DBF801CDAB652D68B64061AEAE6A2FC7F7ED0504FBB0
F4D8D593BB06F0941F96FA5F0EF22A8E241B0AB446FD6DE4D87B25DB9DCEE315
1CB6DBEDC9F554BD7B41D132E2B78E0476B3A1AC0E2FD9C348C2AC9994152403
0E12002AFE585954BF7D0DCB765F4A0BC0EAB2D7D51F31052A64F66A8E3233CE
5783504F57C294258F6C955AC2C08BDA889B6FF53CC0A025A95F797827A7372C
61AA18CD9CE9A01A1DC0285DB937F196B7BBE33DBB2D2313C3D8F3040C6D61F5
C1BA7AFA9A22C74AAE55024399326C6FC01D972E557F751DE2236BFFA6DE79CD
DA5E780C57BC8FFBB1D3135185239045BFE90F5610914CF1F15B1B6B17B7A345
FE4E1004CE9EACBAA3DBFA303F7220D7D8F809D64F14E03346E9830E2E3EC96B
6E20852725088E187DD394BF37BF8FE12B520098685A2EA1D96D39A1B20EE94F
6E85E7B2460E76ADC1BCABBFCB9BBE9E9A8BD062E2AB17D01216A76F5CDAF374
E20E077E958F7DD546A365E58881E009993337DDC73679BC8AB462F0F1BEE80F
354A25978108B5773A56B64D16366C3047428ECA361D28C447803A8299F10684
FD9ABC5B7E0490BA41A93FC466A663060E6612DA751F30288C87ADC1C26603AD
E2B0DCB0F526742EAABD5B36C13BA96233E12522577676C2393A369B934618E3
D3EE24A82C3F97F355EF8B3EE1E947B04CF163E4A104B38D79647688F3B61721
C04A609CE77F62EC3B522FE377F351DAC66C478C3F827C1F218D88AB1D9CE703
78E6B1F44EC84150C049E0A75D48370B4F7E7C9E7FEE2690AF26B00BDA9D5E23
3AABCF37240B13A8B3742F5AE0ECD31506BF4969B69E4180CA5E30E80B48239A
8D90CF09FC09A44C092C232C8F95F7EBD66EF8C29354600E6DB06110883CFE1E
A46DE38C0AD25202102DDCB2FF190C521826A66E832EAFA83A275B84448B3B08
2A1E9D21282C32DE9A7B561F121016D08CB108792B68420338686511043C9399
9A895B7CFE989C8F718E037C931190444ACA9257F8015D1B590F0E8981247161
844075927A8019FA60AF2E33FF74DA0506B8C53B3CADD99E84A1AFCDEA9A7D69
559E25A6F45C3150C29357C72535A73C0CFA2017FAB74153888570ED9E1FA459
C07E1E2FA81F10091E89158BEC04798CB172FA4853F6BCB2BDDC050F45072566
4BCD98076E91EC9DCBF2792E42B725B8C0805C10BD629ACC4FEAEF71FEE903AE
A25A70A336059E4CDD8A989231F0F6DF19BF1D2DDEAC7895DC5D1A398779702A
3E76FCBAB7A6299159471C611A63765EC91D762595DF99C3060334BCE733C587
17E95B7597AD7C0BB5633BE481D6640FEDF0A7E5AD3FBAF8C095B3392008CC15
A6FAFD38DB0A7AE8218DA2B2C15BF86DE03CA123B5AB3743AA1B830867122D9A
A4E4D56615FE74E2CDE01B1681B415ADA2787C63DD0225B590287CEBC1D252D3
EA32DE64405DFEBC1BD4E8453A13A1479EFBDCFDB985B637A16A8A00415418E0
8103C13CE59200725676160BCE0B93D7231D6FDDA852D8F1568B6F3EE210A1EB
16A4569C5FF03BBB91008804F98166DAA7F3F42CD5E003A2AB1FD450653306BE
BA8B310FA4692A9E81FA32D6C58ACB7517DDE997C03A9328362B694015D39CAE
4608F263354195DA98D1DCCCB9A085DAC679FBAD3D3B881CCB7ED357E0462C96
981FD7144B7BB449D4D1109398FF5327E94C88DB8CFF0080CB3CCBC2A5972459
661A8BCD38AEBDB33CA1ECAD68EA34458BA4BDE37A4486C038E91CBA5A458FDB
28DD06352338EAD4A95380EA014E0191A9B4B29E6FB97C86A36BD317293E7FE6
6CDAA3F23C37B6374F20BC02E4A0729C6F70C0B25FB1B8FD59234A249A581008
02754D429A68F0CFC8F990E6B1844FB74A0478EFA13E13751BB5180D679FB1E9
3B46B2150DE67F61CF9949DE00CD4121C8B8437E1EB774F8A2CF0653EF4F14BD
F01DA94AB0F053D2CD306F532CC5E3BC15A242EF6EEEFCD9FEFFC07F09A34948
DC8F6AD8FDA70525EF77564D8B18B8E48E53B3891C5C090F8618487F8BA662F4
1FAAE7AFFC195F6382CE9B3CDFCA5C903E9BC5C1B97EB67F7BF527963E75348E
6C2170A7E46A1347DC0410AEA7B5E8B7A4E5E3111EF0BFFE3D5133806DF5C4E5
9F67C29DCBBA80D46F1599DBC402DCE109154021529C21D658821C69FFC4B58B
C043EB973857AD5A42032BDBA4F1597E94D40619A8725E451A99321FB6498F58
C9B3E386980B5B5A2086D1FAE1305AF6D0CA13291555340C9D44065490B7C49C
32DC2B3CDCED0FD3AF3E3DC3A8CAA699C1E15DD796D69D364640C6083CD59175
1DB888EAF7FBFDA209ACCE6AA3CA64BDDF271A31FB547AC3CE49314371635B89
2500A33F73B413D7366224F184B6AE13D8162C77A05CDFFE4143E7C06C78E89D
D66F9EEEF2F45E311E1E5381373AED183AFDB465A0D7E1D189A1F6B01A545CFF
3910D58043929CA34D7D1860A4FB40C1BFFCCD7F503506EB487027AC0658D3EC
694995BD4AAD9679C9B2E5637E50C9EA4F2005A76F79B55408CCB258CCFD9F25
FD6709092E9BC25C6E073F6E48410DEC88862FD5AE1C0198170A8F75599A7C1B
188C65D4467854CB7C2E188C11150B7787CD259ADA65C2A14E593F552831BB92
4636FBA6CB12A24F837C6284C468099BE0942D62212663050E80990359C05752
7E3FCEBF2730D812FD78496664A838D3C5DC6CFE7908883A00FC31BA5C0D5D2E
6F34094DBA408C2A5D0908EE2088AFED9B8BAC095CA0D6008CBA7499D47E4851
AF395BEF260EF03DC9B75FD978C865147AC6526FA61B122DF307DEE955E35094
E0FD41BB5421C534546783E9EE4CB489242DCA6D414177C29E5E1EA86224706E
C672B72A8753ACAD5E327A5A6C319F1447B069C7D1E066D0C9A7B3366DD51577
A3CC8F830AE651EF5B035FDC13E176AB57AB2B004342D0B05283E64B166E3B31
EDA8337FF8847716C34E3DA657ADB1D20CCE904D77AB8BA817EAD5488C614854
E2E7BB254A077245F85AEC49C7FDFF01863AED9111C0B18F3D74B815E62249C4
3C5FA91BCB76CF6A98B45B8BB91AFA1A098832BD01A545B0DB7E8E750F2847B1
8648B0720181C30A4DF62E9A78BB3518A6C98C321BCA2866EBACF860B51835E3
E684788AC323902C613E3974968E917CB915E5354D1B69759B642656D9550A55
E2E03797665ED9A8CF2A76851D776FD6193E1BF0CDE55481336D52FDEF7E669C
2B39ED870069ADFE059E85B4DD050CD24CDE8A51E37F4A9C09F2D0DB666DB89E
0D637B990EA808F62BB52430663B1973919BC77A706893D1A114B520A8DCEA4B
DAA0DDBBFABD61A5C3342166E0DD18C9C7D136BBC1566A6E5E8DC83209251A45
0E6CB3267D91E031D86AC993A2A76EA5CECCD3468BAF5D64DD25CAE1E9DF5CE9
7ECA058124755F3AD6F95550D5F1FD9C5D34C3C345F11E7B7A1689D75C5C83B9
0614E7DD6D268B4C57CC51D49B9CFEA4C2EDED0EDBD8F8671763457F5DE4A1CA
F253D2DAFE1CD3FE15975E18FC959989099FEB3B9DDF6907BBA221B46F965C82
BADCFAE4091327AF8A82A7F4D837286FF9726F43FD7CA2A0B9FA283D6F00B73F
A88C4734993D9773987E9417A430304244B98503DC9034F1DBEB3308097FBC7D
0B00F6ADD83A592FDCC322EE18A6CCA06C8E31AB7579EF113B9E32A1110E285D
99F4F3C170FCD4F9CF9B3B47C3B83C355ACCC39463718359ABAD73D2DEAA15D8
0724CA72511A3AF87259441BC3AED6995CB3101F7C7773D48ACAC2B806C76A08
27D3686A6EDF68C3DE2065A77297688AC5A2B406E8C5E6E2E111A4B932034E41
5EF3958AFBC9B384F125E17876083EC69FADA8522623CD5C111B48C23A63B36E
562A206FDDA0939C4A7A30BF4DFB7BD943B8153B69D04BAA422461CFCB1A01B1
5B2ACA78ED92AA29BFF81903231AB187290E715E05557D2CE1FE96306A476D1D
09E19241559D8649381A39BF731B37D851C316E17A810E9249311A5AAFA4EE24
30481E4A4D6C90DFEC0F02EB00318300845BFE66B88716C944E326CFBC37EDAA
3FF30D6E0B02CE388EB362400809A443E414D0D88A66D6B463485F5B2A9E0167
0F632B5E339109421A6CEC5567CAD9670997924FC21469209EBD42C360E20F72
A5F4D4295E012EA0AC6AE0F2C0077813598D1C7A3CB0C0C93D8651FD1D5A3189
52D0BD23BFFE9A814408478C26A3EAF0A31CDEE5F3B3653435E222CD2097AB6E
F062FCC6896F205EA904127170B1FEF6FA42CEE3289178E6E2D799DAA2F39B41
0B0236972036E31E5CC30355A5B3D351D86878A26B79194E9586BC26BA1A7C64
9BE09E2133D4828E32918D6ABF33B2B2080E519451538C5B7A7945B94453B06B
1F3D4181264E1620F11711B07796534602E351ADC4659AF6C99BA5F5E2281A5E
8B6B0A8E465762C3691FB7E06C4B41BBC1B4184DB4DFF721C144062CC4308AEA
82E23E6758E8EEB9A0B7DFD1EBC68BAA7CFCDADFE7671017696218CE1EB565C4
230F6E071D6710FD81A55B179EA46AA91FD0CE21E5271E840D0CFABA3DE4FD22
CB7A769B65DCDB76E9779AD77C78EDF121F82A9A72C8356A8EF0A56E58E46BB6
40135BF7B7A75AE586B7F87A05112B49F1C0734F358B03A07864A02834B80203
BFC39D3D3A1515C65EB9A4FBE0A7B2F940DC9613B5981FA1A062C08C15636331
DDBFEA659DD60556F756AF3FFF09CCE023CB27E3C6043E55EB67450AFC2AA413
B5F107E6320221002433F554C964B5BA3D82C7342F3B8C8E107AF8547EEDB5EF
0E9FE57E6341A48C400D10C78C95CEB0FF5C462255AAAF8A1319EE5F1582777C
687CF898BFCD599987DCA42FBB7DEB64605A6A4B935E15A4A698B016CF73A566
E025EEF45DA1CBB97E14729691753B7881D9424D36DDC22E12BFBA8849F42512
17523B088858E8398EC4123EECD09346AC18560A980F2BD2895B937CBD611B3C
388EF413674910DB8915D9190388C9ACCCD11F7780006FBDF9CA70660DD75982
B3BC81039BABF0145D6824F0515B8F89699DE64D2215F2BF5D1BCD7BB04C20C3
464217023CC10BA81CF2EFEDA68BE8064BE740270DF3DE12F96F0E2608A7AEAC
AFDA56A45FAE7B00047D0890D2D21BD894C36D2A8BB5E625152E51AA206C70A9
8F3EBDB282291A84099D741CCDDD1B321E535E8C74D4705829C9ADED535FB212
BFB65D390CDE066CCBEDD4E560668BC3399D61067181DABA1A0739F7BB083E3B
EFDDF761AF519967443CEB5EA61106A671E7B1D0EBD215FF6EC284E945E8B7E7
341AAB819130AF12315CD6062117801B6513A1F68C69C77E48B875800CED58BF
E743A07616BA7BB6AB56FE770B154162F204276C499866AC07959BF1D48FF647
28C3F298A2DB75432B3FADF482675F0329DF6798FC1C5C291BCCDBC85CB015C8
031B64FC6FC17E46F1BA2AB3BC79A54329571F18EF598A5CD9C0430EDA22E9E0
852F9DEEEC5341B7C80200B466972B88EEECC545D1CD94C54B02EFDB05CDFADA
3F2CA0FF6BE3B8CCF1B60AA2BE73FD31ED9D43616F6E014D013871909F6B50F1
0990E3FA9D8D3791B557CA3070308039818D03553EBED8A702226E057E74416D
9757CBA80961BC66C839A777D503C720809B8B724101CBCB57399FEC44ADD959
FE6014897F9D34982C58229FE16E81868EB8812F25C3E6834870F9319B98FBB5
EEAA7039578F125D8AD7600450D9CA3575BD905BD4661AFA575F99C031590985
D61B7AD5B50A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /fl put
dup 45 /hyphen put
dup 65 /A put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B57183FE1C6ED5D71A48D20EA8C18DB6CA7D3C3A6403B9A767D805747C0D25BF
7F2F88CEE69141F72141640FD36EDB5886A78D3A1E0FA4DD0E213082C3E6822B
F981212D179C25CD0570748C3BBE642CCF1F43F5226B9C2EEA6B966628B185F7
11441471ED972022B4D84CF007C1D9B1D12804610E4F730DAF2F2D5AB767C320
C62543E261EDE128761D164A9843955BBFEC7213307B78378CD1914FD7D79D14
947572CB28073B7AA530ADC51270B03CEB7FD7ADB4D72671135435609A235501
EA55EDE2B2B915DCA5D50A7E3512B325253FEEE5FB8F99189924DE9EDDB672E5
653E83A354F6E55F47CB4B2F056C6232AA66CF460A06E592FB4DAB538C280A86
6C7FC5A1A8A411A597335E6BCB62888AC8539B30E8AC2A39A813FC4891B49E77
75375100F55E9F16BABDD3F76B2F587530D12214A376FCA98170E67BE8E450CF
CD9116344965344652128A18AA5FBC61A89117BB7D016B4F18A1BBBD8717F984
F8E429995D5C39BFEC047550D9ED7F9B6538EF020EB60AB57A17600467AD46FF
AD725999FF72F5DAB7CB45BA5F4FA1B3BE277E804C6B3437CE8A7AE487C6B1CB
164FD22386792BD21F174F13B701476FA99F5FB018EE64534F21DE7FC92601A8
87D02BBA6EAAEAC7982A3997BF6341089C76DC9CA1EC7946EABF9F90A25C0FCC
A059B64C45043B79E47FC0409ED4C661254453FF7212C39EEA1A11E80529EEE8
7830D59274A794CB9617FAD8199D6DE32A40FED5ABA94788E1CD7139F7B6429E
BF93D2DE165599C8852DCAE577EDAE23EE9A1DC2B0CA171EF404023F2DC2D8B2
B3C3FA4C904BCBE0CCB2470C561FD750012D866336F13F36A6116E343D57CE59
21CFDED4F4CA5C45CFCEF1DAD60B080FD30D53616618224524B4E84DE0FD1B18
62D33C92B313C6089DF41522A177A902EEFFACDAE5BCF5D0B488E213FDAFDCE7
D8D93E04E0928F9DF76576F8765090E7AAE59D80FAEFF394AC174B8198911171
95053D4FD604E73B825A5969C99E02038B7A31B015726EE45DF6718CD27B0194
9C56810E637B9B67E970DF74B82FAF38C62C490E1978AC26B9EC6DA0959B910F
93F3F064722D63B91418BA153047C99E544ADBE6808EC555AF153487141F2527
41CDC0E5CEFB6520B84247292122F160F5B0A6A1AFE18A01CC11041CDC106E07
07EB921855968A9F1651241F8A686355E0075F753B3A677C8D8D5CF1EE157010
73CFF6D010D886441360A3F8B1835AB9E8633E5CE8EC81C1104E7E8681AC0900
6E062DD9AD9B87C97B3EB2FF024BFDD8531F0FE756CA135F095C19E40C6FF8C6
BADAA828E762A6956F4B64516A1BEA6E35CF79C9C1E68F1324FD5E7EFE1CA765
A8D1E37AAE7036A483F342DCF40730182CDAFD0818E0CB8EEC8AD965DAA34BFB
A6150D5D5C184B983C9114619AAAEFEE936AA7E59AF4A128A2AF8BC7896B9F03
7E7FFB5D3E06D82182E930A310D9EA2918E7932B5991301AC01526FAF968BA1E
A1536768682BE3B78DB7AFDBD3D0DCF3DABC6A24F40A4AA498CE860C8F6A8D64
E16F5E38A7409B30B9B61C6C54309B4688B43FCC334993B4A332FBCBA5BBDC2A
10FE40458A2729CA6B4A6C7183F1CC7D6FEA98E0E3C0DA97F984B3C07A44B288
648047A4DF69BF169677042330B96FAFD78C4385E3F0EDFE8ABF294F7233A52F
DF2949296C2FEF44C2219E7D4BBCD54F07F184A8B3BDD8EFE45A380A78298EDE
630D5E5F344D5B9B46B1D54D416141EDF49589CB3DBFACEF1CB1A2E27130FF89
70954768ABBB332B168155C40EF3E506AA02211228797D94B6D1E624F4E09277
2AC4AEDF59759B55F512F06287911642043DD1AC70D03BF33CAA029A9BCF3367
7713F8579CDDC8E56E8A517F2D7C77704F3837D8D44531FC0E5F18062266A514
20802937D92C4B07ED3D0AFEDCFC98656BCB91AD70AD7F40F2E19484E3D933D6
C3AB36319C4DDFC095B21953876C2DE31308EDAA15F44941905D09468E32E782
7D7F01C6EDADDBAD1CEF193A504F75034E2864F4B6958635C14EF98694B5C1DC
A073D554CEDB2BA6A02CB56202BE6AFA28C67747DA7CBB9E950A7D8B5C6D992E
7C4ACBE3EDECE62DA23ECC0DA9B7EB9E0DEFB5C3709E5FDE798B725558C8B7EB
520E644BC37E00863BFE21E2C88887FF06AA0AF8251A42076AE162505DB353B4
820A813406ECDC0505C5B930AAB085BAF729946319BF3533D1DF709A86418264
68E0932A2660B7FEDE51D614F196497F468C95B13DA74221133095F553F6179A
7E7B1938255481C3CE825195153EC26D7B6A50DB6392F7F02DFB25D0B6526D69
2B14048E85AF4D9F46F5A5186AB22AAB56F68E28974880A5165D0479BDD195E9
507B55EC7C9F0F31DEA3922195086B93A92926380963CE21F3CA7116DD5B6171
87752C6A305755040680BF54F476C6F5F0A176BE72D240135B572600E6E647BA
72265626794C1490595EBC5A9FA63B223B264172F744B3726693A9925C3ADE9F
43A40C35D13DEA0DB81FAB9C82F83E1D0820B0D78FAF11883CFBA91182262310
C406965582C7F897B5A0C58335A22CB51697D96F74E1DB7E020C05F429EBA5CE
BE78EA081A1DE14C793908FBD37AE6041DC4CD3425A8C875E73200ADA97CC472
30548BCF4F781F6382E49E09025219F78ACF20553DAF09067B2C452CAC4FD050
940087DA95F10622C1C51B16F46EF0203E8BFA17F2F926DA665F4FDB4BAB235F
5A3483E5BDF0FCC4AC4032F55765C9D1E1F63C8DC59F5A9DEF72848D7F14ABC8
7F3037E159AA3906CBDB2FC579CC272C093643047C07503620559E694E9A48ED
680B32B4BE424676692AA5CCDB480F8AB41531986D022453E78A48F77EDBDBE1
560175F9EA9B90C2DCD5D28A8E5A5E054BD4AEE9B31075884D32E7A27B947588
5834D2F0A7CB2CDC61DAA2F63F2E21A1B86EB96A941BF52252DB2A160C8F12E5
5754C6DBE0D0C555CBFE3BF6A7658D51B9E8693C6667FC80AF53E3B830139A90
3D36369C2641D9A82313196E1D4DAF6B145CCC327303E7025A8035A9BF1DA3F8
94F96DBF4781DF94FB75F3C4B0B67E5A7E0B542C682DDD971C2F0DB55DADDA16
AFA96170D546BC3595852B7BB8EA0268186D2176163AB59794BA88333E089C96
C023195D63E2F1E157DCF9C1950D7F1758F6D188158073518B86B9E6A4CBBADE
710AD8F9CE07C8C679FD4FFCD981F6426F7148BB8FA709099718E1E7999AD260
14B8286C2F06DB2F413FB2A270A8ACE8EFD3C82B83C24D3E8A6390FFF89C67B8
C189374F190F5C87ED5552DD0FBC58F96F6E1CDBF7EA8B3203AE55909F6B1C5B
04678D327E7718BB7A10700A54C6190102D8BB2FB585F64E61F3C88376264C25
92CCDB0D9054776AC653F26753805EB23E3D3DE30D35D4D896ECE9D7F89331A3
7854D7746ED6234A600485FF4A06CABEBA59A5021E80830193942780BAB0BE6C
D7567F4B76FF3DD6349C8DF35C0CDB85833A63A0949E655BE67887478C6F6AD7
A33C79E1F2F6AD54D2A185150D8367A9D5B77AA6D0C47D710934C20D3423A7F1
215B6FC9CF0B8B6C3AA253E59FF9542B6028460697D97D6A99D14EEED47C112F
1061FCBFA755DF24A8D301E4C1F76C004535CF9438CB13C3883470291B1B8932
A1F3B15D9E8AEB59FB6BEE126429468F627E4C674941192B7021A27B9160811F
C50EE80F5F50672844BA158E87D4ABC36A52622DD305632CF65C3F827C3205B9
AD484A80A5FB5F4C427C1D63DE2F77BEE1F2752B3241789FE6C8B8327EF6B16E
330ED07081F150B9180ECCCC77FF65AE178057B17A68D5DA2DE5F945E5A8F137
8432E431DBA3F65E4A13281FA6A5D86BF01934E2343536D3218BCA86D523735E
9680CEDC8CA2EA648287A74C74A98106A14DD18F8C2EFBF8C4B7754A890D45C9
B775DC23CF67172BCF6DE4D14B64F82EFAB833DE66D92B289C80E86BD18421CF
40C1590E2A00AFE342563F6BB0F7D99ACF3B98103000211D5EE1FAD2D153D764
96B2DB246522806B33A0636914AFB5EE2A801036D3F9F44A4D4ABE7F9290EE9E
B0AFA82E8A1162CF8579682637AC7619727065EA1ACA0B22F4BC01BB1082E1F1
016681379C6FD3595CEFB2D0EBD412F0DA85035FE6DA74210301209B1A80A33B
E02E0B06B8FCC38AF4ED24582B098BC72CBD1FB2B82BFA9CE97FC1C75A8AF595
B4C098C26C0D1A7026896F05114A9C6DF91F0A1F75ED52A2FD1672F5A4D49CD1
E6F4EA6263FBA83D46FAB30FCB8A9A0D5E2AE925A4197F09290D30732970C1FF
558952385AE9E96DB30CA2ED51F870A5243C49F898E860FC47EDD5642FE2933E
53B759781E554D86A82343058D35AA62B8DAA44A55AF2C77FA9EA144A1A9E9D8
8F73AEC0D9033AF4B80CEB2060FD459A33F1FE1B99A019AC7636E88389481CC7
88963387FA4FF7F8BFD1A14B465C27054D6E8381B4B12E1574F16918C9ECA97E
A4B5E00463FA31484F76B938DDF7EB591D593FD065F5414B18BC58B85576A37E
AC441E13992F13184286AEC2C562EABE93AFE94141281847B6D7C1400C3EE6CF
2FF8446FE4D23D803BA3B75461F4D7E5886A75177A9CD612CFE5A0131CA4CA77
0AC9C77034AC4A300F6C6EB1B2A6777CD8C8EF804D24236A43B5F455003BDCFC
7E6055A87071457F4A592427385F7A0A953385F56A86E749AE7864FF1CF5BC2C
EF5C4A0C2B38C0CD8BBD8C248DC7AF520AB05EB6FC0BC594010DA5EF2F33BB1D
BDA3AD1E7D9160226C5C026B737DA87E0A1221BDCF0D116FC1E415A24ECCC477
AFAD1C121878048596734F0904DFF310501E4EA3007A9BD2FC92415E7B054029
09394E2167CF4150554F1A7E74060DE2408DA3101A495BE28A28547E4958EA30
755D82CD72205DEDC2CE66F0E808E767EBF111D7326B62642AC740F6BBFBD7F8
AEE1ABFD0356012116CF885E7050100579DF8CBB3B80A5293BA24264BEB908A0
4AF3614993634409EFA39B7006EE43597ACA824D556E020074615EFE1ADB501C
20BC3EA7B5CA28A07C8C94E37778B2F2DC7FEE07A24D6BC27358F3A77AE45BA7
B57983E6A3FB66E43A3783EE92675EA5DCF2A39B19330B7CCF836C04034223D0
0FA4BF1744D2A42594E23306213ADCC62413C1EDF6D3D9F4F2576A324C7A428F
D7984DD2D3B2A2A5706B2577D3C7F38F09FD679888EB245296F5887F624ABF5B
67F1562E52104F6B20C2464A6475B0021E8B518AD3CB35FD768765578848A420
7441F19BC94B137038F56C32E3707A12CC9822DA6B5BAA531BEFD06A639AF3C4
29148718A8003983C6B7C62553EC5A57445D3466F2E4097D58CFE6ABDECA8C61
761D971FC80A9FBB9BEAF12B60D4A749D1B70F519A4DAD3B7B256B5A4BAC717C
DB34C8FC42AC360F11C97ACC071C6FE12A3609DAF6CABD381904A5BA94255C22
75D5F0BB005A5D24E1BDEEFF49BA61EE0A1C9AAD283809A992694CC42BF204E6
FD86C855E593E3178C69B1A256023DC43C4F2264D01ECB5DEB38B3A691A80FAC
E0115621B2735163A47E910D8348B49262617B60701E8A96B1A212F98DADB943
53479277170E722CD07CEA54F6BE3F21E4892B6EB3AD6524B01813B56550F1DE
85DD13E2FCAC958F22C3FD501865604B85166A196C0552D7D12832A4C8CA4B13
7344721DEC4F44FB251E33F67C4996346A3A4D19643EF10EB1CE83934C4FAC75
5FB03191BC4100EE721DB57FF61E2AF306F5C4561911040FD4D1346EC9521FE6
903975EB26F156AC9AD77CDC597843238A65A9DE888F0929A186B8021E3A6EC9
FB0AA24085C52134D0E586CD7FBD5F168A22BF9F13B16780AE0FF1F0613A6811
00A9ED7F114B30E0E43A164212C8F4689AFAEA5ADD6DF82DCCABAC96864F0F1E
97B4A52353A24A168CA2884C05898B5F0B9291C619486116C8A6804C16F48FF6
107057D45713D31B8D2E4EC7F2528860F7DE9E52E69F84F4498AC94CAEC34F52
33081A6BF5274604BE6EF0AE8141A47A507E1D9CCEC130FDCEAE40B404936799
2477C2C70BB6C957E5E2F4218B8E83F95A48DED333F40C4283493CC88C15173E
77C43473F2EC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600
(elsarticle-template-harv.dvi)
@start /Fa 205[33 33 49[{}2 58.1154 /CMR7 rf /Fb 138[65
74 7[66 24[62 83[{}4 83.022 /Dingbats rf /Fc 252[34 3[{}1
58.1154 /CMSY7 rf /Fd 240[42 12[65 2[{}2 83.022 /CMSY10
rf /Fe 192[45 63[{}1 83.022 /CMBX10 rf /Ff 134[34 121[{}1
58.1154 /CMMI7 rf /Fg 188[84 67[{}1 119.552 /CMMI12 rf
/Fh 134[41 11[73 7[39 15[57 2[63 14[59 8[23 39[39 1[36
16[{}9 83.022 /CMMI10 rf /Fi 134[44 1[60 44 46 32 33
33 44 46 42 46 69 23 44 1[23 46 42 25 37 46 37 46 42
10[62 1[60 46 61 65 57 3[52 2[30 2[54 57 63 60 5[65 2[23
2[42 42 42 42 42 42 42 42 1[23 28 23 65 1[32 32 25[69
46 1[48 5[62 5[{}55 83.022 /CMR10 rf /Fj 153[28 40 51
40 51 45 53[71 1[35 35 40[{}9 90.9091 /CMR10 rf /Fk 140[100
2[100 21[55 56[79 79 10[53 53 73 73 18[{}9 99.6264 /CMEX10
rf /Fl 134[35 4[25 33 32 3[43 62 3[24 41 2[33 36 2[37
12[41 24[20 59[{}13 66.4176 /CMMI8 rf /Fm 138[45 28 34
35 1[42 42 47 68 21 2[25 2[25 38 42 38 38 42 13[47 2[56
5[44 3[54 17[42 42 42 42 42 3[25 44[{}26 83.022 /CMTI10
rf /Fn 134[47 1[65 45 52 32 40 41 45 50 50 55 80 25 2[30
50 45 30 45 50 45 45 50 10[72 1[70 55 71 75 5[75 6[74
70 8[30 6[50 50 50 2[30 35 30 2[40 40 40[{}39 99.6264
/CMTI12 rf /Fo 190[80 15[100 15[100 12[77 13[77 5[77{}6
99.6264 /CMSY10 rf /Fp 200[35 1[35 1[35 35 35 35 48[{}6
66.4176 /CMR8 rf /Fq 241[35 10[35 2[55{}3 66.4176 /CMSY8
rf /Fr 134[48 4[35 6[85 1[51 4[48 45 51 42 1[51 7[57
2[57 66 57 1[74 1[63 75 2[66 3[81 1[63 1[81 70 1[73 51
1[76 49 76 27 27 24[61 4[42 1[50 55 3[57 2[45 1[43 4[62
11[{}36 99.6264 /CMMI12 rf /Fs 134[59 3[62 44 44 46 2[56
62 93 31 2[31 62 56 34 51 62 50 62 54 14[84 1[77 1[88
4[42 7[85 1[53 11[56 56 56 2[31 46[{}28 99.6264 /CMBX12
rf /Ft 128[49 4[43 51 51 70 51 54 38 38 38 51 54 49 54
81 27 51 1[27 54 49 30 43 54 43 54 49 27 27 7[100 73
73 70 54 72 76 66 1[73 89 61 76 50 35 73 77 64 66 75
70 69 73 3[76 1[27 27 49 49 49 49 49 49 49 49 49 49 1[27
33 27 76 1[38 38 27 1[81 22[81 54 54 57 5[73 4[61{}77
99.6264 /CMR12 rf /Fu 134[70 3[73 51 52 51 70 73 66 73
111 36 2[36 73 66 40 58 73 58 1[66 31[99 19[43 31[72
13[{}22 143.462 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black Black 322 407
a Fu(A)44 b(study)f(on)g(the)h(energy)f(transfer)f(of)h(a)g(square)g
(prism)f(under)1305 589 y(\015uid-elastic)h(galloping)928
859 y Ft(H.G.K.G.)32 b(Ja)m(y)m(atunga,)h(B.T.)g(T)-8
b(an,)33 b(J.)g(S.)f(Leon)m(tini)p 0 1314 3825 4 v 0
1482 a Fs(Abstract)0 1651 y Ft(Extracting)43 b(useful)g(energy)g(from)f
(\015o)m(w)h(induced)h(vibrations)f(has)g(b)s(ecome)g(a)f(dev)m
(eloping)h(area)f(of)0 1771 y(researc)m(h)30 b(in)e(recen)m(t)h(y)m
(ears.)43 b(In)28 b(this)h(pap)s(er,)g(w)m(e)g(analyse)g(p)s(o)m(w)m
(er)g(transfer)f(of)g(an)f(elastically)j(moun)m(ted)0
1892 y(b)s(o)s(dy)38 b(under)i(the)f(in\015uence)h(of)e(aero)s(elastic)
h(galloping.)61 b(The)39 b(system)i(and)d(the)h(p)s(o)m(w)m(er)h
(transfer)e(is)0 2012 y(analysed)j(b)m(y)g(n)m(umerically)g(in)m
(tegrating)f(the)h(quasi-steady)g(state)f(mo)s(del)g(equations.)66
b(The)41 b(p)s(o)m(w)m(er)0 2133 y(transfer)e(is)h(analysed)g(for)e(b)s
(oth)h(high)g(\()p Fr(R)q(e)g Ft(=)f(22300\))f(and)i(lo)m(w)h(\()p
Fr(R)q(e)f Ft(=)f(165\))g(Reynolds)i(n)m(um)m(b)s(ers)0
2253 y(cases,)34 b(and)f(the)g(impact)g(of)f(the)h(system)i(mass)e(is)g
(in)m(v)m(estigated)i(for)d(b)s(oth.)146 2373 y(A)m(t)d(high)f(mass)h
(ratios)f(\()p Fr(m)1120 2337 y Fq(\003)1187 2373 y Fr(>)g
Ft(50\),)g(the)h(p)s(o)m(w)m(er)g(transfer)f(is)g(completely)i(con)m
(trolled)f(b)m(y)g(galloping)0 2494 y(and)36 b(essen)m(tially)i(indep)s
(enden)m(t)g(of)d(the)i(mass.)54 b(A)35 b(com)m(bined)j(mass-damping)f
(co)s(e\016cien)m(t,)h(\005)3543 2509 y Fp(2)3583 2494
y Ft(,)e(that)0 2614 y(can)j(b)s(e)g(deriv)m(ed)i(from)e(the)g
(equation)h(of)f(motion,)h(is)g(sho)m(wn)g(to)f(b)s(e)g(the)g
(parameter)h(that)e(go)m(v)m(erns)0 2735 y(p)s(o)m(w)m(er)c(output.)44
b(The)34 b(system)h(is)e(a)g(balance)g(b)s(et)m(w)m(een)i(the)e(p)s(o)m
(w)m(er)h(deliv)m(ered)h(to)e(the)g(system)i(due)e(to)0
2855 y(h)m(ydro)s(dynamic)26 b(forcing)d(and)h(p)s(o)m(w)m(er)h(remo)m
(v)m(ed)h(through)d(mec)m(hanical)j(damping)e(whic)m(h)i(are)d(go)m(v)m
(erned)0 2975 y(b)m(y)42 b(the)f(h)m(ydro)s(dynamic)i(forcing)e(c)m
(haracteristics)i(\(i.e.)69 b(the)41 b(lift)g(force)g(as)g(a)g
(function)g(of)f(inciden)m(t)0 3096 y(angle\))d(and)g(mec)m(hanical)h
(damping)g(co)s(e\016cien)m(t)g(resp)s(ectiv)m(ely)-8
b(.)59 b(The)38 b(p)s(eak)f(e\016ciency)j(of)c(0)p Fr(:)p
Ft(26\045)g(for)0 3216 y Fr(R)q(e)j Ft(=)g(165)f(and)i(6)p
Fr(:)p Ft(7\045)f(for)f Fr(R)q(e)i Ft(=)e(22300)g(w)m(ere)j(observ)m
(ed)g(when)f(the)g(non-dimensionalised)h(mass-)0 3336
y(damping)33 b(factor)f(b)s(ecomes)i(0.314)e(and)h(1.04)f(resp)s(ectiv)
m(ely)-8 b(.)146 3457 y(A)36 b(con)m(tradictory)h(b)s(eha)m(viour)g(is)
g(observ)m(ed)h(at)d(lo)m(w)i Fr(m)2210 3421 y Fq(\003)2285
3457 y Ft(b)s(et)m(w)m(een)h(the)f(lo)m(w)f(and)g(high)g
Fr(R)q(e)g Ft(cases.)0 3577 y(The)46 b(forcing)g(due)g(to)f(v)m(ortex)h
(shedding)h(at)e(lo)m(w)h(Reynolds)h(n)m(um)m(b)s(ers)g(suppresses)h
(the)e(galloping)0 3698 y(excitation)31 b(and)f(results)h(in)f(a)f
(reduced)i(p)s(o)m(w)m(er)g(output.)43 b(F)-8 b(or)29
b(the)h(case)h(with)f(high)g Fr(R)q(e)g Ft(p)s(o)m(w)m(er)h(output)0
3818 y(increases)e(as)e Fr(m)601 3782 y Fq(\003)668 3818
y Ft(is)h(reduced)g(.)42 b(F)-8 b(or)26 b(this)i(high)f
Fr(R)q(e)g Ft(case,)j(at)c(lo)m(w)i Fr(m)2498 3782 y
Fq(\003)2565 3818 y Ft(the)f(reduction)h(in)g(inertia)f(allo)m(ws)0
3938 y(the)39 b(b)s(o)s(dy)g(to)f(accelerate)i(faster)e(and)h(sp)s(end)
h(a)e(larger)g(p)s(ortion)h(of)f(the)h(p)s(erio)s(d)f(at)g(relativ)m
(ely)j(high)0 4059 y(transv)m(erse)c(v)m(elo)s(cities.)53
b(Extrap)s(olating)35 b(this)h(trend,)g(the)g(limit)f(to)g(p)s(eak)h
(e\016ciency)h(is)f(found)f(to)g(b)s(e)0 4179 y(13)p
Fr(:)p Ft(5\045)d(and)h(o)s(ccurs)g(when)h Fr(m)1118
4143 y Fq(\003)1185 4179 y Fo(!)28 b Ft(0)k(and)h Fr(U)1660
4143 y Fq(\003)1727 4179 y Fo(!)28 b(1)k Ft(and)h(\005)2250
4194 y Fp(2)2317 4179 y Ft(=)27 b(1)p Fr(:)p Ft(22)0
4346 y Fn(Keywor)-5 b(ds:)p 0 4452 V 0 4668 a Fs(1.)56
b(In)m(tro)s(duction)146 4861 y Ft(Fluid-elastic)30 b(galloping)e(is)h
(one)g(of)f(the)i(sub-areas)f(of)f(researc)m(h)i(in)f(\015uid)h
(structure)f(in)m(teractions.)0 4981 y(This)24 b(area)f(has)g(b)s(een)g
(of)g(in)m(terest)h(due)g(to)e(the)h(vibrations)h(crated)f(b)m(y)h
(galloping)f(on)f(transmission)j(lines)0 5102 y(and)h(civil)h
(structures)g(and)f(leading)g(them)g(to)g(failure.)41
b(Therefore)27 b(understanding)g(this)f(phenomenon)0
5222 y(in)48 b(order)h(to)f(suppresses)j(these)e(vibrations)g(w)m(as)g
(quite)h(imp)s(ortan)m(t.)90 b(Ho)m(w)m(ev)m(er,)54 b(the)49
b(searc)m(h)g(for)0 5342 y(alternate)24 b(energy)h(sources)g(with)f
(minimal)h(en)m(vironmen)m(tal)h(impact)e(has)g(b)s(ecome)h(an)e(imp)s
(ortan)m(t)h(area)0 5463 y(of)38 b(researc)m(h)i(in)e(the)h(mo)s(dern)g
(w)m(ord.)61 b(Therefore)40 b(researc)m(hers)g(are)f(mo)m(ving)g(to)m
(w)m(ards)g(in)m(v)m(estigating)p Black 0 5712 a Fm(Pr)l(eprint)30
b(submitte)l(d)f(to)h(Journal)g(of)g(Fluid)h(Structur)l(es)1520
b(June)28 b(23,)j(2014)p Black eop end
%%Page: 2 2
TeXDict begin 2 1 bop Black Black 0 407 a Ft(the)46 b(p)s(ossibilit)m
(y)h(of)d(extracting)i(useful)g(energy)h(from)d(this)i(vibrations)g
(rather)f(than)h(suppressing)0 527 y(them.)69 b(Th)m(us,)44
b(it)d(is)g(quite)g(imp)s(ortan)m(t)g(to)f(understand)j(the)e(go)m(v)m
(erning)g(parameters)h(and)f(analyse)0 648 y(the)36 b(in\015uence)h(of)
e(them)h(on)f(the)h(energy)h(transfer)e(from)g(the)h(\015uid)g(to)f
(the)h(structure,)i(b)s(ecause)e(this)0 768 y(understanding)h(will)g
(lead)f(to)f(dev)m(elop)j(b)s(etter)e(practical)g(applications.)54
b(Hence,)38 b(in)f(this)f(pap)s(er)g(w)m(e)0 888 y(fo)s(cus)45
b(on)g(understanding)i(the)f(energy)g(transfer)f(from)g(the)h(\015uid)f
(to)g(the)h(b)s(o)s(dy)f(and)g(isolate)h(the)0 1009 y(go)m(v)m(erning)
34 b(parameters)f(in\015uencing)h(it.)146 1129 y(According)c(to)f
Fs(?)p Ft(,)h Fs(?)42 b Ft(pro)m(vided)31 b(a)e(criterion)h(for)f
(galloping)g(b)m(y)h(considering)h(the)f(auto-rotation)d(of)0
1249 y(an)f(aerofoil.)41 b Fs(?)g Ft(pro)m(vided)28 b(a)e(theoretical)h
(explanation)h(for)d(galloping)h(for)g(iced)h(electric)h(transmission)0
1370 y(lines.)42 b(A)25 b(w)m(eakly)i(non-linear)f(theoretical)f(aero)s
(elastic)h(mo)s(del)g(to)e(predict)j(the)e(resp)s(onse)i(of)d
(galloping)0 1490 y(w)m(as)j(dev)m(elop)s(ed)h(b)m(y)e
Fs(?)41 b Ft(based)27 b(on)f(the)g(quasi-steady)i(state)e(h)m(yp)s
(othesis.)44 b(Exp)s(erimen)m(tal)28 b(lift)d(and)h(drag)0
1611 y(data)39 b(on)h(a)f(\014xed)i(square)f(prism)h(at)e(di\013eren)m
(t)i(angles)f(of)f(attac)m(k)h(w)m(ere)h(used)f(as)g(an)f(input)i(for)e
(the)0 1731 y(theoretical)45 b(mo)s(del.)80 b(It)45 b(essen)m(tially)i
(used)e(a)g(curv)m(e)h(\014t)e(of)g(the)h(transv)m(erse)i(force)e(to)f
(predict)i(the)0 1851 y(galloping)38 b(resp)s(onse.)63
b(The)39 b(study)h(managed)e(to)g(ac)m(hiev)m(e)j(a)d(go)s(o)s(d)f
(agreemen)m(t)j(with)f(exp)s(erimen)m(tal)0 1972 y(data.)146
2092 y(Ho)m(w)m(ev)m(er,)h(the)c(QSS)h(mo)s(del)f(equation)h(when)g
(solv)m(ed)h(analytically)f(using)g(the)f(sin)m(usoidal)i(solu-)0
2213 y(tion,)j(cannot)e(predict)h(the)f(resp)s(onse)i(for)d(cases)j
(with)e(lo)m(w)h(mass)g(ratios.)63 b Fs(?)f Ft(observ)m(ed)41
b(that)e(\014nite)0 2333 y(elemen)m(t)33 b(sim)m(ulations)g(sho)m(w)f
(a)f(sudden)h(c)m(hange)g(in)g(amplitude)g(b)s(elo)m(w)g(a)f(critical)g
(v)-5 b(alue)32 b(of)e(the)i(mass)0 2453 y(ratio.)59
b(The)39 b(quasi-oscillator)f(equation)h(in)f Fs(?)59
b Ft(w)m(as)39 b(altered)g(to)e(accoun)m(t)i(for)e(the)h(v)m(ortex)i
(shedding)0 2574 y(and)25 b(solv)m(ed)h(n)m(umerically)h(to)e(predict)g
(the)h(reduced)g(displacemen)m(t)h(amplitude)f(at)f(lo)m(w)g(mass)h
(ratios)e(to)0 2694 y(the)32 b(p)s(oin)m(t)g(where)h(galloping)e(is)h
(no)g(longer)g(presen)m(t.)45 b Fs(?)d Ft(in)m(v)m(estigated)34
b(the)e(p)s(ossibilit)m(y)i(of)d(extracting)0 2814 y(p)s(o)m(w)m(er)j
(from)g(vibrations)g(caused)h(b)m(y)g(galloping)e(using)h(the)g
(quasi-steady)h(state)f(mo)s(del.)47 b(So)34 b(far)f(the)0
2935 y(studies)j(on)f(galloping)g(using)g(quasi-steady)h(state)g
(assumption)g(has)f(b)s(een)g(mainly)h(fo)s(cused)f(on)g(un-)0
3055 y(derstanding)d(the)f(b)s(eha)m(viour)h(of)f(the)g(displacemen)m
(t)j(amplitude.)44 b(Although,)31 b(it)g(is)h(quite)g(imp)s(ortan)m(t)0
3176 y(to)k(analyse)g(the)h(b)s(eha)m(viour)g(of)e(the)h(v)m(elo)s(cit)
m(y)i(when)f(studying)g(the)f(p)s(o)m(w)m(er)h(transfer)f(from)g(the)g
(\015uid)0 3296 y(to)e(the)i(b)s(o)s(dy)-8 b(.)50 b(This)36
b(is)f(b)s(ecause)h(p)s(o)m(w)m(er)g(could)f(b)s(e)g(simply)h
(de\014ned)h(as)d(the)i(pro)s(duct)f(the)g(force)g(and)0
3416 y(v)m(elo)s(cit)m(y)-8 b(.)47 b(This)35 b(study)f(also)g(fo)s
(cuses)g(on)f(ho)m(w)h(w)m(ell)h(the)f(QSS)f(mo)s(del)h(p)s(erform)f
(at)g(high)h(damping)f(at)0 3537 y(lo)m(w)g(Reynolds)h(n)m(um)m(b)s
(ers.)146 3657 y(Here,)59 b(the)53 b(mo)s(di\014ed)g(QSS)g(mo)s(del)f
(dev)m(elop)s(ed)j(b)m(y)e Fs(?)103 b Ft(is)53 b(in)m(tegrated)h(n)m
(umerically)g(for)e(lo)m(w)0 3778 y(Reynolds)31 b(n)m(um)m(b)s(ers.)44
b(The)30 b(p)s(o)m(w)m(er)h(transfer)e(from)h(the)f(\015uid)h(to)f(the)
h(structure)h(and)e(the)h(in\015uence)h(of)0 3898 y(mec)m(hanical)i
(parameters)g(w)m(as)g(in)m(v)m(estigated)h(\(i.e.)43
b(mass,)33 b(sti\013ness)h(and)e(damping\).)43 b(T)-8
b(o)32 b(this)h(end,)f(a)0 4018 y(series)i(of)e(previously)j(men)m
(tioned)f(mec)m(hanical)g(parameters)f(are)g(tested)g(at)f(t)m(w)m(o)h
(di\013eren)m(t)h(v)-5 b(alues)33 b(of)0 4139 y Fr(R)q(e)p
Ft(:)41 b Fr(R)q(e)28 b Ft(=)f(200,)h(a)f(case)g(that)g(should)h
(remain)g(laminar)f(and)g(closer)h(to)e(t)m(w)m(o-dimensional)j(b)s
(eha)m(viour;)0 4259 y Fr(R)q(e)f Ft(=)g(22300,)e(a)f(case)i(where)g
(the)f(\015o)m(w)h(is)f(exp)s(ected)i(to)d(b)s(e)h(turbulen)m(t)h(and)f
(three-dimensional.)43 b(Both)0 4379 y(cases)37 b(require)h(the)e
(input)h(of)f(transv)m(erse)i(force)e(co)s(e\016cien)m(ts)i
Fr(C)2401 4394 y Fl(y)2478 4379 y Ft(as)f(a)e(function)i(of)f(angle)g
(of)f(attac)m(k)0 4500 y Fr(\022)47 b Ft(for)c(a)h(\014xed)h(b)s(o)s
(dy)-8 b(.)78 b(These)46 b(data)d(are)h(pro)m(vided)i(from)d(direct)i
(n)m(umerical)g(sim)m(ulations)h(for)e(the)0 4620 y Fr(R)q(e)28
b Ft(=)g(200)j(case,)j(while)g(the)f(data)f(pro)m(vided)i(b)m(y)f
Fs(?)44 b Ft(are)32 b(used)i(for)e(the)h Fr(R)q(e)28
b Ft(=)g(22300)j(case.)p Black 1888 5712 a(2)p Black
eop end
%%Page: 3 3
TeXDict begin 3 2 bop Black Black 0 407 a Fs(Nomenclature)196
574 y Fr(a)247 589 y Fp(1)287 574 y Fr(;)17 b(a)382 589
y Fp(3)421 574 y Fr(;)g(a)516 589 y Fp(5)555 574 y Fr(;)g(a)650
589 y Fp(7)1133 574 y Ft(co)s(e\016cien)m(ts)34 b(of)e(the)h(p)s
(olynomial)g(to)g(determine)h Fr(C)3054 589 y Fl(y)196
694 y Fr(A)864 b Ft(displacemen)m(t)35 b(amplitude)196
815 y Fr(c)895 b Ft(damping)33 b(constan)m(t)196 935
y Fr(D)856 b Ft(c)m(haracteristic)34 b(length)f(\(side)h(length\))f(of)
f(the)h(cross)g(section)h(of)e(the)h(b)s(o)s(dy)196 1065
y Fr(f)39 b Ft(=)386 979 y Fk(p)p 486 979 189 4 v 86
x Fr(k)s(=m=)p Ft(2)p Fr(\031)306 b Ft(natural)32 b(frequency)j(of)d
(the)h(system)196 1185 y Fr(F)259 1200 y Fl(y)1133 1185
y Ft(instan)m(taneous)h(force)f(normal)f(to)g(the)h(\015o)m(w)196
1305 y Fr(F)259 1320 y Fp(0)1133 1305 y Ft(amplitude)g(of)f(the)h
(oscillatory)h(force)e(due)i(to)e(v)m(ortex)i(shedding)196
1426 y Fr(k)886 b Ft(spring)33 b(constan)m(t)196 1546
y Fr(m)852 b Ft(mass)33 b(of)f(the)h(b)s(o)s(dy)196 1666
y Fr(m)281 1681 y Fl(a)1133 1666 y Ft(added)g(mass)196
1787 y Fr(P)259 1802 y Fl(d)1133 1787 y Ft(p)s(o)m(w)m(er)g(dissipated)
h(due)g(to)e(mec)m(hanical)i(damping)196 1907 y Fr(P)259
1922 y Fl(in)358 1907 y Ft(=)27 b Fr(\032U)587 1871 y
Fp(3)628 1907 y Fr(D)s(=)p Ft(2)323 b(Energy)33 b(\015ux)h(of)e(the)h
(approac)m(hing)g(\015o)m(w)196 2028 y Fr(P)259 2043
y Fl(mean)1133 2028 y Ft(mean)g(p)s(o)m(w)m(er)196 2148
y Fr(P)259 2163 y Fl(t)1133 2148 y Ft(p)s(o)m(w)m(er)g(transferred)h
(to)e(the)h(b)s(o)s(dy)f(b)m(y)i(the)f(\015uid)196 2268
y Fr(t)902 b Ft(time)196 2389 y Fr(U)871 b Ft(freestream)33
b(v)m(elo)s(cit)m(y)196 2509 y Fr(U)262 2524 y Fl(i)1133
2509 y Ft(Induced)h(v)m(elo)s(cit)m(y)196 2629 y Fr(y)t(;)f
Ft(_)-43 b Fr(y)r(;)23 b Ft(\177)-55 b Fr(y)699 b Ft(transv)m(erse)34
b(displacemen)m(t,)i(v)m(elo)s(cit)m(y)e(and)f(acceleration)g(of)f(the)
h(b)s(o)s(dy)196 2750 y Fo(A)27 b Ft(=)h Fr(D)s(L)576
b Ft(fron)m(tal)32 b(area)g(of)g(the)h(b)s(o)s(dy)196
2870 y Fr(\025)880 b Ft(In)m(v)m(erse)35 b(time)e(scale)h(of)e(a)g
(galloping)g(dominated)i(\015o)m(w)196 2991 y Fr(\025)253
3006 y Fp(1)p Fl(;)p Fp(2)1133 2991 y Ft(Eigen)m(v)-5
b(alues)34 b(of)e(linearized)i(equation)g(of)e(motion)196
3111 y Fr(\032)887 b Ft(\015uid)33 b(densit)m(y)196 3231
y Fr(!)257 3246 y Fl(n)332 3231 y Ft(=)27 b(2)p Fr(\031)t(f)542
b Ft(natural)32 b(angular)g(frequency)j(of)d(the)h(system)196
3352 y Fr(!)257 3367 y Fl(s)1133 3352 y Ft(v)m(ortex)g(shedding)h
(angular)f(frequency)196 3472 y Fr(c)238 3436 y Fq(\003)305
3472 y Ft(=)28 b Fr(cD)s(=mU)398 b Ft(non-dimensionalised)35
b(damping)e(factor)196 3593 y Fr(C)266 3608 y Fl(y)335
3593 y Ft(=)28 b Fr(F)502 3608 y Fl(y)543 3593 y Fr(=)p
Ft(0)p Fr(:)p Ft(5)p Fr(\032U)843 3556 y Fp(2)883 3593
y Fr(D)s(L)100 b Ft(normal)32 b(\(lift\))h(force)f(co)s(e\016cien)m(t)
196 3713 y Fr(m)281 3677 y Fq(\003)349 3713 y Ft(=)27
b Fr(m=\032D)720 3677 y Fp(2)760 3713 y Fr(L)307 b Ft(mass)33
b(ratio)196 3833 y Fr(R)q(e)817 b Ft(Reynolds)34 b(n)m(um)m(b)s(er)196
3954 y Fr(U)272 3918 y Fq(\003)340 3954 y Ft(=)27 b Fr(U)5
b(=f)11 b(D)430 b Ft(reduced)34 b(v)m(elo)s(cit)m(y)196
4074 y Fr(Y)49 b Ft(=)28 b Fr(y)t(=D)545 b Ft(non-dimensional)33
b(transv)m(erse)i(displacemen)m(t)222 4176 y(_)196 4201
y Fr(Y)49 b Ft(=)28 b Fr(m)491 4165 y Fq(\003)548 4201
y Ft(_)-45 b Fr(y)t(=a)682 4216 y Fp(1)721 4201 y Fr(U)346
b Ft(non-dimensional)33 b(transv)m(erse)i(v)m(elo)s(cit)m(y)211
4304 y(\177)196 4329 y Fr(Y)49 b Ft(=)28 b Fr(m)491 4293
y Fq(\003)p Fp(2)566 4329 y Fr(D)s(=a)750 4293 y Fp(2)750
4354 y(1)789 4329 y Fr(U)865 4293 y Fp(2)1133 4329 y
Ft(non-dimensional)33 b(transv)m(erse)i(acceleration)196
4449 y(\000)257 4464 y Fp(1)324 4449 y Ft(=)28 b(4)p
Fr(\031)536 4413 y Fp(2)575 4449 y Fr(m)660 4413 y Fq(\003)p
Fp(2)735 4449 y Fr(=U)860 4413 y Fq(\003)p Fp(2)935 4449
y Fr(a)986 4413 y Fp(2)986 4474 y(1)1133 4449 y Ft(First)k
(dimensionless)k(group)c(arising)h(from)f(linearised,)j
(non-dimensionalised)g(equation)e(of)f(motion)196 4570
y(\000)257 4585 y Fp(2)324 4570 y Ft(=)c Fr(c)470 4534
y Fq(\003)509 4570 y Fr(m)594 4534 y Fq(\003)634 4570
y Fr(=a)734 4585 y Fp(1)1133 4570 y Ft(Second)33 b(dimensionless)j
(group)c(arising)h(from)f(linearised,)j(non-dimensionalised)g(equation)
e(of)f(motion)196 4690 y Fr(\020)j Ft(=)27 b Fr(c=)p
Ft(2)p Fr(m!)663 4705 y Fl(n)1133 4690 y Ft(damping)33
b(ratio)196 4810 y Fr(\022)e Ft(=)d(tan)516 4774 y Fq(\000)p
Fp(1)627 4810 y Ft(\()18 b(_)-45 b Fr(y)s(=U)10 b Ft(\))254
b(instan)m(taneous)34 b(angle)f(of)f(incidence)i(\(angle)f(of)f(attac)m
(k\))196 4931 y(\005)269 4946 y Fp(1)336 4931 y Ft(=)c(4)p
Fr(\031)548 4895 y Fp(2)587 4931 y Fr(m)672 4895 y Fq(\003)p
Fp(2)747 4931 y Fr(=U)872 4895 y Fq(\003)p Fp(2)1133
4931 y Ft(Com)m(bined)34 b(mass-sti\013ness)h(parameter)196
5051 y(\005)269 5066 y Fp(2)336 5051 y Ft(=)28 b Fr(c)482
5015 y Fq(\003)521 5051 y Fr(m)606 5015 y Fq(\003)1133
5051 y Ft(Com)m(bined)34 b(mass-damping)g(parameter)p
Black 1888 5712 a(3)p Black eop end
%%Page: 4 4
TeXDict begin 4 3 bop Black Black Black 765 1110 a @beginspecial
0 @llx -1 @lly 203 @urx 86 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/setup-1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.11.2 (http://cairographics.org)
%%CreationDate: Wed Aug 28 10:11:22 2013
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 -1 203 86
%%EndComments
%%BeginProlog
/cairo_eps_state save def
/dict_count countdictstack def
/op_count count 1 sub def
userdict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 -1 203 86
%%EndPageSetup
q 0 -1 203 87 rectclip q
0 85.05 203 -86 re W n
0 g
0.486335 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 85.050003 cm
104.031 0.25 84.551 84.551 re S Q
0.669045 w
q 1 0 0 -1 0 85.050003 cm
0.008 20.57 m 83.195 20.781 l S Q
80.52 64.273 m 79.18 62.941 l 83.867 64.265 l 79.188 65.616 l h
f*
0.334522 w
q -1 0.00257591 0.00257591 1 0 85.050003 cm
-80.573 -20.57 m -79.236 -21.905 l -83.92 -20.569 l -79.237 -19.229 l h
S Q
0.8 w
q 1 0 0 -1 0 85.050003 cm
84.477 20.965 m 84.477 49.18 l S Q
84.477 39.07 m 82.875 40.671 l 84.477 35.07 l 86.074 40.671 l h
f*
0.4 w
q -0.000000000000000184 1 1 0.000000000000000184 0 85.050003 cm
-45.98 84.477 m -44.379 82.875 l -49.98 84.477 l -44.379 86.074 l h
S Q
0.8 w
q 1 0 0 -1 0 85.050003 cm
0.273 20.621 m 83.063 50.145 l S Q
80.047 35.98 m 78.004 35.011 l 83.813 34.636 l 79.078 38.027 l h
f*
0.376757 w
q -1 0.356636 0.356636 1 0 85.050003 cm
-86.54 -18.207 m -85.034 -19.713 l -90.306 -18.208 l -85.033 -16.698 l 
h
S Q
0.8 w
q 1 0 0 -1 0 85.050003 cm
200.305 24.102 m 200.305 52.316 l S Q
200.305 35.937 m 198.703 37.534 l 200.305 31.937 l 201.902 37.534 l h
f*
0.4 w
q -0.000000000000000184 1 1 0.000000000000000184 0 85.050003 cm
-49.113 200.305 m -47.516 198.703 l -53.113 200.305 l -47.516 201.902 l
 h
S Q
0.700606 w
q 1 0 0 -1 0 85.050003 cm
18.875 20.609 m 18.875 20.609 22.383 20.543 22.383 24.023 c 22.383 27.5
 18.875 27.363 18.875 27.363 c S Q
Q Q
showpage
%%Trailer
count op_count sub {pop} repeat
countdictstack dict_count sub {end} repeat
cairo_eps_state restore
%%EOF

%%EndDocument
 @endspecial 1205 460 a Fr(U)1148 804 y(U)1214 819 y
Fl(i)1624 651 y Ft(_)-45 b Fr(y)1104 594 y(\022)2677
690 y Fj(\(+\))0 1370 y Fi(Figure)29 b(1:)40 b(Induced)30
b(angle)f(of)g(attac)n(k)g(on)g(the)h(square)e(prism)h(due)h(to)f(the)h
(resultan)n(t)f(of)h(free-stream)e(v)n(elo)r(cit)n(y)g(of)i(the)0
1469 y(\015uid)e(and)g(transv)n(erse)d(v)n(elo)r(cit)n(y)i(of)g(the)h
(b)r(o)r(dy)-7 b(.)p Black 0 1751 a Fs(2.)56 b(Problem)38
b(form)m(ulation)h(and)f(metho)s(dology)0 1946 y Fn(2.1.)49
b(The)34 b(quasi-ste)-5 b(ady)35 b(state)g(\(QSS\))f(mo)-5
b(del)146 2091 y Ft(The)34 b(equation)f(of)f(motion)h(of)f(the)h(b)s(o)
s(dy)g(is)g(giv)m(en)g(b)m(y)1456 2311 y(\()p Fr(m)p
Ft(\))7 b(\177)-56 b Fr(y)25 b Ft(+)d Fr(c)17 b Ft(_)-44
b Fr(y)25 b Ft(+)d Fr(k)s(y)31 b Ft(=)d Fr(F)2301 2326
y Fl(y)2342 2311 y Fr(;)1331 b Ft(\(1\))0 2531 y(where)34
b(the)f(forcing)f(term)h Fr(F)1068 2546 y Fl(y)1142 2531
y Ft(is)g(giv)m(en)h(b)m(y)1568 2799 y Fr(F)1631 2814
y Fl(y)1700 2799 y Ft(=)1814 2731 y(1)p 1814 2776 49
4 v 1814 2867 a(2)1873 2799 y Fr(\032U)1999 2758 y Fp(2)2039
2799 y Fo(A)p Fr(C)2189 2814 y Fl(y)2230 2799 y Fr(:)1443
b Ft(\(2\))146 3044 y(In)37 b(the)g(QSS)g(mo)s(del,)h(it)e(is)h
(assumed)h(that)f(the)g(force)f(on)h(the)g(b)s(o)s(dy)f(at)g(a)h(giv)m
(en)g(instan)m(taneous)0 3165 y(inciden)m(t)k(angle)f
Fr(\022)j Ft(\(de\014ned)e(in)g(\014gure)f(1\))f(is)h(the)h(same)f(as)g
(the)h(mean)f(force)g(on)g(a)f(static)h(b)s(o)s(dy)g(at)0
3285 y(the)i(same)g(inciden)m(t)h(angle,)g(or)e(angle)g(of)g(attac)m
(k.)70 b(The)42 b(instan)m(taneous)h(v)-5 b(alue)42 b(of)e
Fr(C)3259 3300 y Fl(y)3342 3285 y Ft(is)h(therefore)0
3405 y(determined)30 b(b)m(y)f(an)f(in)m(terp)s(olating)g(p)s
(olynomial)g(based)h(on)f(the)g(lift)g(data)g(for)f(\015o)m(w)i(o)m(v)m
(er)g(a)f(stationary)0 3526 y(b)s(o)s(dy)45 b(at)f(v)-5
b(arious)46 b Fr(\022)s Ft(.)80 b(Using)46 b(the)f(relationship)h(b)s
(et)m(w)m(een)h Fr(\022)h Ft(and)d(the)g(instan)m(taneous)i(transv)m
(erse)0 3646 y(v)m(elo)s(cit)m(y)30 b(of)e(the)h(b)s(o)s(dy)46
b(_)-45 b Fr(y)32 b Ft(sho)m(wn)d(in)g(\014gure)g(1,)g
Fr(C)1792 3661 y Fl(y)1861 3646 y Ft(can)g(b)s(e)g(written)g(as)f(a)h
(function)f(of)46 b(_)-45 b Fr(y)t Ft(.)42 b(The)29 b(order)f(of)0
3767 y(the)36 b(in)m(terp)s(olation)g(p)s(olynomial)g(used)h(to)e
(de\014ne)i(this)f(function)g(has)g(v)-5 b(aried)36 b(from)g(study)g
(to)g(study)-8 b(.)0 3887 y(F)g(or)35 b(example)j(a)d(7)697
3851 y Fl(th)803 3887 y Ft(order)h(p)s(olynomial)h(w)m(as)g(used)g(in)f
Fs(?)53 b Ft(and)36 b(3)2451 3851 y Fl(r)r(d)2561 3887
y Ft(order)g(p)s(olynomial)h(w)m(as)g(used)g(in)0 4007
y Fs(?)p Ft(.)67 b Fs(?)h Ft(concluded)42 b(that)e(using)h(a)g(7)1352
3971 y Fl(th)1462 4007 y Ft(order)g(p)s(olynomial)g(is)g(su\016cien)m
(t)i(and)d(a)g(p)s(olynomial)h(higher)0 4128 y(than)46
b(that)g(of)g(7)640 4092 y Fl(th)756 4128 y Ft(order)h(do)s(esn't)g
(pro)m(vides)h(a)e(signi\014can)m(tly)i(b)s(etter)e(result.)86
b(Th)m(us)48 b(a)e(7)3487 4092 y Fl(th)3603 4128 y Ft(order)0
4248 y(in)m(terp)s(olating)e(p)s(olynomial)g(is)g(used)g(in)g(this)g
(presen)m(t)h(study)-8 b(.)78 b(As)44 b(a)f(result,)k
Fr(C)3085 4263 y Fl(y)3126 4248 y Ft(\()p Fr(\022)s Ft(\))d(\(noting)f
(that)0 4368 y(theta)33 b(is)g(prop)s(ortional)f(to)49
b(_)-44 b Fr(y)s(=U)10 b Ft(\))33 b(is)g(de\014ned)h(as)767
4662 y Fr(C)837 4677 y Fl(y)878 4662 y Ft(\()p Fr(\022)s
Ft(\))28 b(=)f Fr(a)1184 4677 y Fp(1)1241 4522 y Fk(\022)1354
4595 y Ft(_)-44 b Fr(y)p 1324 4639 77 4 v 1324 4731 a(U)1411
4522 y Fk(\023)1506 4662 y Ft(+)22 b Fr(a)1655 4677 y
Fp(3)1711 4522 y Fk(\022)1825 4595 y Ft(_)-45 b Fr(y)p
1795 4639 V 1795 4731 a(U)1881 4522 y Fk(\023)1955 4544
y Fp(3)2016 4662 y Ft(+)22 b Fr(a)2165 4677 y Fp(5)2221
4522 y Fk(\022)2335 4595 y Ft(_)-44 b Fr(y)p 2305 4639
V 2305 4731 a(U)2391 4522 y Fk(\023)2465 4544 y Fp(5)2526
4662 y Ft(+)22 b Fr(a)2675 4677 y Fp(7)2732 4522 y Fk(\022)2845
4595 y Ft(_)-44 b Fr(y)p 2815 4639 V 2815 4731 a(U)2901
4522 y Fk(\023)2975 4544 y Fp(7)3031 4662 y Fr(:)642
b Ft(\(3\))146 4934 y(It)34 b(is)h(exp)s(ected)h(that)d(v)m(ortex)i
(shedding)h(will)e(b)s(e)h(w)m(ell)g(correlated)f(along)g(the)g(span)h
(and)f(pro)m(vide)0 5054 y(signi\014can)m(t)42 b(forcing)f(at)g(lo)m(w)
g Fr(R)q(e)p Ft(.)69 b Fs(?)f Ft(in)m(tro)s(duced)42
b(an)f(additional)g(sin)m(usoidal)h(forcing)f(function)g(to)0
5175 y(the)48 b(h)m(ydro)s(dynamic)i(forcing)d(to)h(mo)s(del)g(this.)89
b(This)49 b(enables)g(the)f(mo)s(del)g(to)f(pro)m(vide)i(accurate)0
5295 y(predictions)29 b(ev)m(en)g(at)e(lo)m(w)h(mass)g(ratios)f(where)i
(galloping)e(excitation)h(is)g(suppressed)i(or)d(not)g(presen)m(t.)0
5416 y(In)37 b(this)g(study)-8 b(,)38 b(the)f(forcing)f(due)h(to)f(v)m
(ortex)i(shedding)g(in)e(lo)m(w)h Fr(R)q(e)g Ft(cases)h(is)f(incorp)s
(orated)f(using)h(a)p Black 1888 5712 a(4)p Black eop
end
%%Page: 5 5
TeXDict begin 5 4 bop Black Black 0 407 a Ft(sin)m(usoidal)35
b(forcing)f(function)g Fr(F)1219 422 y Fp(0)1275 407
y Ft(sin)18 b Fr(!)1473 422 y Fl(s)1509 407 y Fr(t)34
b Ft(added)h(to)e(the)h(righ)m(t-hand)g(side)h(of)e(equation)i(1.)47
b(Here,)34 b Fr(!)3788 422 y Fl(s)0 527 y Ft(and)40 b
Fr(F)260 542 y Fp(0)339 527 y Ft(represen)m(t)h(the)f(angular)f(v)m
(ortex)i(shedding)g(frequency)h(and)d(the)h(maxim)m(um)h(force)f(due)g
(to)0 648 y(shedding)34 b(resp)s(ectiv)m(ely)-8 b(.)46
b(Th)m(us,)35 b(the)e(\014nal)f(equation)i(for)e(the)h(mo)s(di\014ed)g
(QSS)g(mo)s(del)g(is)142 1050 y Fr(m)7 b Ft(\177)-56
b Fr(y)s Ft(+)p Fr(c)18 b Ft(_)-45 b Fr(y)s Ft(+)p Fr(k)s(y)t
Ft(=)714 983 y(1)p 714 1027 49 4 v 714 1119 a(2)773 1050
y Fr(\032U)899 1009 y Fp(2)940 1050 y Fo(A)1020 880 y
Fk( )1098 1050 y Fr(a)1149 1065 y Fp(1)1205 910 y Fk(\022)1319
983 y Ft(_)g Fr(y)p 1289 1027 77 4 v 1289 1119 a(U)1375
910 y Fk(\023)1465 1050 y Ft(+)p Fr(a)1592 1065 y Fp(3)1648
910 y Fk(\022)1762 983 y Ft(_)g Fr(y)p 1731 1027 V 1731
1119 a(U)1818 910 y Fk(\023)1891 932 y Fp(3)1947 1050
y Ft(+)p Fr(a)2074 1065 y Fp(5)2131 910 y Fk(\022)2244
983 y Ft(_)h Fr(y)p 2214 1027 V 2214 1119 a(U)2301 910
y Fk(\023)2374 932 y Fp(5)2430 1050 y Ft(+)p Fr(a)2557
1065 y Fp(7)2613 910 y Fk(\022)2727 983 y Ft(_)f Fr(y)p
2696 1027 V 2696 1119 a(U)2783 910 y Fk(\023)2856 932
y Fp(7)2912 880 y Fk(!)2991 1050 y Ft(+)p Fr(F)3130 1065
y Fp(0)3186 1050 y Ft(sin)18 b(\()p Fr(!)3422 1065 y
Fl(s)3458 1050 y Fr(t)p Ft(\))p Fr(:)142 b Ft(\(4\))146
1352 y(This)28 b(equation)f(can)g(b)s(e)g(solv)m(ed)h(using)f(standard)
g(time)g(in)m(tegration)g(metho)s(ds.)42 b(In)27 b(this)g(study)h(the)0
1472 y(fourth-order)33 b(Runge-Kutta)h(sc)m(heme)i(built)f(in)f(to)g
(the)g(MA)-8 b(TLAB)35 b(routine)f(`o)s(de45')g(w)m(as)h(generally)0
1593 y(used)f(to)e(obtain)g(the)h(solutions.)0 1813 y
Fn(2.2.)49 b(Calculation)34 b(of)h(aver)-5 b(age)34 b(p)-5
b(ower)146 1958 y Ft(The)45 b(dissipated)h(p)s(o)m(w)m(er)f(due)f(to)g
(the)g(mec)m(hanical)h(damping)g(represen)m(ts)h(the)e(ideal)h(p)s
(oten)m(tial)0 2078 y(amoun)m(t)33 b(of)f(harv)m(ested)j(p)s(o)m(w)m
(er)e(output.)44 b(Therefore,)34 b(the)f(mean)g(p)s(o)m(w)m(er)g
(output)g(can)g(b)s(e)g(giv)m(en)g(b)m(y)1428 2360 y
Fr(P)1491 2375 y Fl(mean)1698 2360 y Ft(=)1823 2293 y(1)p
1812 2337 71 4 v 1812 2429 a Fr(T)1909 2225 y Fk(Z)2009
2251 y Fl(T)1964 2450 y Fp(0)2064 2360 y Ft(\()p Fr(c)17
b Ft(_)-44 b Fr(y)s Ft(\))17 b(_)-44 b Fr(y)s(dt;)1303
b Ft(\(5\))0 2627 y(where)34 b Fr(T)46 b Ft(is)33 b(the)g(p)s(erio)s(d)
g(of)f(in)m(tegration)h(and)f Fr(c)h Ft(is)g(the)g(mec)m(hanical)h
(damping)f(constan)m(t.)146 2748 y(It)41 b(should)g(b)s(e)g(noted)f
(that)h(this)g(quan)m(tit)m(y)h(is)f(equal)g(to)f(the)h(w)m(ork)g(done)
g(on)f(the)h(b)s(o)s(dy)f(b)m(y)i(the)0 2868 y(\015uid,)33
b(de\014ned)h(as)1452 3051 y Fr(P)1515 3066 y Fl(mean)1722
3051 y Ft(=)1847 2983 y(1)p 1836 3028 V 1836 3119 a Fr(T)1933
2915 y Fk(Z)2033 2941 y Fl(T)1988 3140 y Fp(0)2104 3051
y Fr(F)2167 3066 y Fl(y)2226 3051 y Ft(_)-44 b Fr(y)s(dt;)1327
b Ft(\(6\))0 3277 y(where)34 b Fr(F)345 3292 y Fl(y)419
3277 y Ft(is)f(the)g(transv)m(erse)i(\(lift\))d(force.)146
3398 y(These)44 b(t)m(w)m(o)f(de\014nitions)h(sho)m(w)g(t)m(w)m(o)f
(imp)s(ortan)m(t)f(in)m(terpretations)i(of)e(the)g(p)s(o)m(w)m(er)i
(with)f(resp)s(ect)0 3518 y(to)c(an)m(y)h(energy)g(pro)s(duction)g
(device.)65 b(The)40 b(\014rst)g(sho)m(ws)h(that)e(p)s(o)m(w)m(er)h
(will)g(b)s(e)g(high)f(for)g(situations)0 3639 y(where)29
b(the)g(damping)f(co)s(e\016cien)m(t)i(is)e(high,)h(and)f(the)h(transv)
m(erse)h(v)m(elo)s(cit)m(y)g(is)e(consisten)m(tly)j(high.)42
b(The)0 3759 y(second)h(sho)m(ws)h(that)e(p)s(o)m(w)m(er)h(will)g(b)s
(e)f(high)g(for)g(situations)h(where)g(the)g(transv)m(erse)h(force)e
(and)h(the)0 3879 y(b)s(o)s(dy)33 b(v)m(elo)s(cit)m(y)h(are)f(in)f
(phase.)p Black Black Black 1067 4018 1692 4 v 1067 4035
V 1233 4248 a(Case)259 b Fr(a)1743 4263 y Fp(1)1952 4248
y Fr(a)2003 4263 y Fp(3)2222 4248 y Fr(a)2273 4263 y
Fp(5)2541 4248 y Fr(a)2592 4263 y Fp(7)p 1067 4322 V
1165 4561 a Ft(Re=200)148 b(2.27)99 b(179)g(3218)g(18031)1116
4716 y(Re=22300)g(2.69)g(168)g(1670)g(59900)p 1067 4798
V 0 4951 a Fi(T)-7 b(able)28 b(1:)38 b(Co)r(e\016cien)n(t)28
b(v)-5 b(alues)28 b(used)g(in)g(the)h(7th)f(order)f(in)n(terp)r
(olation)h(p)r(olynomial)f(for)h(high)g(\()p Fh(R)q(e)c
Fi(=)g(22300\))i(and)i(lo)n(w)0 5051 y(\()p Fh(R)q(e)c
Fi(=)g(165\))j(Reynolds)h(n)n(um)n(b)r(ers.)38 b(These)28
b(data)g(are)f(used)i(as)e(input)j(data)d(to)i(calculate)e(the)i(righ)n
(t-hand)e(side)h(of)h(Eq.)0 5151 y(4)e(throughout)g(this)h(study)-7
b(.)p Black Black 1888 5712 a Ft(5)p Black eop end
%%Page: 6 6
TeXDict begin 6 5 bop Black Black Black 96 1225 a @beginspecial
50 @llx 50 @lly 390 @urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/lift_curve_200.eps
%!PS-Adobe-2.0
%%Title: lift_curve_200.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Sat Jun  7 13:48:13 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (lift_curve_200.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jun  7 13:48:13 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
612 240 M
63 0 V
stroke
540 240 M
[ [(Times-roman) 120.0 0.0 true true 0 (-0.25)]
] -40.0 MRshow
1.000 UL
LTb
612 569 M
63 0 V
stroke
540 569 M
[ [(Times-roman) 120.0 0.0 true true 0 (-0.125)]
] -40.0 MRshow
1.000 UL
LTb
612 898 M
63 0 V
stroke
540 898 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
612 1226 M
63 0 V
stroke
540 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.125)]
] -40.0 MRshow
1.000 UL
LTb
612 1555 M
63 0 V
stroke
540 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.25)]
] -40.0 MRshow
1.000 UL
LTb
612 240 M
0 63 V
stroke
612 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1255 240 M
0 63 V
stroke
1255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 4)]
] -40.0 MCshow
1.000 UL
LTb
1898 240 M
0 63 V
stroke
1898 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 8)]
] -40.0 MCshow
1.000 UL
LTb
2541 240 M
0 63 V
stroke
2541 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 12)]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 16)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
612 1555 N
612 240 L
2572 0 V
0 1315 V
-2572 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
/vshift -40 def
612 898 M
26 16 V
26 17 V
26 17 V
26 16 V
26 16 V
26 16 V
26 16 V
26 15 V
26 14 V
26 15 V
26 13 V
26 13 V
26 12 V
26 11 V
26 11 V
26 9 V
26 9 V
26 8 V
26 7 V
26 6 V
26 4 V
26 4 V
26 3 V
26 1 V
25 1 V
26 -1 V
26 -2 V
26 -3 V
26 -4 V
26 -6 V
26 -6 V
26 -8 V
26 -9 V
26 -10 V
26 -11 V
26 -13 V
26 -13 V
26 -14 V
26 -16 V
26 -16 V
26 -18 V
26 -18 V
26 -19 V
26 -19 V
26 -21 V
26 -21 V
26 -22 V
26 -22 V
26 -22 V
26 -23 V
26 -24 V
26 -23 V
26 -23 V
26 -24 V
26 -24 V
26 -23 V
26 -23 V
26 -23 V
26 -22 V
26 -22 V
26 -22 V
26 -20 V
26 -20 V
26 -19 V
26 -18 V
26 -18 V
26 -16 V
26 -15 V
26 -14 V
26 -12 V
26 -11 V
26 -10 V
26 -9 V
26 -7 V
25 -6 V
26 -4 V
26 -3 V
26 -2 V
26 0 V
26 1 V
26 2 V
26 3 V
26 3 V
26 5 V
26 5 V
26 6 V
26 6 V
26 6 V
26 5 V
26 5 V
26 3 V
26 2 V
26 1 V
26 -3 V
26 -5 V
26 -8 V
26 -13 V
26 -18 V
26 -23 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
773 984 CircleF
934 1070 CircleF
1094 1136 CircleF
1255 1173 CircleF
1416 1156 CircleF
1416 1156 CircleF
1416 1156 CircleF
1577 1085 CircleF
1737 960 CircleF
1898 831 CircleF
2059 725 CircleF
773 984 CircleF
934 1070 CircleF
1094 1136 CircleF
1255 1173 CircleF
1416 1156 CircleF
1416 1156 CircleF
1416 1156 CircleF
1577 1085 CircleF
1737 960 CircleF
1898 831 CircleF
773 984 CircleF
934 1070 CircleF
1094 1136 CircleF
1255 1173 CircleF
1416 1156 CircleF
1416 1156 CircleF
1416 1156 CircleF
1577 1085 CircleF
1737 960 CircleF
1898 831 CircleF
2220 650 CircleF
2380 571 CircleF
2541 546 CircleF
2702 532 CircleF
2863 482 CircleF
3023 420 CircleF
3184 357 CircleF
% End plot #2
1.000 UL
LTb
612 1555 N
612 240 L
2572 0 V
0 1315 V
-2572 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 1797 w @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/lift_curve_park.eps
%!PS-Adobe-2.0
%%Title: lift_curve_park.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Mon Aug 19 18:22:34 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (lift_curve_park.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug 19 18:22:34 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
468 240 M
63 0 V
stroke
396 240 M
[ [(Times-roman) 120.0 0.0 true true 0 (-0.6)]
] -40.0 MRshow
1.000 UL
LTb
468 569 M
63 0 V
stroke
396 569 M
[ [(Times-roman) 120.0 0.0 true true 0 (-0.3)]
] -40.0 MRshow
1.000 UL
LTb
468 898 M
63 0 V
stroke
396 898 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
468 1226 M
63 0 V
stroke
396 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.3)]
] -40.0 MRshow
1.000 UL
LTb
468 1555 M
63 0 V
stroke
396 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
468 240 M
0 63 V
stroke
468 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1147 240 M
0 63 V
stroke
1147 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 4)]
] -40.0 MCshow
1.000 UL
LTb
1826 240 M
0 63 V
stroke
1826 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 8)]
] -40.0 MCshow
1.000 UL
LTb
2505 240 M
0 63 V
stroke
2505 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 12)]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 16)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
468 1555 N
468 240 L
2716 0 V
0 1315 V
-2716 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
468 898 M
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
stroke 645 950 M
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
stroke 821 996 M
2 1 V
1 0 V
2 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
stroke 998 1032 M
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
stroke 1174 1054 M
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
stroke 1351 1067 M
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
stroke 1527 1074 M
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
stroke 1704 1088 M
1 0 V
2 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 0 V
stroke 1880 1118 M
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
2 0 V
1 1 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
stroke 2057 1178 M
2 1 V
1 0 V
2 1 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 1 V
2 0 V
2 1 V
1 1 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 1 V
2 0 V
2 1 V
2 1 V
1 1 V
2 1 V
2 0 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 0 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 0 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 0 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 2 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
stroke 2233 1271 M
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 2 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
2 2 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 2 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 2 V
2 1 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 2 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 2 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 2 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 2 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 2 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 2 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 2 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 2 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
2 2 V
1 1 V
2 1 V
stroke 2410 1388 M
2 1 V
1 1 V
2 1 V
2 2 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 2 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 2 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 2 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 2 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
2 1 V
1 2 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 2 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 0 V
1 1 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 1 V
2 1 V
2 1 V
1 0 V
stroke 2586 1495 M
2 1 V
2 1 V
2 1 V
1 0 V
2 1 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
1 1 V
2 0 V
2 1 V
2 0 V
1 1 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 1 V
2 0 V
1 0 V
2 1 V
2 0 V
2 0 V
1 1 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
2 0 V
1 1 V
2 0 V
2 0 V
1 0 V
2 0 V
2 1 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 -1 V
2 0 V
1 0 V
2 0 V
2 -1 V
2 0 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 0 V
2 -1 V
1 0 V
2 -1 V
2 0 V
2 0 V
1 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
stroke 2763 1519 M
2 0 V
1 -1 V
2 -1 V
2 0 V
2 -1 V
1 0 V
2 -1 V
2 -1 V
1 -1 V
2 0 V
2 -1 V
1 -1 V
2 -1 V
2 0 V
1 -1 V
2 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -1 V
2 -1 V
2 -1 V
1 -1 V
2 -2 V
2 -1 V
1 -1 V
2 -1 V
2 -2 V
1 -1 V
2 -1 V
2 -2 V
2 -1 V
1 -1 V
2 -2 V
2 -1 V
1 -2 V
2 -1 V
2 -2 V
1 -2 V
2 -1 V
2 -2 V
2 -1 V
1 -2 V
2 -2 V
2 -2 V
1 -1 V
2 -2 V
2 -2 V
1 -2 V
2 -2 V
2 -2 V
1 -2 V
2 -1 V
2 -3 V
2 -2 V
1 -2 V
2 -2 V
2 -2 V
1 -2 V
2 -2 V
2 -2 V
1 -3 V
2 -2 V
2 -2 V
2 -3 V
1 -2 V
2 -2 V
2 -3 V
1 -2 V
2 -3 V
2 -2 V
1 -3 V
2 -2 V
2 -3 V
2 -3 V
1 -2 V
2 -3 V
2 -3 V
1 -3 V
2 -3 V
2 -3 V
1 -2 V
2 -3 V
2 -3 V
1 -3 V
2 -4 V
2 -3 V
2 -3 V
1 -3 V
2 -3 V
2 -3 V
1 -4 V
2 -3 V
2 -3 V
1 -4 V
2 -3 V
2 -4 V
2 -3 V
stroke 2940 1325 M
1 -4 V
2 -3 V
2 -4 V
1 -4 V
2 -4 V
2 -3 V
1 -4 V
2 -4 V
2 -4 V
2 -4 V
1 -4 V
2 -4 V
2 -4 V
1 -4 V
2 -4 V
2 -4 V
1 -5 V
2 -4 V
2 -4 V
2 -5 V
1 -4 V
2 -4 V
2 -5 V
1 -4 V
2 -5 V
2 -5 V
1 -4 V
2 -5 V
2 -5 V
1 -5 V
2 -5 V
2 -5 V
2 -5 V
1 -5 V
2 -5 V
2 -5 V
1 -5 V
2 -5 V
2 -5 V
1 -6 V
2 -5 V
2 -6 V
2 -5 V
1 -6 V
2 -5 V
2 -6 V
1 -5 V
2 -6 V
2 -6 V
1 -6 V
2 -6 V
2 -6 V
2 -6 V
1 -6 V
2 -6 V
2 -6 V
1 -6 V
2 -6 V
2 -7 V
1 -6 V
2 -7 V
2 -6 V
2 -7 V
1 -6 V
2 -7 V
2 -7 V
1 -6 V
2 -7 V
2 -7 V
1 -7 V
2 -7 V
2 -7 V
1 -7 V
2 -8 V
2 -7 V
2 -7 V
1 -8 V
2 -7 V
2 -8 V
1 -7 V
2 -8 V
2 -7 V
1 -8 V
2 -8 V
2 -8 V
2 -8 V
1 -8 V
2 -8 V
2 -8 V
1 -8 V
2 -9 V
2 -8 V
1 -8 V
2 -9 V
2 -9 V
2 -8 V
1 -9 V
2 -9 V
2 -8 V
1 -9 V
2 -9 V
2 -9 V
1 -9 V
2 -10 V
stroke 3116 689 M
2 -9 V
1 -9 V
2 -10 V
2 -9 V
2 -10 V
1 -9 V
2 -10 V
2 -10 V
1 -10 V
2 -10 V
2 -10 V
1 -10 V
2 -10 V
2 -10 V
2 -10 V
1 -11 V
2 -10 V
2 -11 V
1 -10 V
2 -11 V
2 -11 V
1 -11 V
2 -10 V
2 -11 V
2 -12 V
1 -11 V
2 -11 V
2 -11 V
1 -12 V
2 -11 V
2 -12 V
1 -11 V
2 -12 V
2 -12 V
2 -12 V
1 -12 V
2 -12 V
2 -12 V
1 -12 V
2 -13 V
% End plot #1
stroke
1.000 UL
LTb
468 1555 N
468 240 L
2716 0 V
0 1315 V
-2716 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 109 766 a Fg(C)193 784 y Fh(y)989 1263 y
Fr(\022)1867 b(\022)402 460 y Ft(\(a\))1634 b(\(b\))0
1446 y Fi(Figure)25 b(2:)36 b(Lift)27 b(co)r(e\016cien)n(t,)f
Fh(C)988 1458 y Ff(y)1028 1446 y Fi(,)g(as)g(a)f(function)i(of)f
(incidence)g(angle)f Fh(\022)r Fi(,)h(for)g(a)f(static)h(square)f
(cross)f(section.)36 b(\(a\))26 b(Data)0 1546 y(from)33
b(sim)n(ulations)g(at)h Fh(R)q(e)f Fi(=)g(165)f(\(b\))j(data)e(from)h
Fe(?)55 b Fi(at)34 b Fh(R)q(e)f Fi(=)g(22300.)53 b(P)n(oin)n(ts)33
b(\()p Fd(\017)p Fi(\))h(are)e(measuremen)n(ts)h(from)h(the)0
1645 y(sim)n(ulations.)i(The)28 b(solid)g(lines)f(in)h(b)r(oth)g(plots)
g(are)f(7th-order)f(in)n(terp)r(olating)g(p)r(olynomial)h(used)h(to)g
(predict)f(the)i(\015uid)0 1745 y(forcing)k(for)h(the)h(QSS)f(mo)r
(del.)58 b Fh(C)1115 1757 y Ff(y)1189 1745 y Fi(is)34
b(the)h(force)f(co)r(e\016cien)n(t)g(of)g(the)h(force)f(whic)n(h)g(o)r
(ccurs)f(normal)h(to)g(the)h(induced)0 1845 y(v)n(elo)r(cit)n(y)-7
b(.)p Black 0 2107 a Fn(2.3.)49 b(V)-7 b(alidation)0
2239 y Fs(3.)56 b(Results)146 2420 y Ft(The)40 b(natural)e(time)i
(scales)g(of)e(the)h(system)h(can)f(b)s(e)g(found)g(b)m(y)g(solving)h
(for)e(the)h(eigen)m(v)-5 b(alues)40 b(of)0 2540 y(the)33
b(linearised)h(equation)f(of)g(motion,)f(namely)1239
2779 y(\()p Fr(m)p Ft(\))7 b(\177)-56 b Fr(y)s Ft(+)p
Fr(c)18 b Ft(_)-45 b Fr(y)s Ft(+)p Fr(k)s(y)t Ft(=)1887
2711 y(1)p 1887 2756 49 4 v 1887 2847 a(2)1946 2779 y
Fr(\032U)2072 2737 y Fp(2)2112 2779 y Fo(A)p Fr(a)2243
2794 y Fp(1)2299 2638 y Fk(\022)2413 2711 y Ft(_)g Fr(y)p
2382 2756 77 4 v 2382 2847 a(U)2469 2638 y Fk(\023)2559
2779 y Fr(;)1114 b Ft(\(7\))0 3017 y(whic)m(h)32 b(is)g(simply)g(the)f
(equation)h(of)e(motion)h(presen)m(ted)i(in)e(equation)g(4)g(with)g
(the)g(p)s(olynomial)g(series)0 3138 y(for)41 b(the)g(lift)g(force)h
(truncated)g(at)f(the)g(linear)h(term,)i(and)d(the)h(forcing)f(term)g
(represen)m(ting)j(v)m(ortex)0 3258 y(shedding)34 b(remo)m(v)m(ed.)146
3378 y(Com)m(bining)g(the)51 b(_)-45 b Fr(y)36 b Ft(terms)d(and)g
(solving)g(for)g(eigen)m(v)-5 b(alues)34 b(giv)m(es)632
3674 y Fr(\025)689 3689 y Fp(1)p Fl(;)p Fp(2)811 3674
y Ft(=)27 b Fo(\000)1001 3607 y Ft(1)p 1001 3651 49 4
v 1001 3742 a(2)1070 3601 y Fr(c)c Fo(\000)1244 3561
y Fp(1)p 1244 3578 36 4 v 1244 3635 a(2)1289 3601 y Fr(\032U)10
b Fo(A)p Fr(a)1546 3616 y Fp(1)p 1070 3651 517 4 v 1248
3742 a Ft(\()p Fr(m)p Ft(\))1619 3674 y Fo(\006)1728
3607 y Ft(1)p 1728 3651 49 4 v 1728 3742 a(2)1787 3481
y Fk(s)p 1887 3481 1280 4 v 52 x(\024)1949 3601 y Fr(c)22
b Fo(\000)2123 3561 y Fp(1)p 2123 3578 36 4 v 2123 3635
a(2)2168 3601 y Fr(\032U)10 b Fo(A)p Fr(a)2425 3616 y
Fp(1)p 1949 3651 517 4 v 2127 3742 a Ft(\()p Fr(m)p Ft(\))2475
3533 y Fk(\025)2528 3545 y Fp(2)2589 3674 y Fo(\000)23
b Ft(4)2925 3607 y Fr(k)p 2748 3651 409 4 v 2748 3742
a Ft(\()p Fr(m)f Ft(+)g Fr(m)3076 3757 y Fl(a)3118 3742
y Ft(\))3166 3674 y Fr(:)507 b Ft(\(8\))146 3919 y(If)34
b(it)g(is)h(assumed)h(that)e(the)g(spring)h(is)g(relativ)m(ely)h(w)m
(eak,)g Fr(k)d Fo(!)d Ft(0,)k(a)g(single)h(non-zero)f(eigen)m(v)-5
b(alue)0 4040 y(remains.)45 b(This)33 b(eigen)m(v)-5
b(alue)34 b(is)1498 4223 y Fr(\025)28 b Ft(=)f Fo(\000)1773
4150 y Fr(c)c Fo(\000)1947 4110 y Fp(1)p 1947 4127 36
4 v 1947 4184 a(2)1993 4150 y Fr(\032U)10 b Fo(A)p Fr(a)2250
4165 y Fp(1)p 1773 4200 517 4 v 1951 4291 a Ft(\()p Fr(m)p
Ft(\))2300 4223 y Fr(:)1373 b Ft(\(9\))146 4433 y(F)-8
b(urther,)34 b(if)g(it)f(is)i(assumed)g(that)e(the)h(mec)m(hanical)i
(damping)e(is)g(signi\014can)m(tly)h(w)m(eak)m(er)h(than)e(the)0
4554 y(aero)s(dynamic)f(forces)h(on)e(the)h(b)s(o)s(dy)-8
b(,)33 b Fr(c)27 b Fo(!)h Ft(0)k(and)1619 4803 y Fr(\025)27
b Ft(=)1827 4691 y Fp(1)p 1827 4707 36 4 v 1827 4764
a(2)1872 4730 y Fr(\032U)10 b Fo(A)p Fr(a)2129 4745 y
Fp(1)p 1817 4780 353 4 v 1912 4871 a Ft(\()p Fr(m)p Ft(\))2179
4803 y Fr(:)1446 b Ft(\(10\))146 5040 y(In)36 b(this)f(form,)g
Fr(\025)g Ft(represen)m(ts)i(the)f(in)m(v)m(erse)h(time)e(scale)h(of)f
(the)g(motion)g(of)f(the)i(b)s(o)s(dy)e(due)i(to)f(the)0
5161 y(negativ)m(e)42 b(damping)f(e\013ect)g(of)f(the)h(long-time)g
(aero)s(dynamic)h(forces.)68 b(In)41 b(fact,)h(the)f(terms)h(can)f(b)s
(e)0 5281 y(regroup)s(ed)33 b(and)g Fr(\025)f Ft(written)h(as)1694
5444 y Fr(\025)28 b Ft(=)1909 5377 y Fr(a)1960 5392 y
Fp(1)p 1892 5421 125 4 v 1892 5513 a Fr(m)1977 5484 y
Fq(\003)2041 5377 y Fr(U)p 2037 5421 84 4 v 2037 5513
a(D)3652 5444 y Ft(\(11\))p Black 1888 5712 a(6)p Black
eop end
%%Page: 7 7
TeXDict begin 7 6 bop Black Black 146 407 a Ft(W)-8 b(ritten)45
b(this)f(w)m(a)m(y)-8 b(,)48 b(the)d(imp)s(ortan)m(t)f(parameters)h
(that)f(dictate)g(this)h(in)m(v)m(erse)h(time)f(scale)g(are)0
527 y(clear.)56 b(The)37 b(rate)f(of)g(c)m(hange)i(in)e(the)h(aero)s
(dynamic)h(force)e(with)h(resp)s(ect)h(to)e(angle)h(of)f(attac)m(k)h
(when)0 648 y(the)f(b)s(o)s(dy)h(is)f(at)g(the)g(equilibrium)i(p)s
(osition,)g Fr(@)5 b(C)1868 663 y Fl(y)1910 648 y Fr(=@)g(\013)q
Ft(,)37 b(is)g(represen)m(ted)h(b)m(y)f Fr(a)2955 663
y Fp(1)2995 648 y Ft(.)54 b(The)37 b(mass)g(ratio)e(is)0
768 y(represen)m(ted)41 b(b)m(y)e Fr(m)750 732 y Fq(\003)790
768 y Ft(.)60 b(The)40 b(in)m(v)m(erse)g(adv)m(ectiv)m(e)h(time)e
(scale)g(of)f(the)h(incoming)g(\015o)m(w)g(is)f(represen)m(ted)0
888 y(b)m(y)f(the)g(ratio)f Fr(U)5 b(=D)s Ft(.)54 b(Increasing)38
b Fr(a)1352 903 y Fp(1)1428 888 y Ft(w)m(ould)f(mean)g(the)g(force)f
(on)g(the)h(b)s(o)s(dy)g(w)m(ould)g(increase)h(more)0
1009 y(rapidly)g(with)h(small)f(c)m(hanges)h(in)f(the)g(angle)f(of)g
(attac)m(k,)j Fr(\022)s Ft(,)f(or)e(transv)m(erse)j(v)m(elo)s(cit)m(y)
-8 b(.)60 b(Equation)38 b(11)0 1129 y(sho)m(ws)d(that)e(suc)m(h)i(a)f
(c)m(hange)g(will)g(increase)h(the)f(in)m(v)m(erse)i(time)e(scale,)h
(or)e(analogously)h(decrease)i(the)0 1249 y(resp)s(onse)k(time)g(of)e
(the)h(b)s(o)s(dy)-8 b(.)63 b(Increasing)40 b(the)f(mass)h(of)e(the)h
(b)s(o)s(dy)-8 b(,)41 b(thereb)m(y)f(increasing)g Fr(m)3576
1213 y Fq(\003)3616 1249 y Ft(,)h(has)0 1370 y(the)30
b(opp)s(osite)g(e\013ect.)44 b(The)30 b(in)m(v)m(erse)j(time)d(scale)h
(is)f(decreased,)i(or)e(as)g(migh)m(t)g(b)s(e)g(exp)s(ected,)i(a)e(hea)
m(vier)0 1490 y(b)s(o)s(dy)j(will)g(tak)m(e)g(longer)g(to)f(resp)s
(ond.)146 1611 y(This)i(timescale)h(can)e(then)h(b)s(e)f(used)h(to)f
(non-dimensionalize)i(the)e(equation)h(of)e(motion,)h(and)g(to)0
1731 y(\014nd)k(the)f(relev)-5 b(an)m(t)37 b(dimensionless)i(groups)d
(of)g(the)g(problem.)55 b(If)36 b(the)g(non-dimensional)h(time,)h
Fr(\034)11 b Ft(,)37 b(is)0 1851 y(de\014ned)32 b(suc)m(h)g(that)e
Fr(\034)39 b Ft(=)27 b Fr(t)p Ft(\()p Fr(a)1069 1866
y Fp(1)1109 1851 y Fr(=m)1243 1815 y Fq(\003)1283 1851
y Ft(\)\()p Fr(U)5 b(=D)s Ft(\),)30 b(the)h(equation)g(of)f(motion)g
(presen)m(ted)j(in)d(equation)i(4)e(can)0 1972 y(b)s(e)j
(non-dimensionalized)i(as)916 2197 y(\177)901 2222 y
Fr(Y)44 b Ft(+)1110 2155 y Fr(m)1195 2119 y Fq(\003)p
Fp(2)p 1110 2199 161 4 v 1145 2290 a Fr(a)1196 2256 y
Fp(2)1196 2315 y(1)1302 2155 y Fr(k)s(D)1440 2119 y Fp(2)p
1290 2199 202 4 v 1290 2290 a Fr(mU)1451 2262 y Fp(2)1501
2222 y Fr(Y)49 b Ft(=)1711 2082 y Fk(\022)1794 2155 y
Ft(1)p 1794 2199 49 4 v 1794 2290 a(2)1875 2222 y Fo(\000)1984
2155 y Fr(m)2069 2119 y Fq(\003)p 1984 2199 125 4 v 2002
2290 a Fr(a)2053 2305 y Fp(1)2147 2155 y Fr(cD)p 2129
2199 162 4 v 2129 2290 a(mU)2301 2082 y Fk(\023)2417
2197 y Ft(_)2391 2222 y Fr(Y)43 b Ft(+)22 b Fr(H)r(:O)s(:T)8
b(:;)729 b Ft(\(12\))146 2512 y(where)27 b Fr(H)r(:O)s(:T)8
b(:)25 b Ft(represen)m(ts)j(the)e(higher)g(order)g(terms)g(in)2301
2487 y(_)2276 2512 y Fr(Y)21 b Ft(.)41 b(The)27 b(co)s(e\016cien)m(ts)g
(can)f(b)s(e)g(regroup)s(ed)0 2632 y(in)m(to)33 b(com)m(binations)h(of)
e(non-dimensional)i(groups,)f(and)f(rewritten)i(as)1017
2877 y(\177)1002 2902 y Fr(Y)44 b Ft(+)1211 2835 y(4)p
Fr(\031)1319 2799 y Fp(2)1358 2835 y Fr(m)1443 2799 y
Fq(\003)p Fp(2)p 1211 2879 308 4 v 1243 2971 a Fr(U)1319
2942 y Fq(\003)p Fp(2)1395 2971 y Fr(a)1446 2936 y Fp(2)1446
2995 y(1)1528 2902 y Fr(Y)49 b Ft(=)1737 2762 y Fk(\022)1821
2835 y Ft(1)p 1821 2879 49 4 v 1821 2971 a(2)1902 2902
y Fo(\000)2011 2835 y Fr(c)2053 2799 y Fq(\003)2093 2835
y Fr(m)2178 2799 y Fq(\003)p 2011 2879 207 4 v 2069 2971
a Fr(a)2120 2986 y Fp(1)2227 2762 y Fk(\023)2343 2877
y Ft(_)2317 2902 y Fr(Y)44 b Ft(+)22 b Fr(H)r(:O)s(:T)8
b(;)829 b Ft(\(13\))146 3176 y(where)34 b Fr(c)470 3139
y Fq(\003)537 3176 y Ft(=)28 b Fr(cD)s(=mU)43 b Ft(is)33
b(a)f(non-dimensional)i(damping)f(parameter.)146 3296
y(Equation)26 b(13)f(sho)m(ws)i(there)f(are)f(four)g(non-dimensional)i
(parameters)f(that)f(pla)m(y)h(a)f(role)h(in)f(setting)0
3416 y(the)f(resp)s(onse)h(of)e(the)g(system.)43 b(These)25
b(are)f(the)f(sti\013ness)j(\(represen)m(ted)g(b)m(y)e(the)g(reduced)h
(v)m(elo)s(cit)m(y)g Fr(U)3720 3380 y Fq(\003)3760 3416
y Ft(\),)0 3537 y(the)30 b(damping)g Fr(c)605 3501 y
Fq(\003)644 3537 y Ft(,)g(the)g(mass)g(ratio)f Fr(m)1417
3501 y Fq(\003)1457 3537 y Ft(,)h(and)f(the)h(geometry)-8
b(,)31 b(represen)m(ted)h(b)m(y)e(the)g(rate)g(of)e(c)m(hange)j(in)0
3657 y(the)g(aero)s(dynamic)g(force)g(with)g(resp)s(ect)h(to)e(angle)g
(of)g(attac)m(k)h(when)h(the)f(b)s(o)s(dy)f(is)h(at)f(the)h
(equilibrium)0 3778 y(p)s(osition,)h Fr(a)449 3793 y
Fp(1)488 3778 y Ft(.)43 b(The)32 b(grouping)f(of)f(these)j(parameters)e
(in)m(to)h(t)m(w)m(o)f(groups)h(in)f(equation)g(13)g(whic)m(h)h(arise)0
3898 y(b)m(y)25 b(non-dimensionalising)h(using)f(the)g(natural)f(time)h
(scale)g(of)f(the)h(galloping)f(system,)k(suggests)d(there)0
4018 y(are)38 b(t)m(w)m(o)g(groups)g(that)f(dictate)h(the)g(resp)s
(onse:)55 b(\000)1899 4033 y Fp(1)1975 4018 y Ft(=)36
b(4)p Fr(\031)2195 3982 y Fp(2)2234 4018 y Fr(m)2319
3982 y Fq(\003)p Fp(2)2394 4018 y Fr(=U)2519 3982 y Fq(\003)p
Fp(2)2594 4018 y Fr(a)2645 3982 y Fp(2)2645 4043 y(1)2722
4018 y Ft(and)i(\000)2978 4033 y Fp(2)3053 4018 y Ft(=)e
Fr(c)3207 3982 y Fq(\003)3247 4018 y Fr(m)3332 3982 y
Fq(\003)3372 4018 y Fr(=a)3472 4033 y Fp(1)3511 4018
y Ft(.)58 b(F)-8 b(or)37 b(a)0 4139 y(giv)m(en)c(geometry)g(and)f
(Reynolds)h(n)m(um)m(b)s(er,)g(\000)1731 4154 y Fp(1)1803
4139 y Ft(can)f(b)s(e)g(though)m(t)g(of)f(as)h(a)g(com)m(bined)h
(mass-sti\013ness,)0 4259 y(whereas)40 b(\000)436 4274
y Fp(2)514 4259 y Ft(can)e(b)s(e)h(though)m(t)f(of)g(a)g(a)g(com)m
(bined)i(mass-damping)g(parameter.)61 b(As)39 b(it)f(is)h(assumed)0
4379 y(that)33 b(during)g(galloping)g(the)g(sti\013ness)i(pla)m(ys)f
(only)g(a)f(minor)g(role,)g(\000)2582 4394 y Fp(2)2654
4379 y Ft(seems)i(a)e(lik)m(ely)i(parameter)e(to)0 4500
y(collapse)38 b(the)e(data)h(presen)m(ted)h(in)f(\014gure)g(3.)55
b(In)37 b(fact,)g(in)g(the)g(classic)h(pap)s(er)e(on)h(galloping)f
(from)g Fs(?)p Ft(,)0 4620 y(galloping)k(data)g(from)g(wind)h(tunnel)g
(tests)h(is)e(presen)m(ted)j(in)d(terms)i(of)d(a)h(parameter)h(that)f
(can)h(b)s(e)0 4741 y(sho)m(wn)34 b(to)e(b)s(e)h(the)g(same)g(as)g
(\000)1141 4756 y Fp(2)1180 4741 y Ft(.)146 4861 y(All)48
b(of)f(the)h(quan)m(tities)h(that)e(mak)m(e)i(up)e(\000)1807
4876 y Fp(1)1894 4861 y Ft(and)h(\000)2160 4876 y Fp(2)2246
4861 y Ft(can,)k(in)c(theory)-8 b(,)51 b(b)s(e)d(kno)m(wn)h(b)s(efore)e
(an)0 4981 y(exp)s(erimen)m(t)27 b(is)e(conducted.)42
b(Ho)m(w)m(ev)m(er,)29 b(the)c(quan)m(tit)m(y)i Fr(a)2098
4996 y Fp(1)2162 4981 y Ft(is)e(a)g(relativ)m(ely)h(di\016cult)g(one)f
(to)f(determine,)0 5102 y(requiring)40 b(static)g(b)s(o)s(dy)g(exp)s
(erimen)m(ts)i(or)d(sim)m(ulations.)66 b(Here,)42 b(the)e(geometry)g
(is)g(unc)m(hanged)h(and)0 5222 y(results)28 b(are)e(only)h(b)s(eing)f
(compared)h(at)f(the)h(same)g Fr(R)q(e)p Ft(.)41 b(Hence,)29
b(suitable)f(parameters)f(can)f(b)s(e)h(formed)0 5342
y(b)m(y)j(m)m(ultiplying)i(\000)711 5357 y Fp(1)780 5342
y Ft(and)d(\000)1027 5357 y Fp(2)1096 5342 y Ft(b)m(y)h
Fr(a)1279 5306 y Fp(2)1279 5367 y(1)1349 5342 y Ft(and)f
Fr(a)1586 5357 y Fp(1)1655 5342 y Ft(resp)s(ectiv)m(ely)-8
b(,)34 b(to)29 b(arriv)m(e)h(at)f(a)h(mass-sti\013ness)h(parameter)0
5463 y(\005)73 5478 y Fp(1)140 5463 y Ft(=)d(4)p Fr(\031)352
5427 y Fp(2)391 5463 y Fr(m)476 5427 y Fq(\003)p Fp(2)551
5463 y Fr(=U)676 5427 y Fq(\003)p Fp(2)751 5463 y Ft(,)33
b(and)f(a)h(mass-damping)g(parameter)g(de\014ned)h(as)f(\005)2717
5478 y Fp(2)2784 5463 y Ft(=)28 b Fr(c)2930 5427 y Fq(\003)2969
5463 y Fr(m)3054 5427 y Fq(\003)3094 5463 y Ft(.)p Black
1888 5712 a(7)p Black eop end
%%Page: 8 8
TeXDict begin 8 7 bop Black Black Black 96 1225 a @beginspecial
50 @llx 50 @lly 390 @urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/displacement_amp_re_parkinson_1.eps
%!PS-Adobe-2.0
%%Title: displacement_amp_re_parkinson_1.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:14:31 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (displacement_amp_re_parkinson_1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:14:31 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 569 M
63 0 V
stroke
324 569 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 5)]
] -40.0 MRshow
1.000 UL
LTb
396 898 M
63 0 V
stroke
324 898 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 10)]
] -40.0 MRshow
1.000 UL
LTb
396 1226 M
63 0 V
stroke
324 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 15)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 20)]
] -40.0 MRshow
1.000 UL
LTb
1325 240 M
0 63 V
stroke
1325 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
2255 240 M
0 63 V
stroke
2255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
1139 392 Star
1232 417 Star
1325 442 Star
1418 469 Star
1511 497 Star
1604 545 Star
1697 561 Star
1139 729 Star
1232 764 Star
1325 799 Star
1418 831 Star
1511 864 Star
1604 896 Star
1697 928 Star
1883 992 Star
2069 1055 Star
2255 1119 Star
2441 1184 Star
2812 1307 Star
2998 1372 Star
3184 1433 Star
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
861 318 TriDF
1139 333 TriDF
1232 358 TriDF
1325 383 TriDF
1418 407 TriDF
1511 432 TriDF
1604 454 TriDF
1697 478 TriDF
1325 747 TriDF
1418 802 TriDF
1511 839 TriDF
1604 875 TriDF
1697 909 TriDF
1883 538 TriDF
2069 602 TriDF
2255 701 TriDF
1883 974 TriDF
2069 1040 TriDF
2255 1105 TriDF
2441 1171 TriDF
2812 1298 TriDF
2998 1359 TriDF
3184 1427 TriDF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
861 285 CircleF
1139 292 CircleF
1325 328 CircleF
1511 376 CircleF
1697 422 CircleF
1790 447 CircleF
1883 472 CircleF
1976 497 CircleF
2069 523 CircleF
2162 549 CircleF
2255 576 CircleF
1697 874 CircleF
1790 914 CircleF
1883 950 CircleF
1976 985 CircleF
2069 1019 CircleF
2162 1053 CircleF
2255 1087 CircleF
2255 1087 CircleF
2441 1152 CircleF
2812 1286 CircleF
2998 1345 CircleF
3184 1408 CircleF
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 880 x @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/velocity_amp_re_parkinson.eps
%!PS-Adobe-2.0
%%Title: velocity_amp_re_parkinson.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:14:32 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (velocity_amp_re_parkinson.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:14:32 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 569 M
63 0 V
stroke
324 569 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.0)]
] -40.0 MRshow
1.000 UL
LTb
396 898 M
63 0 V
stroke
324 898 M
[ [(Times-roman) 120.0 0.0 true true 0 (2.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1226 M
63 0 V
stroke
324 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 (3.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (4.0)]
] -40.0 MRshow
1.000 UL
LTb
1325 240 M
0 63 V
stroke
1325 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
2255 240 M
0 63 V
stroke
2255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-1)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
1139 505 Star
1232 532 Star
1325 557 Star
1418 582 Star
1511 606 Star
1604 632 Star
1697 660 Star
1139 1091 Star
1232 1095 Star
1325 1117 Star
1418 1121 Star
1511 1130 Star
1604 1135 Star
1697 1140 Star
1883 1147 Star
2069 1153 Star
2255 1159 Star
2441 1167 Star
2812 1169 Star
2998 1174 Star
3184 1174 Star
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
1139 402 TriDF
1232 435 TriDF
1325 464 TriDF
1418 490 TriDF
1511 514 TriDF
1604 536 TriDF
1697 557 TriDF
1325 1036 TriDF
1418 1080 TriDF
1511 1097 TriDF
1604 1107 TriDF
1697 1114 TriDF
1883 599 TriDF
2069 648 TriDF
2255 722 TriDF
1883 1126 TriDF
2069 1136 TriDF
2255 1160 TriDF
2441 1153 TriDF
2812 1161 TriDF
2998 1162 TriDF
3184 1169 TriDF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
861 365 CircleF
1139 335 CircleF
1325 380 CircleF
1511 434 CircleF
1697 479 CircleF
1790 498 CircleF
1883 520 CircleF
1976 539 CircleF
2069 557 CircleF
2162 574 CircleF
2255 591 CircleF
1697 1068 CircleF
1790 1085 CircleF
1883 1097 CircleF
1976 1106 CircleF
2069 1113 CircleF
2162 1119 CircleF
2255 1125 CircleF
2255 1125 CircleF
2441 1134 CircleF
2812 1155 CircleF
2998 1152 CircleF
3184 1155 CircleF
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 880 x @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/mean_power_re_parkinson.eps
%!PS-Adobe-2.0
%%Title: mean_power_re_parkinson.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:41:38 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (mean_power_re_parkinson.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:41:38 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 569 M
63 0 V
stroke
324 569 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.0)]
] -40.0 MRshow
1.000 UL
LTb
396 898 M
63 0 V
stroke
324 898 M
[ [(Times-roman) 120.0 0.0 true true 0 (2.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1226 M
63 0 V
stroke
324 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 (3.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (4.0)]
] -40.0 MRshow
1.000 UL
LTb
954 240 M
0 63 V
stroke
954 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 200)]
] -40.0 MCshow
1.000 UL
LTb
2069 240 M
0 63 V
stroke
2069 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 300)]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 400)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-2)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
396 282 Star
452 295 Star
508 307 Star
563 318 Star
619 1346 Star
675 1360 Star
731 1358 Star
786 1347 Star
842 1337 Star
898 1321 Star
954 1306 Star
1009 1288 Star
1065 1274 Star
1121 1257 Star
1177 1240 Star
1232 1223 Star
1288 1207 Star
1344 1192 Star
1400 1175 Star
1455 1161 Star
1511 1145 Star
1567 1133 Star
1623 1118 Star
1678 1104 Star
1734 1095 Star
1790 1078 Star
1846 1067 Star
1902 1056 Star
1957 1045 Star
2013 1032 Star
2069 1021 Star
2125 1015 Star
2180 1004 Star
2236 992 Star
2292 985 Star
2348 972 Star
2403 965 Star
2459 954 Star
2515 946 Star
2571 935 Star
2626 927 Star
2682 916 Star
2738 907 Star
2794 898 Star
2849 891 Star
2905 884 Star
2961 876 Star
3017 869 Star
3072 862 Star
3128 854 Star
3184 848 Star
619 328 Star
675 338 Star
731 347 Star
786 356 Star
842 364 Star
898 372 Star
954 380 Star
1009 387 Star
1065 395 Star
1121 402 Star
1177 411 Star
1232 419 Star
1288 427 Star
1344 438 Star
1400 448 Star
1455 464 Star
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
619 259 TriDF
675 271 TriDF
731 283 TriDF
786 293 TriDF
842 304 TriDF
898 313 TriDF
954 322 TriDF
1009 1351 TriDF
1065 1360 TriDF
1121 1355 TriDF
1177 1351 TriDF
1232 1341 TriDF
1288 1328 TriDF
1344 1314 TriDF
1400 1299 TriDF
1455 1284 TriDF
1511 1273 TriDF
1567 1261 TriDF
1623 1246 TriDF
1678 1233 TriDF
1734 1220 TriDF
1790 1208 TriDF
1846 1196 TriDF
1902 1182 TriDF
1957 1172 TriDF
2013 1160 TriDF
2069 1147 TriDF
2125 1134 TriDF
2180 1121 TriDF
2236 1113 TriDF
2292 1102 TriDF
2348 1092 TriDF
2403 1082 TriDF
2459 1074 TriDF
2515 1065 TriDF
2571 1054 TriDF
2626 1046 TriDF
2682 1038 TriDF
2738 1025 TriDF
2794 1013 TriDF
2849 1005 TriDF
2905 997 TriDF
2961 986 TriDF
3017 979 TriDF
3072 973 TriDF
3128 963 TriDF
3184 957 TriDF
954 322 TriDF
1009 330 TriDF
1065 338 TriDF
1121 346 TriDF
1177 353 TriDF
1232 360 TriDF
1288 367 TriDF
1344 374 TriDF
1400 380 TriDF
1455 386 TriDF
1511 393 TriDF
1567 399 TriDF
1623 405 TriDF
1678 412 TriDF
1734 419 TriDF
1790 426 TriDF
1846 434 TriDF
1902 443 TriDF
1957 454 TriDF
2013 468 TriDF
2069 499 TriDF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
954 267 CircleF
1009 273 CircleF
1065 283 CircleF
1121 292 CircleF
1177 301 CircleF
1232 309 CircleF
1288 317 CircleF
1344 1323 CircleF
1400 1352 CircleF
1455 1357 CircleF
1511 1352 CircleF
1567 1346 CircleF
1623 1336 CircleF
1678 1328 CircleF
1734 1319 CircleF
1790 1306 CircleF
1846 1298 CircleF
1902 1286 CircleF
1957 1277 CircleF
2013 1266 CircleF
2069 1253 CircleF
2125 1240 CircleF
2180 1232 CircleF
2236 1222 CircleF
2292 1209 CircleF
2348 1202 CircleF
2403 1189 CircleF
2459 1175 CircleF
2515 1168 CircleF
2571 1153 CircleF
2626 1149 CircleF
2682 1140 CircleF
2738 1128 CircleF
2794 1123 CircleF
2849 1113 CircleF
2905 1106 CircleF
2961 1093 CircleF
3017 1086 CircleF
3072 1076 CircleF
3128 1063 CircleF
3184 1055 CircleF
1288 317 CircleF
1344 325 CircleF
1400 331 CircleF
1455 338 CircleF
1511 345 CircleF
1567 352 CircleF
1623 357 CircleF
1678 363 CircleF
1734 369 CircleF
1790 375 CircleF
1846 380 CircleF
1902 386 CircleF
1957 391 CircleF
2013 397 CircleF
2069 402 CircleF
2125 407 CircleF
2180 413 CircleF
2236 419 CircleF
2292 425 CircleF
2348 432 CircleF
2403 439 CircleF
2459 447 CircleF
2515 457 CircleF
2571 471 CircleF
2626 500 CircleF
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 1893 1225 a @beginspecial 50 @llx 50 @lly
390 @urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/displacement_amp_re165.eps
%!PS-Adobe-2.0
%%Title: displacement_amp_re165.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Mon Nov 18 14:34:52 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (displacement_amp_re165.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 18 14:34:52 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 503 M
63 0 V
stroke
324 503 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1029 M
63 0 V
stroke
324 1029 M
[ [(Times-roman) 120.0 0.0 true true 0 (3.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (5.0)]
] -40.0 MRshow
1.000 UL
LTb
396 240 M
0 63 V
stroke
396 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1093 240 M
0 63 V
stroke
1093 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1790 240 M
0 63 V
stroke
1790 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
2487 240 M
0 63 V
stroke
2487 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
884 309 Crs
1023 383 Crs
1163 446 Crs
1302 506 Crs
1442 568 Crs
1581 628 Crs
1720 689 Crs
1860 748 Crs
1999 809 Crs
2139 873 Crs
2278 934 Crs
2417 994 Crs
2557 1061 Crs
2696 1121 Crs
2836 1187 Crs
2975 1250 Crs
3114 1320 Crs
3184 1360 Crs
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
1023 315 DiaF
1163 395 DiaF
1302 458 DiaF
1442 524 DiaF
1581 584 DiaF
1720 646 DiaF
1860 702 DiaF
1999 767 DiaF
2139 830 DiaF
2278 888 DiaF
2417 950 DiaF
2557 1018 DiaF
2696 1079 DiaF
2836 1145 DiaF
2975 1204 DiaF
3114 1274 DiaF
3184 1305 DiaF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
1302 323 Pls
1442 415 Pls
1581 485 Pls
1720 552 Pls
1860 618 Pls
1999 678 Pls
2139 741 Pls
2278 800 Pls
2417 865 Pls
2557 928 Pls
2696 993 Pls
2836 1053 Pls
2975 1115 Pls
3114 1184 Pls
3184 1214 Pls
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 880 x @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/velocity_amp_re165.eps
%!PS-Adobe-2.0
%%Title: velocity_amp_re165.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Mon Nov 18 14:34:52 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (velocity_amp_re165.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 18 14:34:52 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 678 M
63 0 V
stroke
324 678 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.5)]
] -40.0 MRshow
1.000 UL
LTb
396 1117 M
63 0 V
stroke
324 1117 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.5)]
] -40.0 MRshow
1.000 UL
LTb
396 240 M
0 63 V
stroke
396 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1093 240 M
0 63 V
stroke
1093 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1790 240 M
0 63 V
stroke
1790 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
2487 240 M
0 63 V
stroke
2487 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-1)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
884 778 Crs
1023 1012 Crs
1163 1132 Crs
1302 1202 Crs
1442 1253 Crs
1581 1290 Crs
1720 1320 Crs
1860 1350 Crs
1999 1363 Crs
2139 1382 Crs
2278 1395 Crs
2417 1415 Crs
2557 1419 Crs
2696 1434 Crs
2836 1443 Crs
2975 1449 Crs
3114 1457 Crs
3184 1455 Crs
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
1023 732 DiaF
1163 953 DiaF
1302 1068 DiaF
1442 1143 DiaF
1581 1196 DiaF
1720 1226 DiaF
1860 1271 DiaF
1999 1297 DiaF
2139 1318 DiaF
2278 1342 DiaF
2417 1355 DiaF
2557 1364 DiaF
2696 1386 DiaF
2836 1392 DiaF
2975 1407 DiaF
3114 1421 DiaF
3184 1425 DiaF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
1302 657 Pls
1442 865 Pls
1581 973 Pls
1720 1053 Pls
1860 1107 Pls
1999 1152 Pls
2139 1190 Pls
2278 1222 Pls
2417 1244 Pls
2557 1269 Pls
2696 1283 Pls
2836 1303 Pls
2975 1320 Pls
3114 1333 Pls
3184 1345 Pls
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 880 x @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/mean_power_re_165.eps
%!PS-Adobe-2.0
%%Title: mean_power_re_165.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:12:53 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (mean_power_re_165.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:12:53 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 503 M
63 0 V
stroke
324 503 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.3)]
] -40.0 MRshow
1.000 UL
LTb
396 766 M
63 0 V
stroke
324 766 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.6)]
] -40.0 MRshow
1.000 UL
LTb
396 1029 M
63 0 V
stroke
324 1029 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.9)]
] -40.0 MRshow
1.000 UL
LTb
396 1292 M
63 0 V
stroke
324 1292 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.2)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.5)]
] -40.0 MRshow
1.000 UL
LTb
396 240 M
0 63 V
stroke
396 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1093 240 M
0 63 V
stroke
1093 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 50)]
] -40.0 MCshow
1.000 UL
LTb
1790 240 M
0 63 V
stroke
1790 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 100)]
] -40.0 MCshow
1.000 UL
LTb
2487 240 M
0 63 V
stroke
2487 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 150)]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 200)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-3)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
814 377 Crs
884 729 Crs
954 998 Crs
1023 1150 Crs
1093 1234 Crs
1163 1278 Crs
1232 1294 Crs
1302 1296 Crs
1372 1288 Crs
1442 1273 Crs
1511 1255 Crs
1581 1234 Crs
1651 1212 Crs
1720 1188 Crs
1790 1165 Crs
1860 1142 Crs
1929 1120 Crs
1999 1099 Crs
2069 1078 Crs
2139 1058 Crs
2208 1038 Crs
2278 1019 Crs
2348 1003 Crs
2417 986 Crs
2487 969 Crs
2557 952 Crs
2626 936 Crs
2696 921 Crs
2766 906 Crs
2836 893 Crs
2905 880 Crs
2975 869 Crs
3045 858 Crs
3114 843 Crs
3184 832 Crs
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
954 372 DiaF
1023 639 DiaF
1093 887 DiaF
1163 1047 DiaF
1232 1153 DiaF
1302 1220 DiaF
1372 1261 DiaF
1442 1284 DiaF
1511 1296 DiaF
1581 1297 DiaF
1651 1294 DiaF
1720 1286 DiaF
1790 1274 DiaF
1860 1261 DiaF
1929 1246 DiaF
1999 1231 DiaF
2069 1214 DiaF
2139 1197 DiaF
2208 1180 DiaF
2278 1164 DiaF
2348 1147 DiaF
2417 1130 DiaF
2487 1114 DiaF
2557 1098 DiaF
2626 1084 DiaF
2696 1068 DiaF
2766 1052 DiaF
2836 1038 DiaF
2905 1024 DiaF
2975 1011 DiaF
3045 999 DiaF
3114 985 DiaF
3184 974 DiaF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
1302 533 Pls
1372 736 Pls
1442 890 Pls
1511 1005 Pls
1581 1091 Pls
1651 1155 Pls
1720 1204 Pls
1790 1240 Pls
1860 1266 Pls
1929 1284 Pls
1999 1294 Pls
2069 1300 Pls
2139 1301 Pls
2208 1301 Pls
2278 1298 Pls
2348 1294 Pls
2417 1287 Pls
2487 1279 Pls
2557 1272 Pls
2626 1262 Pls
2696 1253 Pls
2766 1243 Pls
2836 1231 Pls
2905 1225 Pls
2975 1210 Pls
3045 1199 Pls
3114 1187 Pls
3184 1179 Pls
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 956 3061 a Fr(U)1032 3025 y Fq(\003)2869
3061 y Fr(U)2945 3025 y Fq(\003)15 699 y Fr(A)p 10 743
84 4 v 10 835 a(D)13 1464 y(V)p 10 1508 V 10 1600 a(D)-27
2420 y(P)36 2435 y Fl(m)p -86 2465 246 4 v -86 2556 a
Fr(\032)p Fo(A)p Fr(U)120 2527 y Fp(3)325 441 y Fj(\(a\))1683
b(\(b\))325 1321 y(\(c\))1688 b(\(d\))325 2201 y(\(e\))g(\(f)7
b(\))0 3244 y Fi(Figure)22 b(3:)35 b(V)-7 b(elo)r(cit)n(y)23
b(amplitude,)h(displacemen)n(t)f(amplitude)h(and)f(mean)g(p)r(o)n(w)n
(er)e(as)i(functions)g(of)g Fh(U)3182 3214 y Fc(\003)3220
3244 y Fi(.)36 b(Data)23 b(presen)n(ted)0 3343 y(in)36
b(\(a\),)h(\(c\))f(and)f(\(e\))h(w)n(ere)f(calculated)f(using)h(input)i
(data)d(at)i Fh(R)q(e)f Fi(=)h(22300)c(and)k Fh(m)2798
3313 y Fc(\003)2872 3343 y Fi(=)f(1163)f(obtained)h(b)n(y)g
Fe(?)60 b Fi(at)0 3443 y(three)33 b(di\013eren)n(t)g(damping)g(ratios:)
47 b Fh(\020)38 b Fi(=)32 b(0)p Fh(:)p Fi(0125)f(\()p
Fb(S)p Fi(\),)j Fh(\020)39 b Fi(=)32 b(0)p Fh(:)p Fi(015)f(\()p
Fb(t)p Fi(\))j(and)f Fh(\020)39 b Fi(=)32 b(0)p Fh(:)p
Fi(0175)e(\()p Fb(l)p Fi(\).)54 b(Data)33 b(presen)n(ted)g(in)0
3543 y(\(b\),\(d\))25 b(and)f(\(f)6 b(\))25 b(w)n(ere)d(obtained)i
(using)f(input)h(data)g(at)f Fh(R)q(e)f Fi(=)h(165)f(and)i
Fh(m)2376 3513 y Fc(\003)2437 3543 y Fi(=)f(20)f(at)i(three)f
(di\013eren)n(t)h(damping)f(ratios:)0 3642 y Fh(\020)38
b Fi(=)31 b(0)p Fh(:)p Fi(075)g(\()p Fd(\002)p Fi(\),)j
Fh(\020)k Fi(=)32 b(0)p Fh(:)p Fi(1)f(\()p Fb(u)p Fi(\))j(and)f
Fh(\020)38 b Fi(=)31 b(0)p Fh(:)p Fi(15)g(\(+\).)53 b(The)33
b(m)n(ultiple)g(branc)n(hes)e(for)i(the)g(higher)f(Re)g(are)g(due)h(to)
g(the)0 3742 y(h)n(ysteresis)26 b(b)r(et)n(w)n(een)i(t)n(w)n(o)f
(solutions.)p Black 146 4020 a Ft(The)42 b(range)g(of)e(inciden)m(t)j
(\015o)m(w)f(angles)g(where)g Fr(C)2003 4035 y Fl(y)2085
4020 y Ft(remains)h(p)s(ositiv)m(e)f(is)g(narro)m(w)f(at)g
Fr(R)q(e)i Ft(=)f(200)0 4140 y(\(0)87 4104 y Fq(\016)167
4140 y Fr(<)f(\022)k Fo(\024)c Ft(7)541 4104 y Fq(\016)580
4140 y Ft(\))f(compared)i(to)e Fr(R)q(e)i Ft(=)f(22300)e(\(0)1888
4104 y Fq(\016)1968 4140 y Fr(<)j(\022)i Fo(\024)e Ft(15)2392
4104 y Fq(\016)2431 4140 y Ft(\).)67 b(This)42 b(feature)e(is)i(what)e
(sustains)0 4261 y(galloping.)82 b(P)m(o)m(w)m(er)48
b(is)e(only)g(transferred)g(from)g(the)g(\015uid)g(to)f(the)h(supp)s
(orting)g(structure)h(within)0 4381 y(this)42 b(range)f(of)g(inciden)m
(t)i(angles)e(b)s(ecause)i(\015uid)f(forces)g(are)f(acting)g(in)h(the)f
(direction)h(of)f(tra)m(v)m(el)h(of)0 4501 y(the)f(oscillating)g(b)s(o)
s(dy)-8 b(,)42 b(as)e(demonstrated)i(b)m(y)f(equation)g(6.)67
b(Inciden)m(t)42 b(angles)f(b)s(ey)m(ond)g(this)g(range)0
4622 y(actually)e(suppress)i(the)e(galloping)f(and)h(p)s(o)m(w)m(er)h
(go)s(es)e(in)h(the)g(opp)s(osite)g(direction,)i(i.e;)i(from)38
b(b)s(o)s(dy)0 4742 y(to)e(\015uid.)54 b(Therefore)37
b(due)g(to)f(the)g(o)m(v)m(erall)h(smaller)g Fr(C)2045
4757 y Fl(y)2122 4742 y Ft(and)f(narro)m(w)h(range)f(of)f(angles)i
(where)g Fr(C)3682 4757 y Fl(y)3759 4742 y Ft(is)0 4863
y(p)s(ositiv)m(e)f(for)e Fr(R)q(e)d Ft(=)g(200)i(compared)j(to)e
Fr(R)q(e)d Ft(=)g(22300,)j(it)g(is)h(exp)s(ected)i(that)d(the)h
(transferred)g(p)s(o)m(w)m(er)0 4983 y(at)d Fr(R)q(e)c
Ft(=)g(200)k(is)h(signi\014can)m(tly)h(lo)m(w)m(er)g(than)e(at)h
Fr(R)q(e)28 b Ft(=)f(22300.)0 5200 y Fn(3.1.)49 b(Displac)-5
b(ement,)33 b(velo)-5 b(city)35 b(and)f(p)-5 b(ower)146
5342 y Ft(A)26 b(similar)h(result)g(to)f Fs(?)41 b Ft(could)27
b(b)s(e)f(observ)m(ed)i(in)e(\014gure)h(3)e(\(f)7 b(\))26
b(where)h(the)g(p)s(eak)f(p)s(o)m(w)m(er)h(remains)h(the)0
5463 y(same)37 b(but)g(the)g Fr(U)679 5427 y Fq(\003)720
5463 y Ft(whic)m(h)h(corresp)s(onds)g(to)e(the)h(p)s(eak)g(p)s(o)m(w)m
(er)h(shifts)f(to)g(the)g(righ)m(t)g(as)f(the)h(damping)p
Black 1888 5712 a(8)p Black eop end
%%Page: 9 9
TeXDict begin 9 8 bop Black Black Black 96 1990 a @beginspecial
50 @llx 50 @lly 390 @urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/displacement_amp_collapsed_parkinson.eps
%!PS-Adobe-2.0
%%Title: displacement_amp_collapsed_parkinson.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Thu Sep  5 15:55:04 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (displacement_amp_collapsed_parkinson.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Sep  5 15:55:04 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 569 M
63 0 V
stroke
324 569 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 5)]
] -40.0 MRshow
1.000 UL
LTb
396 898 M
63 0 V
stroke
324 898 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 10)]
] -40.0 MRshow
1.000 UL
LTb
396 1226 M
63 0 V
stroke
324 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 15)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 20)]
] -40.0 MRshow
1.000 UL
LTb
396 240 M
0 63 V
stroke
396 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1325 240 M
0 63 V
stroke
1325 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
2255 240 M
0 63 V
stroke
2255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
1824 392 Star
1700 417 Star
1588 442 Star
1487 469 Star
1396 497 Star
1312 545 Star
1235 561 Star
1824 729 Star
1700 764 Star
1588 799 Star
1487 831 Star
1396 864 Star
1312 896 Star
1235 928 Star
1099 992 Star
982 1055 Star
881 1119 Star
793 1184 Star
645 1307 Star
583 1372 Star
528 1433 Star
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
2862 318 TriDF
2296 333 TriDF
2147 358 TriDF
2013 383 TriDF
1892 407 TriDF
1781 432 TriDF
1681 454 TriDF
1588 478 TriDF
2013 747 TriDF
1892 802 TriDF
1781 839 TriDF
1681 875 TriDF
1588 909 TriDF
1425 538 TriDF
1285 602 TriDF
1164 701 TriDF
1425 974 TriDF
1285 1040 TriDF
1164 1105 TriDF
1058 1171 TriDF
881 1298 TriDF
807 1359 TriDF
740 1427 TriDF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
2767 292 CircleF
2437 328 CircleF
2167 376 CircleF
1942 422 CircleF
1843 447 CircleF
1752 472 CircleF
1667 497 CircleF
1588 523 CircleF
1515 549 CircleF
1447 576 CircleF
1942 874 CircleF
1843 914 CircleF
1752 950 CircleF
1667 985 CircleF
1588 1019 CircleF
1515 1053 CircleF
1447 1087 CircleF
1447 1087 CircleF
1323 1152 CircleF
1117 1286 CircleF
1030 1345 CircleF
952 1408 CircleF
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 879 x @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/velocity_amp_collapsed_parkinson.eps
%!PS-Adobe-2.0
%%Title: velocity_amp_collapsed_parkinson.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:14:32 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (velocity_amp_collapsed_parkinson.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:14:32 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 569 M
63 0 V
stroke
324 569 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.0)]
] -40.0 MRshow
1.000 UL
LTb
396 898 M
63 0 V
stroke
324 898 M
[ [(Times-roman) 120.0 0.0 true true 0 (2.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1226 M
63 0 V
stroke
324 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 (3.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (4.0)]
] -40.0 MRshow
1.000 UL
LTb
396 240 M
0 63 V
stroke
396 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1325 240 M
0 63 V
stroke
1325 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
2255 240 M
0 63 V
stroke
2255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
1824 505 Star
1700 532 Star
1588 557 Star
1487 582 Star
1396 606 Star
1312 632 Star
1235 660 Star
1824 1091 Star
1700 1095 Star
1588 1117 Star
1487 1121 Star
1396 1130 Star
1312 1135 Star
1235 1140 Star
1099 1147 Star
982 1153 Star
881 1159 Star
793 1167 Star
645 1169 Star
583 1174 Star
528 1174 Star
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
2296 402 TriDF
2147 435 TriDF
2013 464 TriDF
1892 490 TriDF
1781 514 TriDF
1681 536 TriDF
1588 557 TriDF
2013 1036 TriDF
1892 1080 TriDF
1781 1097 TriDF
1681 1107 TriDF
1588 1114 TriDF
1425 599 TriDF
1285 648 TriDF
1164 722 TriDF
1425 1126 TriDF
1285 1136 TriDF
1164 1160 TriDF
1058 1153 TriDF
881 1161 TriDF
807 1162 TriDF
740 1169 TriDF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
2767 335 CircleF
2437 380 CircleF
2167 434 CircleF
1942 479 CircleF
1843 498 CircleF
1752 520 CircleF
1667 539 CircleF
1588 557 CircleF
1515 574 CircleF
1447 591 CircleF
1942 1068 CircleF
1843 1085 CircleF
1752 1097 CircleF
1667 1106 CircleF
1588 1113 CircleF
1515 1119 CircleF
1447 1125 CircleF
1447 1125 CircleF
1323 1134 CircleF
1117 1155 CircleF
1030 1152 CircleF
952 1155 CircleF
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 1797 w @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/velocity_amp_collapsed_re165.eps
%!PS-Adobe-2.0
%%Title: velocity_amp_collapsed_re165.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Mon Nov 18 14:34:52 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (velocity_amp_collapsed_re165.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 18 14:34:52 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 569 M
63 0 V
stroke
324 569 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.4)]
] -40.0 MRshow
1.000 UL
LTb
396 898 M
63 0 V
stroke
324 898 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.8)]
] -40.0 MRshow
1.000 UL
LTb
396 1226 M
63 0 V
stroke
324 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.2)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.6)]
] -40.0 MRshow
1.000 UL
LTb
1325 240 M
0 63 V
stroke
1325 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
2255 240 M
0 63 V
stroke
2255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-1)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
2899 744 Crs
2342 964 Crs
1989 1077 Crs
1744 1142 Crs
1564 1189 Crs
1426 1225 Crs
1318 1253 Crs
1230 1280 Crs
1158 1293 Crs
1097 1311 Crs
1045 1322 Crs
1000 1341 Crs
961 1345 Crs
927 1359 Crs
897 1368 Crs
869 1373 Crs
845 1381 Crs
834 1379 Crs
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
2991 701 DiaF
2519 908 DiaF
2193 1016 DiaF
1953 1087 DiaF
1770 1137 DiaF
1625 1165 DiaF
1508 1207 DiaF
1412 1231 DiaF
1330 1251 DiaF
1261 1273 DiaF
1201 1285 DiaF
1149 1294 DiaF
1104 1314 DiaF
1063 1320 DiaF
1027 1334 DiaF
995 1347 DiaF
980 1351 DiaF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
3091 631 Pls
2732 826 Pls
2457 927 Pls
2240 1002 Pls
2064 1053 Pls
1919 1095 Pls
1797 1131 Pls
1694 1161 Pls
1604 1181 Pls
1526 1205 Pls
1458 1218 Pls
1397 1237 Pls
1343 1253 Pls
1294 1265 Pls
1272 1276 Pls
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 96 3825 a @beginspecial 50 @llx 50 @lly
390 @urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/mean_power_collapsed_parkinson.eps
%!PS-Adobe-2.0
%%Title: mean_power_collapsed_parkinson.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:41:39 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (mean_power_collapsed_parkinson.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:41:39 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 569 M
63 0 V
stroke
324 569 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.0)]
] -40.0 MRshow
1.000 UL
LTb
396 898 M
63 0 V
stroke
324 898 M
[ [(Times-roman) 120.0 0.0 true true 0 (2.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1226 M
63 0 V
stroke
324 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 (3.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (4.0)]
] -40.0 MRshow
1.000 UL
LTb
396 240 M
0 63 V
stroke
396 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MCshow
1.000 UL
LTb
1325 240 M
0 63 V
stroke
1325 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MCshow
1.000 UL
LTb
2255 240 M
0 63 V
stroke
2255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 1.2)]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 1.6)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-2)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
2296 282 Star
2204 295 Star
2119 307 Star
2039 318 Star
1963 1346 Star
1892 1360 Star
1824 1358 Star
1760 1347 Star
1700 1337 Star
1643 1321 Star
1588 1306 Star
1537 1288 Star
1487 1274 Star
1440 1257 Star
1396 1240 Star
1353 1223 Star
1312 1207 Star
1272 1192 Star
1235 1175 Star
1199 1161 Star
1164 1145 Star
1131 1133 Star
1099 1118 Star
1068 1104 Star
1038 1095 Star
1010 1078 Star
982 1067 Star
956 1056 Star
930 1045 Star
905 1032 Star
881 1021 Star
858 1015 Star
836 1004 Star
814 992 Star
793 985 Star
772 972 Star
753 965 Star
733 954 Star
715 946 Star
697 935 Star
679 927 Star
662 916 Star
645 907 Star
629 898 Star
614 891 Star
598 884 Star
583 876 Star
569 869 Star
555 862 Star
541 854 Star
528 848 Star
1963 328 Star
1892 338 Star
1824 347 Star
1760 356 Star
1700 364 Star
1643 372 Star
1588 380 Star
1537 387 Star
1487 395 Star
1440 402 Star
1396 411 Star
1353 419 Star
1312 427 Star
1272 438 Star
1235 448 Star
1199 464 Star
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
2462 259 TriDF
2377 271 TriDF
2296 283 TriDF
2219 293 TriDF
2147 304 TriDF
2078 313 TriDF
2013 322 TriDF
1951 1351 TriDF
1892 1360 TriDF
1835 1355 TriDF
1781 1351 TriDF
1730 1341 TriDF
1681 1328 TriDF
1634 1314 TriDF
1588 1299 TriDF
1545 1284 TriDF
1504 1273 TriDF
1464 1261 TriDF
1425 1246 TriDF
1388 1233 TriDF
1353 1220 TriDF
1318 1208 TriDF
1285 1196 TriDF
1253 1182 TriDF
1223 1172 TriDF
1193 1160 TriDF
1164 1147 TriDF
1136 1134 TriDF
1109 1121 TriDF
1083 1113 TriDF
1058 1102 TriDF
1034 1092 TriDF
1010 1082 TriDF
987 1074 TriDF
964 1065 TriDF
943 1054 TriDF
922 1046 TriDF
901 1038 TriDF
881 1025 TriDF
862 1013 TriDF
843 1005 TriDF
825 997 TriDF
807 986 TriDF
789 979 TriDF
772 973 TriDF
756 963 TriDF
740 957 TriDF
2013 322 TriDF
1951 330 TriDF
1892 338 TriDF
1835 346 TriDF
1781 353 TriDF
1730 360 TriDF
1681 367 TriDF
1634 374 TriDF
1588 380 TriDF
1545 386 TriDF
1504 393 TriDF
1464 399 TriDF
1425 405 TriDF
1388 412 TriDF
1353 419 TriDF
1318 426 TriDF
1285 434 TriDF
1253 443 TriDF
1223 454 TriDF
1193 468 TriDF
1164 499 TriDF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
2437 267 CircleF
2365 273 CircleF
2296 283 CircleF
2230 292 CircleF
2167 301 CircleF
2107 309 CircleF
2050 317 CircleF
1995 1323 CircleF
1942 1352 CircleF
1892 1357 CircleF
1843 1352 CircleF
1796 1346 CircleF
1752 1336 CircleF
1709 1328 CircleF
1667 1319 CircleF
1627 1306 CircleF
1588 1298 CircleF
1551 1286 CircleF
1515 1277 CircleF
1481 1266 CircleF
1447 1253 CircleF
1415 1240 CircleF
1383 1232 CircleF
1353 1222 CircleF
1323 1209 CircleF
1295 1202 CircleF
1267 1189 CircleF
1240 1175 CircleF
1214 1168 CircleF
1189 1153 CircleF
1164 1149 CircleF
1140 1140 CircleF
1117 1128 CircleF
1094 1123 CircleF
1072 1113 CircleF
1051 1106 CircleF
1030 1093 CircleF
1010 1086 CircleF
990 1076 CircleF
971 1063 CircleF
952 1055 CircleF
2050 317 CircleF
1995 325 CircleF
1942 331 CircleF
1892 338 CircleF
1843 345 CircleF
1796 352 CircleF
1752 357 CircleF
1709 363 CircleF
1667 369 CircleF
1627 375 CircleF
1588 380 CircleF
1551 386 CircleF
1515 391 CircleF
1481 397 CircleF
1447 402 CircleF
1415 407 CircleF
1383 413 CircleF
1353 419 CircleF
1323 425 CircleF
1295 432 CircleF
1267 439 CircleF
1240 447 CircleF
1214 457 CircleF
1189 471 CircleF
1164 500 CircleF
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 1797 w @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/mean_power_collapsed_re_165.eps
%!PS-Adobe-2.0
%%Title: mean_power_collapsed_re_165.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:12:53 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (mean_power_collapsed_re_165.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:12:53 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 503 M
63 0 V
stroke
324 503 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.3)]
] -40.0 MRshow
1.000 UL
LTb
396 766 M
63 0 V
stroke
324 766 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.6)]
] -40.0 MRshow
1.000 UL
LTb
396 1029 M
63 0 V
stroke
324 1029 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.9)]
] -40.0 MRshow
1.000 UL
LTb
396 1292 M
63 0 V
stroke
324 1292 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.2)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.5)]
] -40.0 MRshow
1.000 UL
LTb
1325 240 M
0 63 V
stroke
1325 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MCshow
1.000 UL
LTb
2255 240 M
0 63 V
stroke
2255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-3)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
2899 729 Crs
2586 998 Crs
2342 1150 Crs
2148 1234 Crs
1989 1278 Crs
1856 1294 Crs
1744 1296 Crs
1647 1288 Crs
1564 1273 Crs
1491 1255 Crs
1426 1234 Crs
1369 1212 Crs
1318 1188 Crs
1272 1165 Crs
1230 1142 Crs
1192 1120 Crs
1158 1099 Crs
1126 1078 Crs
1097 1058 Crs
1070 1038 Crs
1045 1019 Crs
1022 1003 Crs
1000 986 Crs
980 969 Crs
961 952 Crs
943 936 Crs
927 921 Crs
911 906 Crs
897 893 Crs
883 880 Crs
869 869 Crs
857 858 Crs
845 843 Crs
834 832 Crs
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
2991 639 DiaF
2732 887 DiaF
2519 1047 DiaF
2342 1153 DiaF
2193 1220 DiaF
2064 1261 DiaF
1953 1284 DiaF
1856 1296 DiaF
1770 1297 DiaF
1694 1294 DiaF
1625 1286 DiaF
1564 1274 DiaF
1508 1261 DiaF
1458 1246 DiaF
1412 1231 DiaF
1369 1214 DiaF
1330 1197 DiaF
1294 1180 DiaF
1261 1164 DiaF
1230 1147 DiaF
1201 1130 DiaF
1175 1114 DiaF
1149 1098 DiaF
1126 1084 DiaF
1104 1068 DiaF
1083 1052 DiaF
1063 1038 DiaF
1045 1024 DiaF
1027 1011 DiaF
1011 999 DiaF
995 985 DiaF
980 974 DiaF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
3091 533 Pls
2899 736 Pls
2732 890 Pls
2586 1005 Pls
2457 1091 Pls
2342 1155 Pls
2240 1204 Pls
2148 1240 Pls
2064 1266 Pls
1989 1284 Pls
1919 1294 Pls
1856 1300 Pls
1797 1301 Pls
1744 1301 Pls
1694 1298 Pls
1647 1294 Pls
1604 1287 Pls
1564 1279 Pls
1526 1272 Pls
1491 1262 Pls
1458 1253 Pls
1426 1243 Pls
1397 1231 Pls
1369 1225 Pls
1343 1210 Pls
1318 1199 Pls
1294 1187 Pls
1272 1179 Pls
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial -1835 x @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/displacement_amp_collpased_re165.eps
%!PS-Adobe-2.0
%%Title: displacement_amp_collpased_re165.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Mon Nov 18 14:34:52 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (displacement_amp_collpased_re165.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 18 14:34:52 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 503 M
63 0 V
stroke
324 503 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1029 M
63 0 V
stroke
324 1029 M
[ [(Times-roman) 120.0 0.0 true true 0 (3.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (5.0)]
] -40.0 MRshow
1.000 UL
LTb
1325 240 M
0 63 V
stroke
1325 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
2255 240 M
0 63 V
stroke
2255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( )]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
2899 309 Crs
2342 383 Crs
1989 446 Crs
1744 506 Crs
1564 568 Crs
1426 628 Crs
1318 689 Crs
1230 748 Crs
1158 809 Crs
1097 873 Crs
1045 934 Crs
1000 994 Crs
961 1061 Crs
927 1121 Crs
897 1187 Crs
869 1250 Crs
845 1320 Crs
834 1360 Crs
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
2991 315 DiaF
2519 395 DiaF
2193 458 DiaF
1953 524 DiaF
1770 584 DiaF
1625 646 DiaF
1508 702 DiaF
1412 767 DiaF
1330 830 DiaF
1261 888 DiaF
1201 950 DiaF
1149 1018 DiaF
1104 1079 DiaF
1063 1145 DiaF
1027 1204 DiaF
995 1274 DiaF
980 1305 DiaF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
3091 323 Pls
2732 415 Pls
2457 485 Pls
2240 552 Pls
2064 618 Pls
1919 678 Pls
1797 741 Pls
1694 800 Pls
1604 865 Pls
1526 928 Pls
1458 993 Pls
1397 1053 Pls
1343 1115 Pls
1294 1184 Pls
1272 1214 Pls
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 1071 3902 a Ft(\005)1144 3917 y Fp(2)2983
3902 y Ft(\005)3056 3917 y Fp(2)51 2285 y Fr(V)p 48 2330
84 4 v 48 2421 a(D)53 1425 y(A)p 48 1469 V 48 1561 a(D)-8
3337 y(P)55 3352 y Fl(m)p -67 3382 246 4 v -67 3473 a
Fr(\032)p Fo(A)p Fr(U)139 3444 y Fp(3)1760 1190 y Fj(\(a\))1682
b(\(b\))1760 2085 y(\(c\))1687 b(\(d\))1760 3041 y(\(e\))1706
b(\(f)7 b(\))0 4085 y Fi(Figure)26 b(4:)37 b(Displacemen)n(t)27
b(amplitude,)h(v)n(elo)r(cit)n(y)e(amplitude)h(and)g(mean)g(p)r(o)n(w)n
(er)f(as)h(functions)g(of)g(the)g(mass-damping)0 4184
y(\005)62 4196 y Fa(2)100 4184 y Fi(.)45 b(Data)30 b(presen)n(ted)g(in)
g(\(a\),\(c\))i(and)e(\(e\))h(w)n(ere)e(calculated)h(using)g(input)h
(data)f(at)g Fh(R)q(e)d Fi(=)h(22300)g(obtained)i(b)n(y)g
Fe(?)45 b Fi(at)0 4284 y(three)33 b(di\013eren)n(t)g(damping)g(ratios:)
47 b Fh(\020)38 b Fi(=)32 b(0)p Fh(:)p Fi(0125)f(\()p
Fb(S)p Fi(\),)j Fh(\020)39 b Fi(=)32 b(0)p Fh(:)p Fi(015)f(\()p
Fb(t)p Fi(\))j(and)f Fh(\020)39 b Fi(=)32 b(0)p Fh(:)p
Fi(0175)e(\()p Fb(l)p Fi(\).)54 b(Data)33 b(presen)n(ted)g(in)0
4384 y(\(b\),)d(\(d\))f(and)f(\(f)6 b(\))30 b(w)n(ere)e(obtained)g
(using)h(input)g(data)f(at)h Fh(R)q(e)24 b Fi(=)g(165)j(at)i(three)f
(di\013eren)n(t)h(damping)f(ratios:)37 b Fh(\020)32 b
Fi(=)24 b(0)p Fh(:)p Fi(075)0 4483 y(\()p Fd(\002)p Fi(\),)32
b Fh(\020)j Fi(=)29 b(0)p Fh(:)p Fi(1)h(\()p Fb(u)p Fi(\))i(and)f
Fh(\020)k Fi(=)29 b(0)p Fh(:)p Fi(15)h(\(+\).)47 b(The)31
b(collapsed)f(data)h(implies)g(that)g(there)g(is)g(no)g(frequency)g
(selection)f(and)0 4583 y(the)d(tuning)f(parameter)f(of)h(the)g(mec)n
(hanical)g(side)g(of)g(the)g(system)g(is)g(the)h(damping)f(constan)n(t)
f(to)h(obtain)g(an)g(optim)n(um)0 4682 y(p)r(o)n(w)n(er)g(output.)p
Black Black 1888 5712 a Ft(9)p Black eop end
%%Page: 10 10
TeXDict begin 10 9 bop Black Black Black 0 311 3947 4
v 0 2273 4 1963 v 156 1311 a @beginspecial 50 @llx 50
@lly 390 @urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/spectrum_pi1_10_pi2_0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: spectrum_pi1_10_pi2_0.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Mon Jun  9 18:30:22 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (spectrum_pi1_10_pi2_0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jun  9 18:30:22 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-roman) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 6802.00 3400.00 BoxColFill} if
1.000 UL
LTb
660 400 M
63 0 V
660 860 M
63 0 V
stroke
540 860 M
[ [(Times-roman) 200.0 0.0 true true 0 (0.2)]
] -66.7 MRshow
1.000 UL
LTb
660 1320 M
63 0 V
stroke
540 1320 M
[ [(Times-roman) 200.0 0.0 true true 0 (0.4)]
] -66.7 MRshow
1.000 UL
LTb
660 1780 M
63 0 V
stroke
540 1780 M
[ [(Times-roman) 200.0 0.0 true true 0 (0.6)]
] -66.7 MRshow
1.000 UL
LTb
660 2239 M
63 0 V
stroke
540 2239 M
[ [(Times-roman) 200.0 0.0 true true 0 (0.8)]
] -66.7 MRshow
1.000 UL
LTb
660 2699 M
63 0 V
stroke
540 2699 M
[ [(Times-roman) 200.0 0.0 true true 0 (1.0)]
] -66.7 MRshow
1.000 UL
LTb
660 3159 M
63 0 V
stroke
540 3159 M
[ [(Times-roman) 200.0 0.0 true true 0 (1.2)]
] -66.7 MRshow
1.000 UL
LTb
660 400 M
0 63 V
stroke
660 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( )]
] -66.7 MCshow
1.000 UL
LTb
1816 400 M
0 63 V
stroke
1816 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( )]
] -66.7 MCshow
1.000 UL
LTb
2972 400 M
0 63 V
stroke
2972 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( )]
] -66.7 MCshow
1.000 UL
LTb
4129 400 M
0 63 V
stroke
4129 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( )]
] -66.7 MCshow
1.000 UL
LTb
5285 400 M
0 63 V
stroke
5285 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( )]
] -66.7 MCshow
1.000 UL
LTb
6441 400 M
0 63 V
stroke
6441 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( )]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
660 3159 N
660 400 L
5781 0 V
0 2759 V
-5781 0 V
Z stroke
1.000 UP
631 3242 M
[ [(Times-roman) 200.0 0.0 true true 0 (x 10)]
[(Times-roman) 160.0 100.0 true true 0 (-1)]
] -86.7 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Times-roman findfont 200 scalefont setfont
/vshift -66 def
660 425 M
17 0 V
18 1 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 1 V
17 0 V
18 0 V
17 1 V
17 0 V
17 1 V
18 1 V
17 0 V
17 1 V
17 1 V
18 1 V
17 1 V
17 1 V
17 2 V
18 1 V
17 2 V
17 1 V
17 4 V
18 4 V
17 2 V
17 -1 V
17 4 V
18 19 V
17 14 V
17 -12 V
18 -32 V
17 85 V
17 98 V
17 69 V
18 -58 V
17 -117 V
17 2441 V
17 -967 V
1368 923 L
17 -394 V
17 -22 V
17 60 V
18 -54 V
17 -34 V
17 -30 V
17 9 V
18 3 V
17 -12 V
17 -7 V
17 -4 V
18 0 V
17 -2 V
17 -4 V
17 -2 V
18 -2 V
17 -1 V
17 -2 V
18 -1 V
17 -2 V
17 -1 V
17 0 V
18 -1 V
17 -1 V
17 -1 V
17 0 V
18 -1 V
17 -1 V
17 0 V
17 -1 V
18 0 V
17 -1 V
17 0 V
17 -1 V
18 0 V
17 0 V
17 -1 V
17 0 V
18 0 V
17 -1 V
17 0 V
17 0 V
18 0 V
17 -1 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 -1 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 -1 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 3 V
17 -3 V
17 1 V
17 0 V
18 0 V
17 12 V
17 -4 V
18 -13 V
17 11 V
17 10 V
17 7 V
18 52 V
17 -70 V
17 -4 V
17 -5 V
18 -1 V
17 -2 V
17 0 V
17 0 V
18 1 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 1 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
18 -1 V
stroke 3163 403 M
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 1 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 -1 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 1 V
17 -1 V
18 0 V
17 0 V
17 1 V
17 0 V
18 -1 V
17 -1 V
17 1 V
17 2 V
18 3 V
17 1 V
17 -3 V
17 54 V
18 -39 V
17 -8 V
17 -5 V
17 -4 V
18 1 V
17 9 V
17 -8 V
17 -1 V
18 0 V
17 0 V
17 -1 V
18 0 V
17 0 V
17 0 V
17 0 V
18 -1 V
17 0 V
17 0 V
17 0 V
18 0 V
17 1 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 -1 V
17 0 V
17 0 V
17 0 V
18 0 V
17 1 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
17 0 V
18 1 V
17 0 V
18 1 V
17 0 V
17 0 V
17 0 V
17 0 V
stroke 4957 406 M
18 -1 V
17 0 V
17 -1 V
17 -1 V
18 0 V
17 1 V
17 2 V
17 3 V
18 3 V
17 0 V
17 4 V
18 3 V
17 8 V
17 10 V
17 23 V
18 -30 V
17 11 V
17 29 V
17 49 V
18 104 V
17 72 V
17 -278 V
17 19 V
18 -7 V
17 -11 V
17 -9 V
18 14 V
17 -7 V
17 -4 V
17 -3 V
17 -1 V
18 -2 V
17 -1 V
17 -2 V
17 -1 V
18 -1 V
17 0 V
17 1 V
18 0 V
17 1 V
17 0 V
17 0 V
18 0 V
17 0 V
17 -1 V
17 0 V
18 0 V
17 0 V
17 -1 V
17 0 V
18 0 V
17 -1 V
17 0 V
17 0 V
18 1 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 -1 V
18 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 1 V
17 0 V
18 0 V
17 0 V
17 0 V
17 0 V
18 0 V
17 0 V
17 0 V
18 0 V
16 0 V
% End plot #1
stroke
LTb
660 3159 N
660 400 L
5781 0 V
0 2759 V
-5781 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman

%%EndDocument
 @endspecial 1817 w @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/spectrum_pi1_10_pi2_0_3.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: spectrum_pi1_10_pi2_0_3.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Mon Jun  9 18:30:22 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (spectrum_pi1_10_pi2_0_3.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jun  9 18:30:22 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-roman) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 6802.00 3400.00 BoxColFill} if
1.000 UL
LTb
300 400 M
63 0 V
300 860 M
63 0 V
-63 460 R
63 0 V
-63 460 R
63 0 V
-63 459 R
63 0 V
-63 460 R
63 0 V
-63 460 R
63 0 V
300 400 M
0 63 V
1528 400 M
0 63 V
2756 400 M
0 63 V
3985 400 M
0 63 V
5213 400 M
0 63 V
6441 400 M
0 63 V
stroke
300 3159 N
300 400 L
6141 0 V
0 2759 V
-6141 0 V
Z stroke
1.000 UP
269 3242 M
[ [(Times-roman) 200.0 0.0 true true 0 (x 10)]
[(Times-roman) 160.0 100.0 true true 0 (-1)]
] -86.7 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Times-roman findfont 200 scalefont setfont
/vshift -66 def
300 406 M
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 1 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 1 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 1 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 1 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 1 V
5 0 V
6 0 V
6 0 V
5 0 V
6 1 V
6 0 V
5 0 V
6 0 V
6 1 V
5 0 V
6 1 V
6 0 V
5 1 V
6 0 V
6 0 V
5 1 V
6 0 V
6 0 V
5 0 V
6 1 V
6 2 V
5 2 V
6 2 V
stroke 889 423 M
6 2 V
5 1 V
6 1 V
6 -1 V
5 -2 V
6 3 V
6 -14 V
5 5 V
6 10 V
6 12 V
5 15 V
6 14 V
6 13 V
5 10 V
6 6 V
6 -1 V
5 -11 V
6 -24 V
6 -46 V
5 60 V
6 227 V
6 1953 V
5 -1337 V
6 -478 V
6 -153 V
5 -86 V
6 -61 V
6 -47 V
5 -37 V
6 -25 V
6 -11 V
5 6 V
6 7 V
6 5 V
5 2 V
6 -2 V
6 -2 V
5 2 V
6 -13 V
5 -4 V
6 -3 V
6 -1 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 -1 V
5 -1 V
6 -1 V
6 -1 V
5 -1 V
6 0 V
6 0 V
5 -1 V
6 0 V
6 0 V
5 0 V
6 -1 V
6 0 V
5 0 V
6 -1 V
6 0 V
5 0 V
6 -1 V
6 0 V
5 0 V
6 0 V
6 0 V
5 -1 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 -1 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 -1 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 -1 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
stroke 1478 405 M
6 0 V
5 0 V
6 0 V
6 0 V
5 -1 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 -1 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 -1 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
stroke 2067 402 M
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 -1 V
6 0 V
6 -1 V
5 1 V
6 2 V
6 11 V
5 -11 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 -1 V
6 0 V
6 1 V
5 1 V
6 1 V
6 2 V
5 3 V
6 4 V
6 12 V
5 30 V
6 -49 V
6 -5 V
5 -1 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 -1 V
6 1 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
stroke 2656 401 M
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
stroke 3245 401 M
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 1 V
6 -1 V
6 0 V
5 0 V
6 0 V
6 1 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 -1 V
6 0 V
6 2 V
5 5 V
6 35 V
6 -21 V
5 -13 V
6 -3 V
6 -2 V
5 -2 V
6 -1 V
5 0 V
6 -1 V
6 0 V
stroke 3834 400 M
6 0 V
5 1 V
6 0 V
6 0 V
5 0 V
6 -1 V
5 4 V
6 -2 V
6 -1 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
stroke 4423 401 M
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 -1 V
6 0 V
6 1 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 1 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 1 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 1 V
stroke 5012 404 M
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 1 V
5 0 V
6 0 V
5 0 V
6 0 V
6 -1 V
5 0 V
6 0 V
6 1 V
6 0 V
5 1 V
6 0 V
5 1 V
6 -5 V
6 5 V
5 2 V
6 1 V
6 3 V
6 2 V
5 4 V
6 5 V
5 5 V
6 6 V
6 6 V
5 7 V
6 7 V
6 10 V
6 16 V
5 49 V
6 208 V
5 -320 V
6 -6 V
6 6 V
5 2 V
6 0 V
6 -2 V
5 -3 V
6 -2 V
6 -3 V
5 -2 V
6 -1 V
6 0 V
5 0 V
6 1 V
6 1 V
5 -7 V
6 4 V
6 0 V
5 -1 V
6 0 V
6 -1 V
5 0 V
6 -1 V
6 0 V
5 0 V
6 0 V
5 0 V
6 -1 V
6 0 V
6 0 V
5 0 V
6 -1 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 1 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 -1 V
6 0 V
stroke 5601 401 M
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
stroke 6190 401 M
5 0 V
6 -1 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
2 0 V
% End plot #1
stroke
LTb
300 3159 N
300 400 L
6141 0 V
0 2759 V
-6141 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman

%%EndDocument
 @endspecial 156 2191 a @beginspecial 50 @llx 50 @lly
390 @urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/spectrum_pi1_10_pi2_0_54.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: spectrum_pi1_10_pi2_0_54.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Mon Jun  9 18:30:22 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (spectrum_pi1_10_pi2_0_54.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jun  9 18:30:22 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-roman) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 6802.00 3400.00 BoxColFill} if
1.000 UL
LTb
660 400 M
63 0 V
660 860 M
63 0 V
stroke
540 860 M
[ [(Times-roman) 200.0 0.0 true true 0 (0.2)]
] -66.7 MRshow
1.000 UL
LTb
660 1320 M
63 0 V
stroke
540 1320 M
[ [(Times-roman) 200.0 0.0 true true 0 (0.4)]
] -66.7 MRshow
1.000 UL
LTb
660 1780 M
63 0 V
stroke
540 1780 M
[ [(Times-roman) 200.0 0.0 true true 0 (0.6)]
] -66.7 MRshow
1.000 UL
LTb
660 2239 M
63 0 V
stroke
540 2239 M
[ [(Times-roman) 200.0 0.0 true true 0 (0.8)]
] -66.7 MRshow
1.000 UL
LTb
660 2699 M
63 0 V
stroke
540 2699 M
[ [(Times-roman) 200.0 0.0 true true 0 (1.0)]
] -66.7 MRshow
1.000 UL
LTb
660 3159 M
63 0 V
stroke
540 3159 M
[ [(Times-roman) 200.0 0.0 true true 0 (1.2)]
] -66.7 MRshow
1.000 UL
LTb
660 400 M
0 63 V
stroke
660 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1816 400 M
0 63 V
stroke
1816 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0.04)]
] -66.7 MCshow
1.000 UL
LTb
2972 400 M
0 63 V
stroke
2972 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0.08)]
] -66.7 MCshow
1.000 UL
LTb
4129 400 M
0 63 V
stroke
4129 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0.12)]
] -66.7 MCshow
1.000 UL
LTb
5285 400 M
0 63 V
stroke
5285 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0.16)]
] -66.7 MCshow
1.000 UL
LTb
6441 400 M
0 63 V
stroke
6441 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
660 3159 N
660 400 L
5781 0 V
0 2759 V
-5781 0 V
Z stroke
1.000 UP
631 3242 M
[ [(Times-roman) 200.0 0.0 true true 0 (x 10)]
[(Times-roman) 160.0 100.0 true true 0 (-1)]
] -86.7 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Times-roman findfont 200 scalefont setfont
/vshift -66 def
660 401 M
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 1 V
10 0 V
10 0 V
10 0 V
10 1 V
10 0 V
10 0 V
10 1 V
10 0 V
10 0 V
9 1 V
10 0 V
10 0 V
10 1 V
10 0 V
10 1 V
10 0 V
10 1 V
10 1 V
10 0 V
10 1 V
10 1 V
10 1 V
10 1 V
10 1 V
9 2 V
10 1 V
10 1 V
10 3 V
10 3 V
10 2 V
10 0 V
10 9 V
10 14 V
10 3 V
10 -19 V
10 32 V
10 105 V
10 114 V
9 62 V
10 1207 V
1335 824 L
10 -150 V
10 -137 V
10 -84 V
10 4 V
10 8 V
10 -14 V
10 -12 V
10 -3 V
10 -1 V
10 -4 V
10 -3 V
10 -2 V
9 -1 V
10 -2 V
10 -1 V
10 -1 V
10 -1 V
10 -1 V
10 -1 V
10 -1 V
10 -1 V
10 0 V
10 -1 V
10 0 V
10 -1 V
10 0 V
10 -1 V
9 0 V
10 -1 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
9 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
stroke 2368 404 M
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 -1 V
10 4 V
10 -1 V
9 -1 V
10 -1 V
10 2 V
10 24 V
10 -15 V
10 -4 V
10 -4 V
10 -1 V
10 1 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
stroke 3401 402 M
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
11 0 V
9 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 1 V
10 1 V
10 3 V
9 7 V
11 14 V
9 -24 V
10 3 V
10 -1 V
10 -1 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
11 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
11 0 V
9 -1 V
11 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
11 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
stroke 4434 401 M
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
11 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 1 V
10 0 V
9 0 V
11 0 V
9 0 V
10 -1 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 2 V
10 1 V
10 2 V
10 5 V
10 11 V
9 24 V
11 33 V
9 39 V
10 57 V
10 85 V
10 -207 V
10 -3 V
10 -17 V
10 -12 V
10 -2 V
10 -3 V
10 -2 V
10 -3 V
10 -2 V
10 -1 V
10 -1 V
9 -2 V
11 -1 V
9 -1 V
10 -1 V
10 0 V
10 -1 V
10 0 V
10 1 V
10 0 V
stroke 5467 403 M
10 0 V
10 1 V
10 0 V
10 0 V
10 0 V
9 1 V
11 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
9 0 V
11 -1 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 1 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 -1 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
10 0 V
9 0 V
10 0 V
10 0 V
10 0 V
1 0 V
% End plot #1
stroke
LTb
660 3159 N
660 400 L
5781 0 V
0 2759 V
-5781 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman

%%EndDocument
 @endspecial 1817 w @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/spectrum_pi1_10_pi2_0_7.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: spectrum_pi1_10_pi2_0_7.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Mon Jun  9 18:30:22 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (spectrum_pi1_10_pi2_0_7.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jun  9 18:30:22 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-roman) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 6802.00 3400.00 BoxColFill} if
1.000 UL
LTb
300 400 M
63 0 V
300 860 M
63 0 V
-63 460 R
63 0 V
-63 460 R
63 0 V
-63 459 R
63 0 V
-63 460 R
63 0 V
-63 460 R
63 0 V
300 400 M
0 63 V
stroke
300 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1528 400 M
0 63 V
stroke
1528 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0.04)]
] -66.7 MCshow
1.000 UL
LTb
2756 400 M
0 63 V
stroke
2756 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0.08)]
] -66.7 MCshow
1.000 UL
LTb
3985 400 M
0 63 V
stroke
3985 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0.12)]
] -66.7 MCshow
1.000 UL
LTb
5213 400 M
0 63 V
stroke
5213 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0.16)]
] -66.7 MCshow
1.000 UL
LTb
6441 400 M
0 63 V
stroke
6441 200 M
[ [(Times-roman) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
300 3159 N
300 400 L
6141 0 V
0 2759 V
-6141 0 V
Z stroke
1.000 UP
269 3242 M
[ [(Times-roman) 200.0 0.0 true true 0 (x 10)]
[(Times-roman) 160.0 100.0 true true 0 (-1)]
] -86.7 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
/Times-roman findfont 200 scalefont setfont
/vshift -66 def
300 404 M
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 1 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 1 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 1 V
5 0 V
5 0 V
5 0 V
stroke 832 408 M
5 0 V
6 1 V
5 0 V
5 0 V
5 1 V
5 0 V
5 0 V
5 0 V
5 1 V
5 0 V
6 1 V
5 0 V
5 1 V
5 0 V
5 1 V
5 1 V
5 1 V
5 1 V
6 0 V
5 1 V
5 2 V
5 4 V
5 3 V
5 0 V
5 -3 V
5 1 V
6 17 V
5 27 V
5 27 V
5 11 V
5 -22 V
5 -59 V
5 1177 V
5 -716 V
5 -252 V
6 -111 V
5 -68 V
5 -28 V
5 6 V
5 5 V
5 -4 V
5 -7 V
5 -6 V
6 -3 V
5 0 V
5 -1 V
5 -1 V
5 -2 V
5 -1 V
5 -1 V
5 -1 V
5 0 V
6 -1 V
5 -1 V
5 0 V
5 -1 V
5 0 V
5 0 V
5 -1 V
5 0 V
6 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
6 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
stroke 1365 403 M
5 -1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 -1 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
stroke 1897 401 M
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 -1 V
5 1 V
5 1 V
5 -1 V
5 0 V
5 0 V
5 0 V
6 2 V
5 7 V
5 1 V
5 -10 V
5 0 V
5 0 V
5 0 V
stroke 2429 401 M
5 -1 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
stroke 2962 400 M
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
stroke 3494 400 M
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 1 V
5 0 V
5 0 V
5 -1 V
5 1 V
5 2 V
5 9 V
5 1 V
6 -10 V
5 -2 V
5 0 V
5 0 V
5 0 V
5 -1 V
5 1 V
6 -1 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
stroke 4026 400 M
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
stroke 4558 400 M
6 0 V
5 0 V
5 0 V
5 1 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
5 0 V
6 1 V
5 0 V
5 0 V
5 0 V
5 1 V
5 0 V
5 0 V
6 1 V
4 0 V
6 1 V
5 0 V
stroke 5091 404 M
5 1 V
5 1 V
5 0 V
5 1 V
5 1 V
6 1 V
5 2 V
5 1 V
5 1 V
5 2 V
5 5 V
5 7 V
5 12 V
5 14 V
6 14 V
5 13 V
5 19 V
5 205 V
5 -259 V
5 -2 V
5 -9 V
5 -10 V
6 -7 V
5 -4 V
5 -2 V
5 -1 V
5 -1 V
5 -1 V
5 -1 V
5 -1 V
5 -1 V
6 -1 V
5 0 V
5 -1 V
5 0 V
5 -1 V
5 0 V
5 0 V
5 -1 V
5 0 V
6 0 V
5 0 V
5 -1 V
5 0 V
5 0 V
5 1 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 1 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 -1 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
stroke 5623 400 M
5 0 V
5 0 V
5 0 V
6 1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 -1 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
stroke 6155 400 M
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
4 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 0 V
5 0 V
4 0 V
% End plot #1
stroke
LTb
300 3159 N
300 400 L
6141 0 V
0 2759 V
-6141 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman

%%EndDocument
 @endspecial 1858 511 a Fj(\(a\))1683 b(\(b\))1858 1406
y(\(c\))1688 b(\(d\))p 3943 2273 V 0 2276 3947 4 v 0
2431 a Fi(Figure)32 b(5:)47 b(P)n(o)n(w)n(er)31 b(sp)r(ectrum)i(of)g(v)
n(elo)r(cit)n(y)f(at)h(four)f(di\013eren)n(t)h(damping)g(lev)n(els)f
(where)h(\(a\))g(\005)3052 2443 y Fa(2)3089 2431 y Fi(=)f(0,)i(\(b\))g
(\005)3491 2443 y Fa(2)3528 2431 y Fi(=)e(0,)i(\(c\))0
2530 y(\005)62 2542 y Fa(2)100 2530 y Fi(=)29 b(0)i(and)g(\(d\))h(\005)
636 2542 y Fa(2)674 2530 y Fi(=)d(0)i(at)g(\005)1008
2542 y Fa(1)1045 2530 y Fi(=)e(10)i(\()p Fh(U)1352 2500
y Fc(\003)1390 2530 y Fi(=)e(40\).)48 b(The)31 b(t)n(w)n(o)g(p)r(eaks)g
(presen)n(t)g(in)g(the)h(plots)f(represen)n(t)g(the)h(galloping)0
2630 y(signal)27 b(and)i(the)f(shedding)h(signal)e(where)h(the)h
(galloping)e(signal)g(is)h(represen)n(ted)f(b)n(y)h(the)h(large)e(p)r
(eak.)39 b(The)29 b(galloping)0 2729 y(tends)f(to)f(get)h(w)n(eak)n(er)
d(as)i(\005)900 2741 y Fa(2)965 2729 y Fi(is)h(increased)e(while)i
(shedding)g(remains)e(constan)n(t)p Black 0 3011 a Ft(ratio)42
b(is)g(increased.)74 b(comparing)43 b(Figures)g(3)e(and)i(4)f(it)g(is)g
(eviden)m(t)j(that)c(the)i(v)m(elo)s(cit)m(y)h(and)e(mean)0
3132 y(p)s(o)m(w)m(er)h(data)g(are)f(w)m(ell)i(collapsed)g(when)f
(represen)m(ted)i(b)m(y)f(\005)2346 3147 y Fp(2)2385
3132 y Ft(deriv)m(ed)h(using)e(natural)f(time)h(scales)0
3252 y(earlier)33 b(in)h(this)f(article)h(compared)g(to)e(the)i(con)m
(v)m(en)m(tional)h(VIV)e(parameters.)46 b(Th)m(us)34
b(reinforcing)g(the)0 3372 y(fact)e(that)h(unlik)m(e)h(in)f(VIV)g(p)s
(o)m(w)m(er)g(transfer)g(is)g(not)g(b)s(ounded)g(b)m(y)h(a)e(resonan)m
(t)h(range)g(of)f(frequencies.)0 3592 y Fn(3.2.)49 b(limitations)34
b(of)h(the)g(quasi-ste)-5 b(ady)34 b(hyp)-5 b(othesis)35
b(at)g(low)f(R)-5 b(eynolds)34 b(numb)-5 b(ers)146 3738
y Fs(?)68 b Ft(sho)m(w)m(ed)42 b(that)f(the)g(displacemen)m(t)i(data)d
(obtained)h(using)h(the)f(QSS)f(assumption)i(and)f(DNS)0
3858 y(agree)35 b(w)m(ell)i(at)e(lo)m(w)h(Reynolds)h(n)m(um)m(b)s(ers,)
h(with)e(the)f(mo)s(di\014cation)h(implemen)m(ted)i(to)d(the)h
(oscillator)0 3978 y(equation)30 b(whic)m(h)h(accoun)m(ts)f(for)f(the)h
(v)m(ortex)g(shedding.)44 b(These)31 b(data)e(w)m(ere)i(obtained)e(at)g
(zero)h(damp-)0 4099 y(ing)i(lev)m(els.)46 b(Since)33
b(the)g(curren)m(t)g(study)h(w)m(as)f(fo)s(cused)g(on)f(the)h(p)s(o)m
(w)m(er)g(transfer,)f(more)h(fo)s(cus)g(w)m(as)g(put)0
4219 y(on)k(analyzing)h(he)g(b)s(eha)m(viour)h(o)s(d)e(the)h(v)m(elo)s
(cit)m(y)h(as)e(the)h(damping)g(is)g(increased.)60 b(The)38
b(comparison)0 4340 y(b)s(et)m(w)m(een)43 b(the)f(QSS)f(and)h(the)f
(DNS)g(results)i(rev)m(ealed)g(that)e(the)g(discrepancy)j(of)d(the)g(p)
s(o)m(w)m(er)h(data)0 4460 y(increases)31 b(signi\014can)m(tly)f(as)f
(\005)1131 4475 y Fp(2)1200 4460 y Ft(is)g(increased.)44
b(F)-8 b(rom)28 b(\014gure)h(5)g(\(p)s(o)m(w)m(ers)h(sp)s(ectrum)g
(analysis)g(done)f(on)0 4580 y(the)37 b(DNS)g(results\))h(it)f(is)h
(eviden)m(t)h(that)d(the)i(relativ)m(e)g(strength)g(of)e(the)i
(galloping)e(signal)i(decreases)0 4701 y(as)g(the)h(\005)372
4716 y Fp(2)449 4701 y Ft(is)g(increased)g(from)f(0)f
Fo(!)g Ft(0)p Fr(:)p Ft(7.)59 b(Therefore)39 b(the)g(in\015uence)h(of)d
(the)i(v)m(ortex)g(shedding)g(b)s(e-)0 4821 y(comes)33
b(more)f(signi\014can)m(t)h(and)f(the)g(in)m(teractions)h(b)s(et)m(w)m
(een)h(galloping)e(and)g(shedding)h(b)s(ecome)g(more)0
4942 y(complex)h(as)f(the)g(damping)g(is)g(increased.)p
Black 1864 5712 a(10)p Black eop end
%%Page: 11 11
TeXDict begin 11 10 bop Black Black Black 0 1669 3947
4 v 0 3631 4 1963 v 156 2669 a @beginspecial 50 @llx
50 @lly 390 @urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/mean_power_re_parkinson.eps
%!PS-Adobe-2.0
%%Title: mean_power_re_parkinson.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:41:38 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (mean_power_re_parkinson.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:41:38 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 569 M
63 0 V
stroke
324 569 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.0)]
] -40.0 MRshow
1.000 UL
LTb
396 898 M
63 0 V
stroke
324 898 M
[ [(Times-roman) 120.0 0.0 true true 0 (2.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1226 M
63 0 V
stroke
324 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 (3.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (4.0)]
] -40.0 MRshow
1.000 UL
LTb
954 240 M
0 63 V
stroke
954 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 200)]
] -40.0 MCshow
1.000 UL
LTb
2069 240 M
0 63 V
stroke
2069 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 300)]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 400)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-2)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
396 282 Star
452 295 Star
508 307 Star
563 318 Star
619 1346 Star
675 1360 Star
731 1358 Star
786 1347 Star
842 1337 Star
898 1321 Star
954 1306 Star
1009 1288 Star
1065 1274 Star
1121 1257 Star
1177 1240 Star
1232 1223 Star
1288 1207 Star
1344 1192 Star
1400 1175 Star
1455 1161 Star
1511 1145 Star
1567 1133 Star
1623 1118 Star
1678 1104 Star
1734 1095 Star
1790 1078 Star
1846 1067 Star
1902 1056 Star
1957 1045 Star
2013 1032 Star
2069 1021 Star
2125 1015 Star
2180 1004 Star
2236 992 Star
2292 985 Star
2348 972 Star
2403 965 Star
2459 954 Star
2515 946 Star
2571 935 Star
2626 927 Star
2682 916 Star
2738 907 Star
2794 898 Star
2849 891 Star
2905 884 Star
2961 876 Star
3017 869 Star
3072 862 Star
3128 854 Star
3184 848 Star
619 328 Star
675 338 Star
731 347 Star
786 356 Star
842 364 Star
898 372 Star
954 380 Star
1009 387 Star
1065 395 Star
1121 402 Star
1177 411 Star
1232 419 Star
1288 427 Star
1344 438 Star
1400 448 Star
1455 464 Star
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
619 259 TriDF
675 271 TriDF
731 283 TriDF
786 293 TriDF
842 304 TriDF
898 313 TriDF
954 322 TriDF
1009 1351 TriDF
1065 1360 TriDF
1121 1355 TriDF
1177 1351 TriDF
1232 1341 TriDF
1288 1328 TriDF
1344 1314 TriDF
1400 1299 TriDF
1455 1284 TriDF
1511 1273 TriDF
1567 1261 TriDF
1623 1246 TriDF
1678 1233 TriDF
1734 1220 TriDF
1790 1208 TriDF
1846 1196 TriDF
1902 1182 TriDF
1957 1172 TriDF
2013 1160 TriDF
2069 1147 TriDF
2125 1134 TriDF
2180 1121 TriDF
2236 1113 TriDF
2292 1102 TriDF
2348 1092 TriDF
2403 1082 TriDF
2459 1074 TriDF
2515 1065 TriDF
2571 1054 TriDF
2626 1046 TriDF
2682 1038 TriDF
2738 1025 TriDF
2794 1013 TriDF
2849 1005 TriDF
2905 997 TriDF
2961 986 TriDF
3017 979 TriDF
3072 973 TriDF
3128 963 TriDF
3184 957 TriDF
954 322 TriDF
1009 330 TriDF
1065 338 TriDF
1121 346 TriDF
1177 353 TriDF
1232 360 TriDF
1288 367 TriDF
1344 374 TriDF
1400 380 TriDF
1455 386 TriDF
1511 393 TriDF
1567 399 TriDF
1623 405 TriDF
1678 412 TriDF
1734 419 TriDF
1790 426 TriDF
1846 434 TriDF
1902 443 TriDF
1957 454 TriDF
2013 468 TriDF
2069 499 TriDF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
954 267 CircleF
1009 273 CircleF
1065 283 CircleF
1121 292 CircleF
1177 301 CircleF
1232 309 CircleF
1288 317 CircleF
1344 1323 CircleF
1400 1352 CircleF
1455 1357 CircleF
1511 1352 CircleF
1567 1346 CircleF
1623 1336 CircleF
1678 1328 CircleF
1734 1319 CircleF
1790 1306 CircleF
1846 1298 CircleF
1902 1286 CircleF
1957 1277 CircleF
2013 1266 CircleF
2069 1253 CircleF
2125 1240 CircleF
2180 1232 CircleF
2236 1222 CircleF
2292 1209 CircleF
2348 1202 CircleF
2403 1189 CircleF
2459 1175 CircleF
2515 1168 CircleF
2571 1153 CircleF
2626 1149 CircleF
2682 1140 CircleF
2738 1128 CircleF
2794 1123 CircleF
2849 1113 CircleF
2905 1106 CircleF
2961 1093 CircleF
3017 1086 CircleF
3072 1076 CircleF
3128 1063 CircleF
3184 1055 CircleF
1288 317 CircleF
1344 325 CircleF
1400 331 CircleF
1455 338 CircleF
1511 345 CircleF
1567 352 CircleF
1623 357 CircleF
1678 363 CircleF
1734 369 CircleF
1790 375 CircleF
1846 380 CircleF
1902 386 CircleF
1957 391 CircleF
2013 397 CircleF
2069 402 CircleF
2125 407 CircleF
2180 413 CircleF
2236 419 CircleF
2292 425 CircleF
2348 432 CircleF
2403 439 CircleF
2459 447 CircleF
2515 457 CircleF
2571 471 CircleF
2626 500 CircleF
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 1817 w @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/mean_power_re_165.eps
%!PS-Adobe-2.0
%%Title: mean_power_re_165.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:12:53 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (mean_power_re_165.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:12:53 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 503 M
63 0 V
stroke
324 503 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.3)]
] -40.0 MRshow
1.000 UL
LTb
396 766 M
63 0 V
stroke
324 766 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.6)]
] -40.0 MRshow
1.000 UL
LTb
396 1029 M
63 0 V
stroke
324 1029 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.9)]
] -40.0 MRshow
1.000 UL
LTb
396 1292 M
63 0 V
stroke
324 1292 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.2)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.5)]
] -40.0 MRshow
1.000 UL
LTb
396 240 M
0 63 V
stroke
396 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1093 240 M
0 63 V
stroke
1093 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 50)]
] -40.0 MCshow
1.000 UL
LTb
1790 240 M
0 63 V
stroke
1790 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 100)]
] -40.0 MCshow
1.000 UL
LTb
2487 240 M
0 63 V
stroke
2487 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 150)]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 200)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-3)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
814 377 Crs
884 729 Crs
954 998 Crs
1023 1150 Crs
1093 1234 Crs
1163 1278 Crs
1232 1294 Crs
1302 1296 Crs
1372 1288 Crs
1442 1273 Crs
1511 1255 Crs
1581 1234 Crs
1651 1212 Crs
1720 1188 Crs
1790 1165 Crs
1860 1142 Crs
1929 1120 Crs
1999 1099 Crs
2069 1078 Crs
2139 1058 Crs
2208 1038 Crs
2278 1019 Crs
2348 1003 Crs
2417 986 Crs
2487 969 Crs
2557 952 Crs
2626 936 Crs
2696 921 Crs
2766 906 Crs
2836 893 Crs
2905 880 Crs
2975 869 Crs
3045 858 Crs
3114 843 Crs
3184 832 Crs
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
954 372 DiaF
1023 639 DiaF
1093 887 DiaF
1163 1047 DiaF
1232 1153 DiaF
1302 1220 DiaF
1372 1261 DiaF
1442 1284 DiaF
1511 1296 DiaF
1581 1297 DiaF
1651 1294 DiaF
1720 1286 DiaF
1790 1274 DiaF
1860 1261 DiaF
1929 1246 DiaF
1999 1231 DiaF
2069 1214 DiaF
2139 1197 DiaF
2208 1180 DiaF
2278 1164 DiaF
2348 1147 DiaF
2417 1130 DiaF
2487 1114 DiaF
2557 1098 DiaF
2626 1084 DiaF
2696 1068 DiaF
2766 1052 DiaF
2836 1038 DiaF
2905 1024 DiaF
2975 1011 DiaF
3045 999 DiaF
3114 985 DiaF
3184 974 DiaF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
1302 533 Pls
1372 736 Pls
1442 890 Pls
1511 1005 Pls
1581 1091 Pls
1651 1155 Pls
1720 1204 Pls
1790 1240 Pls
1860 1266 Pls
1929 1284 Pls
1999 1294 Pls
2069 1300 Pls
2139 1301 Pls
2208 1301 Pls
2278 1298 Pls
2348 1294 Pls
2417 1287 Pls
2487 1279 Pls
2557 1272 Pls
2626 1262 Pls
2696 1253 Pls
2766 1243 Pls
2836 1231 Pls
2905 1225 Pls
2975 1210 Pls
3045 1199 Pls
3114 1187 Pls
3184 1179 Pls
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 156 3549 a @beginspecial 50 @llx 50 @lly
390 @urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/mean_power_collapsed_parkinson.eps
%!PS-Adobe-2.0
%%Title: mean_power_collapsed_parkinson.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:41:39 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (mean_power_collapsed_parkinson.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:41:39 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 569 M
63 0 V
stroke
324 569 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.0)]
] -40.0 MRshow
1.000 UL
LTb
396 898 M
63 0 V
stroke
324 898 M
[ [(Times-roman) 120.0 0.0 true true 0 (2.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1226 M
63 0 V
stroke
324 1226 M
[ [(Times-roman) 120.0 0.0 true true 0 (3.0)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (4.0)]
] -40.0 MRshow
1.000 UL
LTb
396 240 M
0 63 V
stroke
396 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MCshow
1.000 UL
LTb
1325 240 M
0 63 V
stroke
1325 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MCshow
1.000 UL
LTb
2255 240 M
0 63 V
stroke
2255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 1.2)]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 1.6)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-2)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
2296 282 Star
2204 295 Star
2119 307 Star
2039 318 Star
1963 1346 Star
1892 1360 Star
1824 1358 Star
1760 1347 Star
1700 1337 Star
1643 1321 Star
1588 1306 Star
1537 1288 Star
1487 1274 Star
1440 1257 Star
1396 1240 Star
1353 1223 Star
1312 1207 Star
1272 1192 Star
1235 1175 Star
1199 1161 Star
1164 1145 Star
1131 1133 Star
1099 1118 Star
1068 1104 Star
1038 1095 Star
1010 1078 Star
982 1067 Star
956 1056 Star
930 1045 Star
905 1032 Star
881 1021 Star
858 1015 Star
836 1004 Star
814 992 Star
793 985 Star
772 972 Star
753 965 Star
733 954 Star
715 946 Star
697 935 Star
679 927 Star
662 916 Star
645 907 Star
629 898 Star
614 891 Star
598 884 Star
583 876 Star
569 869 Star
555 862 Star
541 854 Star
528 848 Star
1963 328 Star
1892 338 Star
1824 347 Star
1760 356 Star
1700 364 Star
1643 372 Star
1588 380 Star
1537 387 Star
1487 395 Star
1440 402 Star
1396 411 Star
1353 419 Star
1312 427 Star
1272 438 Star
1235 448 Star
1199 464 Star
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
2462 259 TriDF
2377 271 TriDF
2296 283 TriDF
2219 293 TriDF
2147 304 TriDF
2078 313 TriDF
2013 322 TriDF
1951 1351 TriDF
1892 1360 TriDF
1835 1355 TriDF
1781 1351 TriDF
1730 1341 TriDF
1681 1328 TriDF
1634 1314 TriDF
1588 1299 TriDF
1545 1284 TriDF
1504 1273 TriDF
1464 1261 TriDF
1425 1246 TriDF
1388 1233 TriDF
1353 1220 TriDF
1318 1208 TriDF
1285 1196 TriDF
1253 1182 TriDF
1223 1172 TriDF
1193 1160 TriDF
1164 1147 TriDF
1136 1134 TriDF
1109 1121 TriDF
1083 1113 TriDF
1058 1102 TriDF
1034 1092 TriDF
1010 1082 TriDF
987 1074 TriDF
964 1065 TriDF
943 1054 TriDF
922 1046 TriDF
901 1038 TriDF
881 1025 TriDF
862 1013 TriDF
843 1005 TriDF
825 997 TriDF
807 986 TriDF
789 979 TriDF
772 973 TriDF
756 963 TriDF
740 957 TriDF
2013 322 TriDF
1951 330 TriDF
1892 338 TriDF
1835 346 TriDF
1781 353 TriDF
1730 360 TriDF
1681 367 TriDF
1634 374 TriDF
1588 380 TriDF
1545 386 TriDF
1504 393 TriDF
1464 399 TriDF
1425 405 TriDF
1388 412 TriDF
1353 419 TriDF
1318 426 TriDF
1285 434 TriDF
1253 443 TriDF
1223 454 TriDF
1193 468 TriDF
1164 499 TriDF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
2437 267 CircleF
2365 273 CircleF
2296 283 CircleF
2230 292 CircleF
2167 301 CircleF
2107 309 CircleF
2050 317 CircleF
1995 1323 CircleF
1942 1352 CircleF
1892 1357 CircleF
1843 1352 CircleF
1796 1346 CircleF
1752 1336 CircleF
1709 1328 CircleF
1667 1319 CircleF
1627 1306 CircleF
1588 1298 CircleF
1551 1286 CircleF
1515 1277 CircleF
1481 1266 CircleF
1447 1253 CircleF
1415 1240 CircleF
1383 1232 CircleF
1353 1222 CircleF
1323 1209 CircleF
1295 1202 CircleF
1267 1189 CircleF
1240 1175 CircleF
1214 1168 CircleF
1189 1153 CircleF
1164 1149 CircleF
1140 1140 CircleF
1117 1128 CircleF
1094 1123 CircleF
1072 1113 CircleF
1051 1106 CircleF
1030 1093 CircleF
1010 1086 CircleF
990 1076 CircleF
971 1063 CircleF
952 1055 CircleF
2050 317 CircleF
1995 325 CircleF
1942 331 CircleF
1892 338 CircleF
1843 345 CircleF
1796 352 CircleF
1752 357 CircleF
1709 363 CircleF
1667 369 CircleF
1627 375 CircleF
1588 380 CircleF
1551 386 CircleF
1515 391 CircleF
1481 397 CircleF
1447 402 CircleF
1415 407 CircleF
1383 413 CircleF
1353 419 CircleF
1323 425 CircleF
1295 432 CircleF
1267 439 CircleF
1240 447 CircleF
1214 457 CircleF
1189 471 CircleF
1164 500 CircleF
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 1817 w @beginspecial 50 @llx 50 @lly 390
@urx 220 @ury 2295 @rwi @setspecial
%%BeginDocument: ../FnP/gnuplot/mean_power_collapsed_re_165.eps
%!PS-Adobe-2.0
%%Title: mean_power_collapsed_re_165.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Wed Aug 21 15:12:53 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 390 220
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 390 50 lineto 390 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (mean_power_collapsed_re_165.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (hgjay)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 21 15:12:53 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-roman) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
396 503 M
63 0 V
stroke
324 503 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.3)]
] -40.0 MRshow
1.000 UL
LTb
396 766 M
63 0 V
stroke
324 766 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.6)]
] -40.0 MRshow
1.000 UL
LTb
396 1029 M
63 0 V
stroke
324 1029 M
[ [(Times-roman) 120.0 0.0 true true 0 (0.9)]
] -40.0 MRshow
1.000 UL
LTb
396 1292 M
63 0 V
stroke
324 1292 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.2)]
] -40.0 MRshow
1.000 UL
LTb
396 1555 M
63 0 V
stroke
324 1555 M
[ [(Times-roman) 120.0 0.0 true true 0 (1.5)]
] -40.0 MRshow
1.000 UL
LTb
1325 240 M
0 63 V
stroke
1325 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MCshow
1.000 UL
LTb
2255 240 M
0 63 V
stroke
2255 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MCshow
1.000 UL
LTb
3184 240 M
0 63 V
stroke
3184 120 M
[ [(Times-roman) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
368 1621 M
[ [(Times-roman) 120.0 0.0 true true 0 (x 10)]
[(Times-roman) 96.0 60.0 true true 0 (-3)]
] -52.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-roman findfont 120 scalefont setfont
2899 729 Crs
2586 998 Crs
2342 1150 Crs
2148 1234 Crs
1989 1278 Crs
1856 1294 Crs
1744 1296 Crs
1647 1288 Crs
1564 1273 Crs
1491 1255 Crs
1426 1234 Crs
1369 1212 Crs
1318 1188 Crs
1272 1165 Crs
1230 1142 Crs
1192 1120 Crs
1158 1099 Crs
1126 1078 Crs
1097 1058 Crs
1070 1038 Crs
1045 1019 Crs
1022 1003 Crs
1000 986 Crs
980 969 Crs
961 952 Crs
943 936 Crs
927 921 Crs
911 906 Crs
897 893 Crs
883 880 Crs
869 869 Crs
857 858 Crs
845 843 Crs
834 832 Crs
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
/Times-roman findfont 120 scalefont setfont
2991 639 DiaF
2732 887 DiaF
2519 1047 DiaF
2342 1153 DiaF
2193 1220 DiaF
2064 1261 DiaF
1953 1284 DiaF
1856 1296 DiaF
1770 1297 DiaF
1694 1294 DiaF
1625 1286 DiaF
1564 1274 DiaF
1508 1261 DiaF
1458 1246 DiaF
1412 1231 DiaF
1369 1214 DiaF
1330 1197 DiaF
1294 1180 DiaF
1261 1164 DiaF
1230 1147 DiaF
1201 1130 DiaF
1175 1114 DiaF
1149 1098 DiaF
1126 1084 DiaF
1104 1068 DiaF
1083 1052 DiaF
1063 1038 DiaF
1045 1024 DiaF
1027 1011 DiaF
1011 999 DiaF
995 985 DiaF
980 974 DiaF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
/Times-roman findfont 120 scalefont setfont
3091 533 Pls
2899 736 Pls
2732 890 Pls
2586 1005 Pls
2457 1091 Pls
2342 1155 Pls
2240 1204 Pls
2148 1240 Pls
2064 1266 Pls
1989 1284 Pls
1919 1294 Pls
1856 1300 Pls
1797 1301 Pls
1744 1301 Pls
1694 1298 Pls
1647 1294 Pls
1604 1287 Pls
1564 1279 Pls
1526 1272 Pls
1491 1262 Pls
1458 1253 Pls
1426 1243 Pls
1397 1231 Pls
1369 1225 Pls
1343 1210 Pls
1318 1199 Pls
1294 1187 Pls
1272 1179 Pls
% End plot #3
1.000 UL
LTb
396 1555 N
396 240 L
2788 0 V
0 1315 V
-2788 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-roman
%%Pages: 1

%%EndDocument
 @endspecial 1858 1870 a Fj(\(a\))1683 b(\(b\))1858 2765
y(\(c\))1688 b(\(d\))p 3943 3631 V 0 3634 3947 4 v 0
3789 a Fi(Figure)32 b(6:)47 b(P)n(o)n(w)n(er)31 b(sp)r(ectrum)i(of)g(v)
n(elo)r(cit)n(y)f(at)h(four)f(di\013eren)n(t)h(damping)g(lev)n(els)f
(where)h(\(a\))g(\005)3052 3801 y Fa(2)3089 3789 y Fi(=)f(0,)i(\(b\))g
(\005)3491 3801 y Fa(2)3528 3789 y Fi(=)e(0,)i(\(c\))0
3889 y(\005)62 3901 y Fa(2)100 3889 y Fi(=)29 b(0)i(and)g(\(d\))h(\005)
636 3901 y Fa(2)674 3889 y Fi(=)d(0)i(at)g(\005)1008
3901 y Fa(1)1045 3889 y Fi(=)e(10)i(\()p Fh(U)1352 3859
y Fc(\003)1390 3889 y Fi(=)e(40\).)48 b(The)31 b(t)n(w)n(o)g(p)r(eaks)g
(presen)n(t)g(in)g(the)h(plots)f(represen)n(t)g(the)h(galloping)0
3988 y(signal)27 b(and)i(the)f(shedding)h(signal)e(where)h(the)h
(galloping)e(signal)g(is)h(represen)n(ted)f(b)n(y)h(the)h(large)e(p)r
(eak.)39 b(The)29 b(galloping)0 4088 y(tends)f(to)f(get)h(w)n(eak)n(er)
d(as)i(\005)900 4100 y Fa(2)965 4088 y Fi(is)h(increased)e(while)i
(shedding)g(remains)e(constan)n(t)p Black Black 1864
5712 a Ft(11)p Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
